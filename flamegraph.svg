<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1478" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1461.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1461.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf (4 samples, 0.55%)</title><rect x="0.0000%" y="1413" width="0.5495%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1423.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1397" width="0.5495%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1407.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1381" width="0.5495%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1391.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1365" width="0.5495%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1375.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1349" width="0.5495%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="1359.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1333" width="0.5495%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="1343.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1317" width="0.5495%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="1327.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1301" width="0.5495%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="1311.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1285" width="0.5495%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="1295.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1269" width="0.5495%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="1279.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1253" width="0.5495%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="1263.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1237" width="0.5495%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="1247.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1221" width="0.5495%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="1231.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="0.0000%" y="1205" width="0.5495%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="1215.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::remove (1 samples, 0.14%)</title><rect x="0.6868%" y="1381" width="0.1374%" height="15" fill="rgb(217,207,13)"/><text x="0.9368%" y="1391.50"></text></g><g><title>[anon] (2 samples, 0.27%)</title><rect x="0.6868%" y="1397" width="0.2747%" height="15" fill="rgb(231,73,38)"/><text x="0.9368%" y="1407.50"></text></g><g><title>tokio::time::driver::Driver&lt;T&gt;::process (1 samples, 0.14%)</title><rect x="0.8242%" y="1381" width="0.1374%" height="15" fill="rgb(225,20,46)"/><text x="1.0742%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1381" width="0.1374%" height="15" fill="rgb(210,31,41)"/><text x="1.3489%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1365" width="0.1374%" height="15" fill="rgb(221,200,47)"/><text x="1.3489%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1349" width="0.1374%" height="15" fill="rgb(226,26,5)"/><text x="1.3489%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1333" width="0.1374%" height="15" fill="rgb(249,33,26)"/><text x="1.3489%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1317" width="0.1374%" height="15" fill="rgb(235,183,28)"/><text x="1.3489%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1301" width="0.1374%" height="15" fill="rgb(221,5,38)"/><text x="1.3489%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1285" width="0.1374%" height="15" fill="rgb(247,18,42)"/><text x="1.3489%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1269" width="0.1374%" height="15" fill="rgb(241,131,45)"/><text x="1.3489%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1253" width="0.1374%" height="15" fill="rgb(249,31,29)"/><text x="1.3489%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1237" width="0.1374%" height="15" fill="rgb(225,111,53)"/><text x="1.3489%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1221" width="0.1374%" height="15" fill="rgb(238,160,17)"/><text x="1.3489%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1205" width="0.1374%" height="15" fill="rgb(214,148,48)"/><text x="1.3489%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1189" width="0.1374%" height="15" fill="rgb(232,36,49)"/><text x="1.3489%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1173" width="0.1374%" height="15" fill="rgb(209,103,24)"/><text x="1.3489%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1157" width="0.1374%" height="15" fill="rgb(229,88,8)"/><text x="1.3489%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1141" width="0.1374%" height="15" fill="rgb(213,181,19)"/><text x="1.3489%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1125" width="0.1374%" height="15" fill="rgb(254,191,54)"/><text x="1.3489%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1109" width="0.1374%" height="15" fill="rgb(241,83,37)"/><text x="1.3489%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1093" width="0.1374%" height="15" fill="rgb(233,36,39)"/><text x="1.3489%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="1.0989%" y="1077" width="0.1374%" height="15" fill="rgb(226,3,54)"/><text x="1.3489%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.14%)</title><rect x="1.2363%" y="1141" width="0.1374%" height="15" fill="rgb(245,192,40)"/><text x="1.4863%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.14%)</title><rect x="1.2363%" y="1125" width="0.1374%" height="15" fill="rgb(238,167,29)"/><text x="1.4863%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="1.2363%" y="1109" width="0.1374%" height="15" fill="rgb(232,182,51)"/><text x="1.4863%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="1.2363%" y="1093" width="0.1374%" height="15" fill="rgb(231,60,39)"/><text x="1.4863%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="1.2363%" y="1077" width="0.1374%" height="15" fill="rgb(208,69,12)"/><text x="1.4863%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="1.2363%" y="1061" width="0.1374%" height="15" fill="rgb(235,93,37)"/><text x="1.4863%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="1.2363%" y="1045" width="0.1374%" height="15" fill="rgb(213,116,39)"/><text x="1.4863%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="1.2363%" y="1029" width="0.1374%" height="15" fill="rgb(222,207,29)"/><text x="1.4863%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="1.2363%" y="1013" width="0.1374%" height="15" fill="rgb(206,96,30)"/><text x="1.4863%" y="1023.50"></text></g><g><title>rumq_broker::router (2 samples, 0.27%)</title><rect x="1.2363%" y="1381" width="0.2747%" height="15" fill="rgb(218,138,4)"/><text x="1.4863%" y="1391.50"></text></g><g><title>tokio::runtime::Runtime::block_on (2 samples, 0.27%)</title><rect x="1.2363%" y="1365" width="0.2747%" height="15" fill="rgb(250,191,14)"/><text x="1.4863%" y="1375.50"></text></g><g><title>tokio::runtime::handle::Handle::enter (2 samples, 0.27%)</title><rect x="1.2363%" y="1349" width="0.2747%" height="15" fill="rgb(239,60,40)"/><text x="1.4863%" y="1359.50"></text></g><g><title>tokio::runtime::context::enter (2 samples, 0.27%)</title><rect x="1.2363%" y="1333" width="0.2747%" height="15" fill="rgb(206,27,48)"/><text x="1.4863%" y="1343.50"></text></g><g><title>tokio::runtime::Runtime::block_on::_{{closure}} (2 samples, 0.27%)</title><rect x="1.2363%" y="1317" width="0.2747%" height="15" fill="rgb(225,35,8)"/><text x="1.4863%" y="1327.50"></text></g><g><title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (2 samples, 0.27%)</title><rect x="1.2363%" y="1301" width="0.2747%" height="15" fill="rgb(250,213,24)"/><text x="1.4863%" y="1311.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.27%)</title><rect x="1.2363%" y="1285" width="0.2747%" height="15" fill="rgb(247,123,22)"/><text x="1.4863%" y="1295.50"></text></g><g><title>rumq_broker::router::_{{closure}} (2 samples, 0.27%)</title><rect x="1.2363%" y="1269" width="0.2747%" height="15" fill="rgb(231,138,38)"/><text x="1.4863%" y="1279.50"></text></g><g><title>std::future::poll_with_tls_context (2 samples, 0.27%)</title><rect x="1.2363%" y="1253" width="0.2747%" height="15" fill="rgb(231,145,46)"/><text x="1.4863%" y="1263.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.27%)</title><rect x="1.2363%" y="1237" width="0.2747%" height="15" fill="rgb(251,118,11)"/><text x="1.4863%" y="1247.50"></text></g><g><title>rumq_broker::router::Router::start::_{{closure}} (2 samples, 0.27%)</title><rect x="1.2363%" y="1221" width="0.2747%" height="15" fill="rgb(217,147,25)"/><text x="1.4863%" y="1231.50"></text></g><g><title>rumq_broker::router::Router::handle_incoming_router_message (2 samples, 0.27%)</title><rect x="1.2363%" y="1205" width="0.2747%" height="15" fill="rgb(247,81,37)"/><text x="1.4863%" y="1215.50"></text></g><g><title>rumq_broker::router::Router::match_subscriptions_and_forward (2 samples, 0.27%)</title><rect x="1.2363%" y="1189" width="0.2747%" height="15" fill="rgb(209,12,38)"/><text x="1.4863%" y="1199.50"></text></g><g><title>rumq_broker::router::Router::forward_publish (2 samples, 0.27%)</title><rect x="1.2363%" y="1173" width="0.2747%" height="15" fill="rgb(227,1,9)"/><text x="1.4863%" y="1183.50"></text></g><g><title>rumq_broker::router::Router::forward (2 samples, 0.27%)</title><rect x="1.2363%" y="1157" width="0.2747%" height="15" fill="rgb(248,47,43)"/><text x="1.4863%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::try_send (1 samples, 0.14%)</title><rect x="1.3736%" y="1141" width="0.1374%" height="15" fill="rgb(221,10,30)"/><text x="1.6236%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (1 samples, 0.14%)</title><rect x="1.3736%" y="1125" width="0.1374%" height="15" fill="rgb(210,229,1)"/><text x="1.6236%" y="1135.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="1.3736%" y="1109" width="0.1374%" height="15" fill="rgb(222,148,37)"/><text x="1.6236%" y="1119.50"></text></g><g><title>rumq_broker::router::Router::forward (4 samples, 0.55%)</title><rect x="1.5110%" y="1029" width="0.5495%" height="15" fill="rgb(234,67,33)"/><text x="1.7610%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::try_send (4 samples, 0.55%)</title><rect x="1.5110%" y="1013" width="0.5495%" height="15" fill="rgb(247,98,35)"/><text x="1.7610%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (4 samples, 0.55%)</title><rect x="1.5110%" y="997" width="0.5495%" height="15" fill="rgb(247,138,52)"/><text x="1.7610%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::try_send (4 samples, 0.55%)</title><rect x="1.5110%" y="981" width="0.5495%" height="15" fill="rgb(213,79,30)"/><text x="1.7610%" y="991.50"></text></g><g><title>tokio::task::waker::wake_by_val (4 samples, 0.55%)</title><rect x="1.5110%" y="965" width="0.5495%" height="15" fill="rgb(246,177,23)"/><text x="1.7610%" y="975.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::wake_by_val (4 samples, 0.55%)</title><rect x="1.5110%" y="949" width="0.5495%" height="15" fill="rgb(230,62,27)"/><text x="1.7610%" y="959.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::wake_by_ref (4 samples, 0.55%)</title><rect x="1.5110%" y="933" width="0.5495%" height="15" fill="rgb(216,154,8)"/><text x="1.7610%" y="943.50"></text></g><g><title>&lt;tokio::runtime::thread_pool::shared::Shared as tokio::task::Schedule&gt;::schedule (4 samples, 0.55%)</title><rect x="1.5110%" y="917" width="0.5495%" height="15" fill="rgb(244,35,45)"/><text x="1.7610%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::shared::Shared::schedule (4 samples, 0.55%)</title><rect x="1.5110%" y="901" width="0.5495%" height="15" fill="rgb(251,115,12)"/><text x="1.7610%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::schedule (4 samples, 0.55%)</title><rect x="1.5110%" y="885" width="0.5495%" height="15" fill="rgb(240,54,50)"/><text x="1.7610%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::current::get (4 samples, 0.55%)</title><rect x="1.5110%" y="869" width="0.5495%" height="15" fill="rgb(233,84,52)"/><text x="1.7610%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.55%)</title><rect x="1.5110%" y="853" width="0.5495%" height="15" fill="rgb(207,117,47)"/><text x="1.7610%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.55%)</title><rect x="1.5110%" y="837" width="0.5495%" height="15" fill="rgb(249,43,39)"/><text x="1.7610%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::current::get::_{{closure}} (4 samples, 0.55%)</title><rect x="1.5110%" y="821" width="0.5495%" height="15" fill="rgb(209,38,44)"/><text x="1.7610%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::schedule::_{{closure}} (4 samples, 0.55%)</title><rect x="1.5110%" y="805" width="0.5495%" height="15" fill="rgb(236,212,23)"/><text x="1.7610%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::inject_task (4 samples, 0.55%)</title><rect x="1.5110%" y="789" width="0.5495%" height="15" fill="rgb(242,79,21)"/><text x="1.7610%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::queue::inject::Inject&lt;T&gt;::push (4 samples, 0.55%)</title><rect x="1.5110%" y="773" width="0.5495%" height="15" fill="rgb(211,96,35)"/><text x="1.7610%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::queue::global::Queue&lt;T&gt;::push (4 samples, 0.55%)</title><rect x="1.5110%" y="757" width="0.5495%" height="15" fill="rgb(253,215,40)"/><text x="1.7610%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::inject_task::_{{closure}} (4 samples, 0.55%)</title><rect x="1.5110%" y="741" width="0.5495%" height="15" fill="rgb(211,81,21)"/><text x="1.7610%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::notify_work (4 samples, 0.55%)</title><rect x="1.5110%" y="725" width="0.5495%" height="15" fill="rgb(208,190,38)"/><text x="1.7610%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::shared::Shared::unpark (4 samples, 0.55%)</title><rect x="1.5110%" y="709" width="0.5495%" height="15" fill="rgb(235,213,38)"/><text x="1.7610%" y="719.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (4 samples, 0.55%)</title><rect x="1.5110%" y="693" width="0.5495%" height="15" fill="rgb(237,122,38)"/><text x="1.7610%" y="703.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (4 samples, 0.55%)</title><rect x="1.5110%" y="677" width="0.5495%" height="15" fill="rgb(244,218,35)"/><text x="1.7610%" y="687.50"></text></g><g><title>mio::poll::SetReadiness::set_readiness (4 samples, 0.55%)</title><rect x="1.5110%" y="661" width="0.5495%" height="15" fill="rgb(240,68,47)"/><text x="1.7610%" y="671.50"></text></g><g><title>mio::poll::RegistrationInner::set_readiness (4 samples, 0.55%)</title><rect x="1.5110%" y="645" width="0.5495%" height="15" fill="rgb(210,16,53)"/><text x="1.7610%" y="655.50"></text></g><g><title>mio::poll::ReadinessNode::enqueue_with_wakeup (4 samples, 0.55%)</title><rect x="1.5110%" y="629" width="0.5495%" height="15" fill="rgb(235,124,12)"/><text x="1.7610%" y="639.50"></text></g><g><title>mio::poll::enqueue_with_wakeup (4 samples, 0.55%)</title><rect x="1.5110%" y="613" width="0.5495%" height="15" fill="rgb(224,169,11)"/><text x="1.7610%" y="623.50"></text></g><g><title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (4 samples, 0.55%)</title><rect x="1.5110%" y="597" width="0.5495%" height="15" fill="rgb(250,166,2)"/><text x="1.7610%" y="607.50"></text></g><g><title>mio::poll::ReadinessQueueInner::wakeup (4 samples, 0.55%)</title><rect x="1.5110%" y="581" width="0.5495%" height="15" fill="rgb(242,216,29)"/><text x="1.7610%" y="591.50"></text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::wakeup (4 samples, 0.55%)</title><rect x="1.5110%" y="565" width="0.5495%" height="15" fill="rgb(230,116,27)"/><text x="1.7610%" y="575.50"></text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (4 samples, 0.55%)</title><rect x="1.5110%" y="549" width="0.5495%" height="15" fill="rgb(228,99,48)"/><text x="1.7610%" y="559.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (4 samples, 0.55%)</title><rect x="1.5110%" y="533" width="0.5495%" height="15" fill="rgb(253,11,6)"/><text x="1.7610%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write (4 samples, 0.55%)</title><rect x="1.5110%" y="517" width="0.5495%" height="15" fill="rgb(247,143,39)"/><text x="1.7610%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.55%)</title><rect x="1.5110%" y="501" width="0.5495%" height="15" fill="rgb(236,97,10)"/><text x="1.7610%" y="511.50"></text></g><g><title>__libc_write (4 samples, 0.55%)</title><rect x="1.5110%" y="485" width="0.5495%" height="15" fill="rgb(233,208,19)"/><text x="1.7610%" y="495.50"></text></g><g><title>__libc_write (4 samples, 0.55%)</title><rect x="1.5110%" y="469" width="0.5495%" height="15" fill="rgb(216,164,2)"/><text x="1.7610%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="453" width="0.5495%" height="15" fill="rgb(220,129,5)"/><text x="1.7610%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="437" width="0.5495%" height="15" fill="rgb(242,17,10)"/><text x="1.7610%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="421" width="0.5495%" height="15" fill="rgb(242,107,0)"/><text x="1.7610%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="405" width="0.5495%" height="15" fill="rgb(251,28,31)"/><text x="1.7610%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="389" width="0.5495%" height="15" fill="rgb(233,223,10)"/><text x="1.7610%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="373" width="0.5495%" height="15" fill="rgb(215,21,27)"/><text x="1.7610%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="357" width="0.5495%" height="15" fill="rgb(232,23,21)"/><text x="1.7610%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="341" width="0.5495%" height="15" fill="rgb(244,5,23)"/><text x="1.7610%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="325" width="0.5495%" height="15" fill="rgb(226,81,46)"/><text x="1.7610%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="309" width="0.5495%" height="15" fill="rgb(247,70,30)"/><text x="1.7610%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="293" width="0.5495%" height="15" fill="rgb(212,68,19)"/><text x="1.7610%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="1.5110%" y="277" width="0.5495%" height="15" fill="rgb(240,187,13)"/><text x="1.7610%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="1.6484%" y="261" width="0.4121%" height="15" fill="rgb(223,113,26)"/><text x="1.8984%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="1.6484%" y="245" width="0.4121%" height="15" fill="rgb(206,192,2)"/><text x="1.8984%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="1.6484%" y="229" width="0.4121%" height="15" fill="rgb(241,108,4)"/><text x="1.8984%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="1.6484%" y="213" width="0.4121%" height="15" fill="rgb(247,173,49)"/><text x="1.8984%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="1.6484%" y="197" width="0.4121%" height="15" fill="rgb(224,114,35)"/><text x="1.8984%" y="207.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="0.9615%" y="1397" width="1.2363%" height="15" fill="rgb(245,159,27)"/><text x="1.2115%" y="1407.50"></text></g><g><title>start_thread (5 samples, 0.69%)</title><rect x="1.5110%" y="1381" width="0.6868%" height="15" fill="rgb(245,172,44)"/><text x="1.7610%" y="1391.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.69%)</title><rect x="1.5110%" y="1365" width="0.6868%" height="15" fill="rgb(236,23,11)"/><text x="1.7610%" y="1375.50"></text></g><g><title>std::sys_common::thread::start_thread (5 samples, 0.69%)</title><rect x="1.5110%" y="1349" width="0.6868%" height="15" fill="rgb(205,117,38)"/><text x="1.7610%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.69%)</title><rect x="1.5110%" y="1333" width="0.6868%" height="15" fill="rgb(237,72,25)"/><text x="1.7610%" y="1343.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.69%)</title><rect x="1.5110%" y="1317" width="0.6868%" height="15" fill="rgb(244,70,9)"/><text x="1.7610%" y="1327.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.69%)</title><rect x="1.5110%" y="1301" width="0.6868%" height="15" fill="rgb(217,125,39)"/><text x="1.7610%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (5 samples, 0.69%)</title><rect x="1.5110%" y="1285" width="0.6868%" height="15" fill="rgb(235,36,10)"/><text x="1.7610%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.69%)</title><rect x="1.5110%" y="1269" width="0.6868%" height="15" fill="rgb(251,123,47)"/><text x="1.7610%" y="1279.50"></text></g><g><title>std::panicking::try (5 samples, 0.69%)</title><rect x="1.5110%" y="1253" width="0.6868%" height="15" fill="rgb(221,13,13)"/><text x="1.7610%" y="1263.50"></text></g><g><title>__rust_maybe_catch_panic (5 samples, 0.69%)</title><rect x="1.5110%" y="1237" width="0.6868%" height="15" fill="rgb(238,131,9)"/><text x="1.7610%" y="1247.50"></text></g><g><title>rumq_broker::router (5 samples, 0.69%)</title><rect x="1.5110%" y="1221" width="0.6868%" height="15" fill="rgb(211,50,8)"/><text x="1.7610%" y="1231.50"></text></g><g><title>tokio::runtime::Runtime::block_on (5 samples, 0.69%)</title><rect x="1.5110%" y="1205" width="0.6868%" height="15" fill="rgb(245,182,24)"/><text x="1.7610%" y="1215.50"></text></g><g><title>tokio::runtime::handle::Handle::enter (5 samples, 0.69%)</title><rect x="1.5110%" y="1189" width="0.6868%" height="15" fill="rgb(242,14,37)"/><text x="1.7610%" y="1199.50"></text></g><g><title>tokio::runtime::context::enter (5 samples, 0.69%)</title><rect x="1.5110%" y="1173" width="0.6868%" height="15" fill="rgb(246,228,12)"/><text x="1.7610%" y="1183.50"></text></g><g><title>tokio::runtime::Runtime::block_on::_{{closure}} (5 samples, 0.69%)</title><rect x="1.5110%" y="1157" width="0.6868%" height="15" fill="rgb(213,55,15)"/><text x="1.7610%" y="1167.50"></text></g><g><title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (5 samples, 0.69%)</title><rect x="1.5110%" y="1141" width="0.6868%" height="15" fill="rgb(209,9,3)"/><text x="1.7610%" y="1151.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.69%)</title><rect x="1.5110%" y="1125" width="0.6868%" height="15" fill="rgb(230,59,30)"/><text x="1.7610%" y="1135.50"></text></g><g><title>rumq_broker::router::_{{closure}} (5 samples, 0.69%)</title><rect x="1.5110%" y="1109" width="0.6868%" height="15" fill="rgb(209,121,21)"/><text x="1.7610%" y="1119.50"></text></g><g><title>std::future::poll_with_tls_context (5 samples, 0.69%)</title><rect x="1.5110%" y="1093" width="0.6868%" height="15" fill="rgb(220,109,13)"/><text x="1.7610%" y="1103.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.69%)</title><rect x="1.5110%" y="1077" width="0.6868%" height="15" fill="rgb(232,18,1)"/><text x="1.7610%" y="1087.50"></text></g><g><title>rumq_broker::router::Router::start::_{{closure}} (5 samples, 0.69%)</title><rect x="1.5110%" y="1061" width="0.6868%" height="15" fill="rgb(215,41,42)"/><text x="1.7610%" y="1071.50"></text></g><g><title>rumq_broker::router::Router::handle_incoming_router_message (5 samples, 0.69%)</title><rect x="1.5110%" y="1045" width="0.6868%" height="15" fill="rgb(224,123,36)"/><text x="1.7610%" y="1055.50"></text></g><g><title>rumq_broker::router::Router::match_subscriptions_and_forward (1 samples, 0.14%)</title><rect x="2.0604%" y="1029" width="0.1374%" height="15" fill="rgb(240,125,3)"/><text x="2.3104%" y="1039.50"></text></g><g><title>rumq_broker::router::Router::forward_publish (1 samples, 0.14%)</title><rect x="2.0604%" y="1013" width="0.1374%" height="15" fill="rgb(205,98,50)"/><text x="2.3104%" y="1023.50"></text></g><g><title>rumq_broker::state::MqttState::handle_outgoing_publish (1 samples, 0.14%)</title><rect x="2.0604%" y="997" width="0.1374%" height="15" fill="rgb(205,185,37)"/><text x="2.3104%" y="1007.50"></text></g><g><title>rumq_broker::state::MqttState::add_packet_id_and_save (1 samples, 0.14%)</title><rect x="2.0604%" y="981" width="0.1374%" height="15" fill="rgb(238,207,15)"/><text x="2.3104%" y="991.50"></text></g><g><title>&lt;rumq_core::packets::Publish as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="2.0604%" y="965" width="0.1374%" height="15" fill="rgb(213,199,42)"/><text x="2.3104%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="2.0604%" y="949" width="0.1374%" height="15" fill="rgb(235,201,11)"/><text x="2.3104%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="2.0604%" y="933" width="0.1374%" height="15" fill="rgb(207,46,11)"/><text x="2.3104%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="2.0604%" y="917" width="0.1374%" height="15" fill="rgb(241,35,35)"/><text x="2.3104%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="2.0604%" y="901" width="0.1374%" height="15" fill="rgb(243,32,47)"/><text x="2.3104%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="2.0604%" y="885" width="0.1374%" height="15" fill="rgb(247,202,23)"/><text x="2.3104%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="2.0604%" y="869" width="0.1374%" height="15" fill="rgb(219,102,11)"/><text x="2.3104%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="2.0604%" y="853" width="0.1374%" height="15" fill="rgb(243,110,44)"/><text x="2.3104%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (1 samples, 0.14%)</title><rect x="2.0604%" y="837" width="0.1374%" height="15" fill="rgb(222,74,54)"/><text x="2.3104%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="2.0604%" y="821" width="0.1374%" height="15" fill="rgb(216,99,12)"/><text x="2.3104%" y="831.50"></text></g><g><title>__libc_malloc (1 samples, 0.14%)</title><rect x="2.0604%" y="805" width="0.1374%" height="15" fill="rgb(226,22,26)"/><text x="2.3104%" y="815.50"></text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1381" width="2.1978%" height="15" fill="rgb(217,163,10)"/><text x="2.4478%" y="1391.50">[..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1365" width="2.1978%" height="15" fill="rgb(213,25,53)"/><text x="2.4478%" y="1375.50">[..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1349" width="2.1978%" height="15" fill="rgb(252,105,26)"/><text x="2.4478%" y="1359.50">[..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1333" width="2.1978%" height="15" fill="rgb(220,39,43)"/><text x="2.4478%" y="1343.50">[..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1317" width="2.1978%" height="15" fill="rgb(229,68,48)"/><text x="2.4478%" y="1327.50">[..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1301" width="2.1978%" height="15" fill="rgb(252,8,32)"/><text x="2.4478%" y="1311.50">[..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1285" width="2.1978%" height="15" fill="rgb(223,20,43)"/><text x="2.4478%" y="1295.50">[..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="2.1978%" y="1269" width="2.1978%" height="15" fill="rgb(229,81,49)"/><text x="2.4478%" y="1279.50">[..</text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="4.6703%" y="1045" width="0.1374%" height="15" fill="rgb(236,28,36)"/><text x="4.9203%" y="1055.50"></text></g><g><title>&lt;rumq_core::Packet as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.9451%" y="1029" width="0.1374%" height="15" fill="rgb(249,185,26)"/><text x="5.1951%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.14%)</title><rect x="5.0824%" y="1013" width="0.1374%" height="15" fill="rgb(249,174,33)"/><text x="5.3324%" y="1023.50"></text></g><g><title>rumq_broker::router::Router::forward (2 samples, 0.27%)</title><rect x="5.0824%" y="1029" width="0.2747%" height="15" fill="rgb(233,201,37)"/><text x="5.3324%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::try_send (1 samples, 0.14%)</title><rect x="5.2198%" y="1013" width="0.1374%" height="15" fill="rgb(221,78,26)"/><text x="5.4698%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (1 samples, 0.14%)</title><rect x="5.2198%" y="997" width="0.1374%" height="15" fill="rgb(250,127,30)"/><text x="5.4698%" y="1007.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::try_send (1 samples, 0.14%)</title><rect x="5.2198%" y="981" width="0.1374%" height="15" fill="rgb(230,49,44)"/><text x="5.4698%" y="991.50"></text></g><g><title>tokio::task::waker::wake_by_val (1 samples, 0.14%)</title><rect x="5.2198%" y="965" width="0.1374%" height="15" fill="rgb(229,67,23)"/><text x="5.4698%" y="975.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::wake_by_val (1 samples, 0.14%)</title><rect x="5.2198%" y="949" width="0.1374%" height="15" fill="rgb(249,83,47)"/><text x="5.4698%" y="959.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::wake_by_ref (1 samples, 0.14%)</title><rect x="5.2198%" y="933" width="0.1374%" height="15" fill="rgb(215,43,3)"/><text x="5.4698%" y="943.50"></text></g><g><title>&lt;tokio::runtime::thread_pool::shared::Shared as tokio::task::Schedule&gt;::schedule (1 samples, 0.14%)</title><rect x="5.2198%" y="917" width="0.1374%" height="15" fill="rgb(238,154,13)"/><text x="5.4698%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::shared::Shared::schedule (1 samples, 0.14%)</title><rect x="5.2198%" y="901" width="0.1374%" height="15" fill="rgb(219,56,2)"/><text x="5.4698%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::schedule (1 samples, 0.14%)</title><rect x="5.2198%" y="885" width="0.1374%" height="15" fill="rgb(233,0,4)"/><text x="5.4698%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::current::get (1 samples, 0.14%)</title><rect x="5.2198%" y="869" width="0.1374%" height="15" fill="rgb(235,30,7)"/><text x="5.4698%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.14%)</title><rect x="5.2198%" y="853" width="0.1374%" height="15" fill="rgb(250,79,13)"/><text x="5.4698%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="5.2198%" y="837" width="0.1374%" height="15" fill="rgb(211,146,34)"/><text x="5.4698%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::current::get::_{{closure}} (1 samples, 0.14%)</title><rect x="5.2198%" y="821" width="0.1374%" height="15" fill="rgb(228,22,38)"/><text x="5.4698%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::schedule::_{{closure}} (1 samples, 0.14%)</title><rect x="5.2198%" y="805" width="0.1374%" height="15" fill="rgb(235,168,5)"/><text x="5.4698%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::inject_task (1 samples, 0.14%)</title><rect x="5.2198%" y="789" width="0.1374%" height="15" fill="rgb(221,155,16)"/><text x="5.4698%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::queue::inject::Inject&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="5.2198%" y="773" width="0.1374%" height="15" fill="rgb(215,215,53)"/><text x="5.4698%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::queue::global::Queue&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="5.2198%" y="757" width="0.1374%" height="15" fill="rgb(223,4,10)"/><text x="5.4698%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::inject_task::_{{closure}} (1 samples, 0.14%)</title><rect x="5.2198%" y="741" width="0.1374%" height="15" fill="rgb(234,103,6)"/><text x="5.4698%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::notify_work (1 samples, 0.14%)</title><rect x="5.2198%" y="725" width="0.1374%" height="15" fill="rgb(227,97,0)"/><text x="5.4698%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::shared::Shared::unpark (1 samples, 0.14%)</title><rect x="5.2198%" y="709" width="0.1374%" height="15" fill="rgb(234,150,53)"/><text x="5.4698%" y="719.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="5.2198%" y="693" width="0.1374%" height="15" fill="rgb(228,201,54)"/><text x="5.4698%" y="703.50"></text></g><g><title>futex_wake (1 samples, 0.14%)</title><rect x="5.2198%" y="677" width="0.1374%" height="15" fill="rgb(222,22,37)"/><text x="5.4698%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="5.2198%" y="661" width="0.1374%" height="15" fill="rgb(237,53,32)"/><text x="5.4698%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="5.2198%" y="645" width="0.1374%" height="15" fill="rgb(233,25,53)"/><text x="5.4698%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="5.2198%" y="629" width="0.1374%" height="15" fill="rgb(210,40,34)"/><text x="5.4698%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="5.2198%" y="613" width="0.1374%" height="15" fill="rgb(241,220,44)"/><text x="5.4698%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="5.2198%" y="597" width="0.1374%" height="15" fill="rgb(235,28,35)"/><text x="5.4698%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="5.2198%" y="581" width="0.1374%" height="15" fill="rgb(210,56,17)"/><text x="5.4698%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="5.2198%" y="565" width="0.1374%" height="15" fill="rgb(224,130,29)"/><text x="5.4698%" y="575.50"></text></g><g><title>rumq_broker::state::MqttState::handle_incoming_puback (1 samples, 0.14%)</title><rect x="5.3571%" y="997" width="0.1374%" height="15" fill="rgb(235,212,8)"/><text x="5.6071%" y="1007.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="5.3571%" y="981" width="0.1374%" height="15" fill="rgb(223,33,50)"/><text x="5.6071%" y="991.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="5.3571%" y="965" width="0.1374%" height="15" fill="rgb(219,149,13)"/><text x="5.6071%" y="975.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="5.3571%" y="949" width="0.1374%" height="15" fill="rgb(250,156,29)"/><text x="5.6071%" y="959.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="5.3571%" y="933" width="0.1374%" height="15" fill="rgb(216,193,19)"/><text x="5.6071%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="5.3571%" y="917" width="0.1374%" height="15" fill="rgb(216,135,14)"/><text x="5.6071%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (1 samples, 0.14%)</title><rect x="5.3571%" y="901" width="0.1374%" height="15" fill="rgb(241,47,5)"/><text x="5.6071%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (1 samples, 0.14%)</title><rect x="5.3571%" y="885" width="0.1374%" height="15" fill="rgb(233,42,35)"/><text x="5.6071%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="5.3571%" y="869" width="0.1374%" height="15" fill="rgb(231,13,6)"/><text x="5.6071%" y="879.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="5.3571%" y="853" width="0.1374%" height="15" fill="rgb(207,181,40)"/><text x="5.6071%" y="863.50"></text></g><g><title>rumq_broker::state::MqttState::handle_incoming_mqtt_packet (2 samples, 0.27%)</title><rect x="5.3571%" y="1013" width="0.2747%" height="15" fill="rgb(254,173,49)"/><text x="5.6071%" y="1023.50"></text></g><g><title>rumq_broker::state::MqttState::handle_incoming_publish (1 samples, 0.14%)</title><rect x="5.4945%" y="997" width="0.1374%" height="15" fill="rgb(221,1,38)"/><text x="5.7445%" y="1007.50"></text></g><g><title>rumq_core::topic::valid_topic (1 samples, 0.14%)</title><rect x="5.4945%" y="981" width="0.1374%" height="15" fill="rgb(206,124,46)"/><text x="5.7445%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (1 samples, 0.14%)</title><rect x="5.4945%" y="965" width="0.1374%" height="15" fill="rgb(249,21,11)"/><text x="5.7445%" y="975.50"></text></g><g><title>core::str::pattern::Pattern::is_contained_in (1 samples, 0.14%)</title><rect x="5.4945%" y="949" width="0.1374%" height="15" fill="rgb(222,201,40)"/><text x="5.7445%" y="959.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="5.4945%" y="933" width="0.1374%" height="15" fill="rgb(235,61,29)"/><text x="5.7445%" y="943.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.14%)</title><rect x="5.4945%" y="917" width="0.1374%" height="15" fill="rgb(219,207,3)"/><text x="5.7445%" y="927.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.14%)</title><rect x="5.4945%" y="901" width="0.1374%" height="15" fill="rgb(222,56,46)"/><text x="5.7445%" y="911.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.14%)</title><rect x="5.4945%" y="885" width="0.1374%" height="15" fill="rgb(239,76,54)"/><text x="5.7445%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="5.4945%" y="869" width="0.1374%" height="15" fill="rgb(231,124,27)"/><text x="5.7445%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="5.4945%" y="853" width="0.1374%" height="15" fill="rgb(249,195,6)"/><text x="5.7445%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.14%)</title><rect x="5.4945%" y="837" width="0.1374%" height="15" fill="rgb(237,174,47)"/><text x="5.7445%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::_{{closure}} (1 samples, 0.14%)</title><rect x="5.4945%" y="821" width="0.1374%" height="15" fill="rgb(206,201,31)"/><text x="5.7445%" y="831.50"></text></g><g><title>rumq_broker::router::Router::handle_incoming_packet (3 samples, 0.41%)</title><rect x="5.3571%" y="1029" width="0.4121%" height="15" fill="rgb(231,57,52)"/><text x="5.6071%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.14%)</title><rect x="5.6319%" y="1013" width="0.1374%" height="15" fill="rgb(248,177,22)"/><text x="5.8819%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.14%)</title><rect x="5.6319%" y="997" width="0.1374%" height="15" fill="rgb(215,211,37)"/><text x="5.8819%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="5.6319%" y="981" width="0.1374%" height="15" fill="rgb(241,128,51)"/><text x="5.8819%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="5.6319%" y="965" width="0.1374%" height="15" fill="rgb(227,165,31)"/><text x="5.8819%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="5.6319%" y="949" width="0.1374%" height="15" fill="rgb(228,167,24)"/><text x="5.8819%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="5.6319%" y="933" width="0.1374%" height="15" fill="rgb(228,143,12)"/><text x="5.8819%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="5.6319%" y="917" width="0.1374%" height="15" fill="rgb(249,149,8)"/><text x="5.8819%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.14%)</title><rect x="5.6319%" y="901" width="0.1374%" height="15" fill="rgb(243,35,44)"/><text x="5.8819%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="5.6319%" y="885" width="0.1374%" height="15" fill="rgb(246,89,9)"/><text x="5.8819%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="5.7692%" y="1013" width="0.1374%" height="15" fill="rgb(233,213,13)"/><text x="6.0192%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="5.7692%" y="997" width="0.1374%" height="15" fill="rgb(233,141,41)"/><text x="6.0192%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="5.7692%" y="981" width="0.1374%" height="15" fill="rgb(239,167,4)"/><text x="6.0192%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.14%)</title><rect x="5.7692%" y="965" width="0.1374%" height="15" fill="rgb(209,217,16)"/><text x="6.0192%" y="975.50"></text></g><g><title>core::ptr::&lt;impl *mut T&gt;::write (1 samples, 0.14%)</title><rect x="5.7692%" y="949" width="0.1374%" height="15" fill="rgb(219,88,35)"/><text x="6.0192%" y="959.50"></text></g><g><title>core::ptr::write (1 samples, 0.14%)</title><rect x="5.7692%" y="933" width="0.1374%" height="15" fill="rgb(220,193,23)"/><text x="6.0192%" y="943.50"></text></g><g><title>rumq_broker::router::Router::handle_incoming_router_message (10 samples, 1.37%)</title><rect x="4.8077%" y="1045" width="1.3736%" height="15" fill="rgb(230,90,52)"/><text x="5.0577%" y="1055.50"></text></g><g><title>rumq_broker::router::Router::match_subscriptions_and_forward (3 samples, 0.41%)</title><rect x="5.7692%" y="1029" width="0.4121%" height="15" fill="rgb(252,106,19)"/><text x="6.0192%" y="1039.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="5.9066%" y="1013" width="0.2747%" height="15" fill="rgb(206,74,20)"/><text x="6.1566%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="5.9066%" y="997" width="0.2747%" height="15" fill="rgb(230,138,44)"/><text x="6.1566%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="5.9066%" y="981" width="0.2747%" height="15" fill="rgb(235,182,43)"/><text x="6.1566%" y="991.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="5.9066%" y="965" width="0.2747%" height="15" fill="rgb(242,16,51)"/><text x="6.1566%" y="975.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="5.9066%" y="949" width="0.2747%" height="15" fill="rgb(248,9,4)"/><text x="6.1566%" y="959.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="5.9066%" y="933" width="0.2747%" height="15" fill="rgb(210,31,22)"/><text x="6.1566%" y="943.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="5.9066%" y="917" width="0.2747%" height="15" fill="rgb(239,54,39)"/><text x="6.1566%" y="927.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="5.9066%" y="901" width="0.2747%" height="15" fill="rgb(230,99,41)"/><text x="6.1566%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="5.9066%" y="885" width="0.2747%" height="15" fill="rgb(253,106,12)"/><text x="6.1566%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (1 samples, 0.14%)</title><rect x="6.0440%" y="869" width="0.1374%" height="15" fill="rgb(213,46,41)"/><text x="6.2940%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (1 samples, 0.14%)</title><rect x="6.0440%" y="853" width="0.1374%" height="15" fill="rgb(215,133,35)"/><text x="6.2940%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="6.0440%" y="837" width="0.1374%" height="15" fill="rgb(213,28,5)"/><text x="6.2940%" y="847.50"></text></g><g><title>cfree (1 samples, 0.14%)</title><rect x="6.0440%" y="821" width="0.1374%" height="15" fill="rgb(215,77,49)"/><text x="6.2940%" y="831.50"></text></g><g><title>&lt; (1 samples, 0.14%)</title><rect x="6.3187%" y="885" width="0.1374%" height="15" fill="rgb(248,100,22)"/><text x="6.5687%" y="895.50"></text></g><g><title>tokio::sync::semaphore_ll::Semaphore::add_permits (1 samples, 0.14%)</title><rect x="6.3187%" y="869" width="0.1374%" height="15" fill="rgb(208,67,9)"/><text x="6.5687%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.14%)</title><rect x="6.3187%" y="853" width="0.1374%" height="15" fill="rgb(219,133,21)"/><text x="6.5687%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.14%)</title><rect x="6.3187%" y="837" width="0.1374%" height="15" fill="rgb(246,46,29)"/><text x="6.5687%" y="847.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="6.4560%" y="885" width="0.1374%" height="15" fill="rgb(246,185,52)"/><text x="6.7060%" y="895.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (1 samples, 0.14%)</title><rect x="6.4560%" y="869" width="0.1374%" height="15" fill="rgb(252,136,11)"/><text x="6.7060%" y="879.50"></text></g><g><title>__sched_yield (1 samples, 0.14%)</title><rect x="6.4560%" y="853" width="0.1374%" height="15" fill="rgb(219,138,53)"/><text x="6.7060%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="6.4560%" y="837" width="0.1374%" height="15" fill="rgb(211,51,23)"/><text x="6.7060%" y="847.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 2.34%)</title><rect x="4.3956%" y="1125" width="2.3352%" height="15" fill="rgb(247,221,28)"/><text x="4.6456%" y="1135.50">&lt;..</text></g><g><title>rumq_broker::router::_{{closure}} (17 samples, 2.34%)</title><rect x="4.3956%" y="1109" width="2.3352%" height="15" fill="rgb(251,222,45)"/><text x="4.6456%" y="1119.50">r..</text></g><g><title>std::future::poll_with_tls_context (17 samples, 2.34%)</title><rect x="4.3956%" y="1093" width="2.3352%" height="15" fill="rgb(217,162,53)"/><text x="4.6456%" y="1103.50">s..</text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 2.34%)</title><rect x="4.3956%" y="1077" width="2.3352%" height="15" fill="rgb(229,93,14)"/><text x="4.6456%" y="1087.50">&lt;..</text></g><g><title>rumq_broker::router::Router::start::_{{closure}} (16 samples, 2.20%)</title><rect x="4.5330%" y="1061" width="2.1978%" height="15" fill="rgb(209,67,49)"/><text x="4.7830%" y="1071.50">r..</text></g><g><title>std::future::poll_with_tls_context (4 samples, 0.55%)</title><rect x="6.1813%" y="1045" width="0.5495%" height="15" fill="rgb(213,87,29)"/><text x="6.4313%" y="1055.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.55%)</title><rect x="6.1813%" y="1029" width="0.5495%" height="15" fill="rgb(205,151,52)"/><text x="6.4313%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}} (4 samples, 0.55%)</title><rect x="6.1813%" y="1013" width="0.5495%" height="15" fill="rgb(253,215,39)"/><text x="6.4313%" y="1023.50"></text></g><g><title>std::future::poll_with_tls_context (4 samples, 0.55%)</title><rect x="6.1813%" y="997" width="0.5495%" height="15" fill="rgb(221,220,41)"/><text x="6.4313%" y="1007.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.55%)</title><rect x="6.1813%" y="981" width="0.5495%" height="15" fill="rgb(218,133,21)"/><text x="6.4313%" y="991.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}}::_{{closure}} (4 samples, 0.55%)</title><rect x="6.1813%" y="965" width="0.5495%" height="15" fill="rgb(221,193,43)"/><text x="6.4313%" y="975.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::poll_recv (3 samples, 0.41%)</title><rect x="6.3187%" y="949" width="0.4121%" height="15" fill="rgb(240,128,52)"/><text x="6.5687%" y="959.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (3 samples, 0.41%)</title><rect x="6.3187%" y="933" width="0.4121%" height="15" fill="rgb(253,114,12)"/><text x="6.5687%" y="943.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (3 samples, 0.41%)</title><rect x="6.3187%" y="917" width="0.4121%" height="15" fill="rgb(215,223,47)"/><text x="6.5687%" y="927.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (3 samples, 0.41%)</title><rect x="6.3187%" y="901" width="0.4121%" height="15" fill="rgb(248,225,23)"/><text x="6.5687%" y="911.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.14%)</title><rect x="6.5934%" y="885" width="0.1374%" height="15" fill="rgb(250,108,0)"/><text x="6.8434%" y="895.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.14%)</title><rect x="6.5934%" y="869" width="0.1374%" height="15" fill="rgb(228,208,7)"/><text x="6.8434%" y="879.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (1 samples, 0.14%)</title><rect x="6.5934%" y="853" width="0.1374%" height="15" fill="rgb(244,45,10)"/><text x="6.8434%" y="863.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (1 samples, 0.14%)</title><rect x="6.5934%" y="837" width="0.1374%" height="15" fill="rgb(207,125,25)"/><text x="6.8434%" y="847.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="6.5934%" y="821" width="0.1374%" height="15" fill="rgb(210,195,18)"/><text x="6.8434%" y="831.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="6.5934%" y="805" width="0.1374%" height="15" fill="rgb(249,80,12)"/><text x="6.8434%" y="815.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="6.5934%" y="789" width="0.1374%" height="15" fill="rgb(221,65,9)"/><text x="6.8434%" y="799.50"></text></g><g><title>tokio::runtime::basic_scheduler::sched_drop (1 samples, 0.14%)</title><rect x="6.5934%" y="773" width="0.1374%" height="15" fill="rgb(235,49,36)"/><text x="6.8434%" y="783.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="6.5934%" y="757" width="0.1374%" height="15" fill="rgb(225,32,20)"/><text x="6.8434%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="6.5934%" y="741" width="0.1374%" height="15" fill="rgb(215,141,46)"/><text x="6.8434%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.14%)</title><rect x="6.5934%" y="725" width="0.1374%" height="15" fill="rgb(250,160,47)"/><text x="6.8434%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.14%)</title><rect x="6.5934%" y="709" width="0.1374%" height="15" fill="rgb(216,222,40)"/><text x="6.8434%" y="719.50"></text></g><g><title>mio::poll::ReadinessQueue::poll (1 samples, 0.14%)</title><rect x="6.8681%" y="981" width="0.1374%" height="15" fill="rgb(234,217,39)"/><text x="7.1181%" y="991.50"></text></g><g><title>mio::poll::ReadinessQueueInner::dequeue_node (1 samples, 0.14%)</title><rect x="6.8681%" y="965" width="0.1374%" height="15" fill="rgb(207,178,40)"/><text x="7.1181%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="6.8681%" y="949" width="0.1374%" height="15" fill="rgb(221,136,13)"/><text x="7.1181%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="6.8681%" y="933" width="0.1374%" height="15" fill="rgb(249,199,10)"/><text x="7.1181%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="7.0055%" y="869" width="0.8242%" height="15" fill="rgb(249,222,13)"/><text x="7.2555%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="7.2802%" y="853" width="0.5495%" height="15" fill="rgb(244,185,38)"/><text x="7.5302%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="7.2802%" y="837" width="0.5495%" height="15" fill="rgb(236,202,9)"/><text x="7.5302%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="7.2802%" y="821" width="0.5495%" height="15" fill="rgb(250,229,37)"/><text x="7.5302%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="7.2802%" y="805" width="0.5495%" height="15" fill="rgb(206,174,23)"/><text x="7.5302%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4176%" y="789" width="0.4121%" height="15" fill="rgb(211,33,43)"/><text x="7.6676%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4176%" y="773" width="0.4121%" height="15" fill="rgb(245,58,50)"/><text x="7.6676%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4176%" y="757" width="0.4121%" height="15" fill="rgb(244,68,36)"/><text x="7.6676%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="7.4176%" y="741" width="0.4121%" height="15" fill="rgb(232,229,15)"/><text x="7.6676%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="7.5549%" y="725" width="0.2747%" height="15" fill="rgb(254,30,23)"/><text x="7.8049%" y="735.50"></text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::cleanup (7 samples, 0.96%)</title><rect x="7.0055%" y="981" width="0.9615%" height="15" fill="rgb(235,160,14)"/><text x="7.2555%" y="991.50"></text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (7 samples, 0.96%)</title><rect x="7.0055%" y="965" width="0.9615%" height="15" fill="rgb(212,155,44)"/><text x="7.2555%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (7 samples, 0.96%)</title><rect x="7.0055%" y="949" width="0.9615%" height="15" fill="rgb(226,2,50)"/><text x="7.2555%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::read (7 samples, 0.96%)</title><rect x="7.0055%" y="933" width="0.9615%" height="15" fill="rgb(234,177,6)"/><text x="7.2555%" y="943.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (7 samples, 0.96%)</title><rect x="7.0055%" y="917" width="0.9615%" height="15" fill="rgb(217,24,9)"/><text x="7.2555%" y="927.50"></text></g><g><title>__libc_read (7 samples, 0.96%)</title><rect x="7.0055%" y="901" width="0.9615%" height="15" fill="rgb(220,13,46)"/><text x="7.2555%" y="911.50"></text></g><g><title>__libc_read (7 samples, 0.96%)</title><rect x="7.0055%" y="885" width="0.9615%" height="15" fill="rgb(239,221,27)"/><text x="7.2555%" y="895.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="7.8297%" y="869" width="0.1374%" height="15" fill="rgb(222,198,25)"/><text x="8.0797%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1 samples, 0.14%)</title><rect x="7.9670%" y="965" width="0.1374%" height="15" fill="rgb(211,99,13)"/><text x="8.2170%" y="975.50"></text></g><g><title>mio::sys::unix::epoll::Selector::select (51 samples, 7.01%)</title><rect x="7.9670%" y="981" width="7.0055%" height="15" fill="rgb(232,111,31)"/><text x="8.2170%" y="991.50">mio::sys:..</text></g><g><title>epoll_wait (50 samples, 6.87%)</title><rect x="8.1044%" y="965" width="6.8681%" height="15" fill="rgb(245,82,37)"/><text x="8.3544%" y="975.50">epoll_wait</text></g><g><title>[unknown] (50 samples, 6.87%)</title><rect x="8.1044%" y="949" width="6.8681%" height="15" fill="rgb(227,149,46)"/><text x="8.3544%" y="959.50">[unknown]</text></g><g><title>[unknown] (50 samples, 6.87%)</title><rect x="8.1044%" y="933" width="6.8681%" height="15" fill="rgb(218,36,50)"/><text x="8.3544%" y="943.50">[unknown]</text></g><g><title>[unknown] (50 samples, 6.87%)</title><rect x="8.1044%" y="917" width="6.8681%" height="15" fill="rgb(226,80,48)"/><text x="8.3544%" y="927.50">[unknown]</text></g><g><title>[unknown] (50 samples, 6.87%)</title><rect x="8.1044%" y="901" width="6.8681%" height="15" fill="rgb(238,224,15)"/><text x="8.3544%" y="911.50">[unknown]</text></g><g><title>[unknown] (50 samples, 6.87%)</title><rect x="8.1044%" y="885" width="6.8681%" height="15" fill="rgb(241,136,10)"/><text x="8.3544%" y="895.50">[unknown]</text></g><g><title>[unknown] (50 samples, 6.87%)</title><rect x="8.1044%" y="869" width="6.8681%" height="15" fill="rgb(208,32,45)"/><text x="8.3544%" y="879.50">[unknown]</text></g><g><title>[unknown] (50 samples, 6.87%)</title><rect x="8.1044%" y="853" width="6.8681%" height="15" fill="rgb(207,135,9)"/><text x="8.3544%" y="863.50">[unknown]</text></g><g><title>[unknown] (48 samples, 6.59%)</title><rect x="8.3791%" y="837" width="6.5934%" height="15" fill="rgb(206,86,44)"/><text x="8.6291%" y="847.50">[unknown]</text></g><g><title>[unknown] (47 samples, 6.46%)</title><rect x="8.5165%" y="821" width="6.4560%" height="15" fill="rgb(245,177,15)"/><text x="8.7665%" y="831.50">[unknown]</text></g><g><title>[unknown] (45 samples, 6.18%)</title><rect x="8.7912%" y="805" width="6.1813%" height="15" fill="rgb(206,64,50)"/><text x="9.0412%" y="815.50">[unknown]</text></g><g><title>[unknown] (44 samples, 6.04%)</title><rect x="8.9286%" y="789" width="6.0440%" height="15" fill="rgb(234,36,40)"/><text x="9.1786%" y="799.50">[unknown]</text></g><g><title>[unknown] (42 samples, 5.77%)</title><rect x="9.2033%" y="773" width="5.7692%" height="15" fill="rgb(213,64,8)"/><text x="9.4533%" y="783.50">[unknow..</text></g><g><title>[unknown] (41 samples, 5.63%)</title><rect x="9.3407%" y="757" width="5.6319%" height="15" fill="rgb(210,75,36)"/><text x="9.5907%" y="767.50">[unknow..</text></g><g><title>[unknown] (40 samples, 5.49%)</title><rect x="9.4780%" y="741" width="5.4945%" height="15" fill="rgb(229,88,21)"/><text x="9.7280%" y="751.50">[unknow..</text></g><g><title>[unknown] (40 samples, 5.49%)</title><rect x="9.4780%" y="725" width="5.4945%" height="15" fill="rgb(252,204,47)"/><text x="9.7280%" y="735.50">[unknow..</text></g><g><title>&lt;tokio::time::driver::Driver&lt;T&gt; as tokio::park::Park&gt;::park (61 samples, 8.38%)</title><rect x="6.7308%" y="1093" width="8.3791%" height="15" fill="rgb(208,77,27)"/><text x="6.9808%" y="1103.50">&lt;tokio::time..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (61 samples, 8.38%)</title><rect x="6.7308%" y="1077" width="8.3791%" height="15" fill="rgb(221,76,26)"/><text x="6.9808%" y="1087.50">&lt;tokio::park..</text></g><g><title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park (61 samples, 8.38%)</title><rect x="6.7308%" y="1061" width="8.3791%" height="15" fill="rgb(225,139,18)"/><text x="6.9808%" y="1071.50">&lt;tokio::io::..</text></g><g><title>tokio::io::driver::Driver::turn (61 samples, 8.38%)</title><rect x="6.7308%" y="1045" width="8.3791%" height="15" fill="rgb(230,137,11)"/><text x="6.9808%" y="1055.50">tokio::io::d..</text></g><g><title>mio::poll::Poll::poll (60 samples, 8.24%)</title><rect x="6.8681%" y="1029" width="8.2418%" height="15" fill="rgb(212,28,1)"/><text x="7.1181%" y="1039.50">mio::poll::..</text></g><g><title>mio::poll::Poll::poll1 (60 samples, 8.24%)</title><rect x="6.8681%" y="1013" width="8.2418%" height="15" fill="rgb(248,164,17)"/><text x="7.1181%" y="1023.50">mio::poll::..</text></g><g><title>mio::poll::Poll::poll2 (60 samples, 8.24%)</title><rect x="6.8681%" y="997" width="8.2418%" height="15" fill="rgb(222,171,42)"/><text x="7.1181%" y="1007.50">mio::poll::..</text></g><g><title>std::time::Instant::now (1 samples, 0.14%)</title><rect x="14.9725%" y="981" width="0.1374%" height="15" fill="rgb(243,84,45)"/><text x="15.2225%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.14%)</title><rect x="14.9725%" y="965" width="0.1374%" height="15" fill="rgb(252,49,23)"/><text x="15.2225%" y="975.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.14%)</title><rect x="14.9725%" y="949" width="0.1374%" height="15" fill="rgb(215,19,7)"/><text x="15.2225%" y="959.50"></text></g><g><title>__clock_gettime (1 samples, 0.14%)</title><rect x="14.9725%" y="933" width="0.1374%" height="15" fill="rgb(238,81,41)"/><text x="15.2225%" y="943.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.14%)</title><rect x="14.9725%" y="917" width="0.1374%" height="15" fill="rgb(210,199,37)"/><text x="15.2225%" y="927.50"></text></g><g><title>[[vdso]] (1 samples, 0.14%)</title><rect x="14.9725%" y="901" width="0.1374%" height="15" fill="rgb(244,192,49)"/><text x="15.2225%" y="911.50"></text></g><g><title>tokio::runtime::basic_scheduler::SchedulerPriv::tick (62 samples, 8.52%)</title><rect x="6.7308%" y="1125" width="8.5165%" height="15" fill="rgb(226,211,11)"/><text x="6.9808%" y="1135.50">tokio::runti..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (62 samples, 8.52%)</title><rect x="6.7308%" y="1109" width="8.5165%" height="15" fill="rgb(236,162,54)"/><text x="6.9808%" y="1119.50">&lt;tokio::park..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.14%)</title><rect x="15.1099%" y="1093" width="0.1374%" height="15" fill="rgb(220,229,9)"/><text x="15.3599%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (80 samples, 10.99%)</title><rect x="4.3956%" y="1333" width="10.9890%" height="15" fill="rgb(250,87,22)"/><text x="4.6456%" y="1343.50">&lt;alloc::boxed::B..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (80 samples, 10.99%)</title><rect x="4.3956%" y="1317" width="10.9890%" height="15" fill="rgb(239,43,17)"/><text x="4.6456%" y="1327.50">&lt;alloc::boxed::B..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (80 samples, 10.99%)</title><rect x="4.3956%" y="1301" width="10.9890%" height="15" fill="rgb(231,177,25)"/><text x="4.6456%" y="1311.50">core::ops::funct..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (80 samples, 10.99%)</title><rect x="4.3956%" y="1285" width="10.9890%" height="15" fill="rgb(219,179,1)"/><text x="4.6456%" y="1295.50">std::thread::Bui..</text></g><g><title>std::panic::catch_unwind (80 samples, 10.99%)</title><rect x="4.3956%" y="1269" width="10.9890%" height="15" fill="rgb(238,219,53)"/><text x="4.6456%" y="1279.50">std::panic::catc..</text></g><g><title>std::panicking::try (80 samples, 10.99%)</title><rect x="4.3956%" y="1253" width="10.9890%" height="15" fill="rgb(232,167,36)"/><text x="4.6456%" y="1263.50">std::panicking::..</text></g><g><title>__rust_maybe_catch_panic (80 samples, 10.99%)</title><rect x="4.3956%" y="1237" width="10.9890%" height="15" fill="rgb(244,19,51)"/><text x="4.6456%" y="1247.50">__rust_maybe_cat..</text></g><g><title>rumq_broker::router (80 samples, 10.99%)</title><rect x="4.3956%" y="1221" width="10.9890%" height="15" fill="rgb(224,6,22)"/><text x="4.6456%" y="1231.50">rumq_broker::rou..</text></g><g><title>tokio::runtime::Runtime::block_on (80 samples, 10.99%)</title><rect x="4.3956%" y="1205" width="10.9890%" height="15" fill="rgb(224,145,5)"/><text x="4.6456%" y="1215.50">tokio::runtime::..</text></g><g><title>tokio::runtime::handle::Handle::enter (80 samples, 10.99%)</title><rect x="4.3956%" y="1189" width="10.9890%" height="15" fill="rgb(234,130,49)"/><text x="4.6456%" y="1199.50">tokio::runtime::..</text></g><g><title>tokio::runtime::context::enter (80 samples, 10.99%)</title><rect x="4.3956%" y="1173" width="10.9890%" height="15" fill="rgb(254,6,2)"/><text x="4.6456%" y="1183.50">tokio::runtime::..</text></g><g><title>tokio::runtime::Runtime::block_on::_{{closure}} (80 samples, 10.99%)</title><rect x="4.3956%" y="1157" width="10.9890%" height="15" fill="rgb(208,96,46)"/><text x="4.6456%" y="1167.50">tokio::runtime::..</text></g><g><title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (80 samples, 10.99%)</title><rect x="4.3956%" y="1141" width="10.9890%" height="15" fill="rgb(239,3,39)"/><text x="4.6456%" y="1151.50">tokio::runtime::..</text></g><g><title>tokio::task::queue::MpscQueues&lt;S&gt;::drain_pending_drop (1 samples, 0.14%)</title><rect x="15.2473%" y="1125" width="0.1374%" height="15" fill="rgb(233,210,1)"/><text x="15.4973%" y="1135.50"></text></g><g><title>rumq-cli (112 samples, 15.38%)</title><rect x="0.5495%" y="1413" width="15.3846%" height="15" fill="rgb(244,137,37)"/><text x="0.7995%" y="1423.50">rumq-cli</text></g><g><title>clone (100 samples, 13.74%)</title><rect x="2.1978%" y="1397" width="13.7363%" height="15" fill="rgb(240,136,2)"/><text x="2.4478%" y="1407.50">clone</text></g><g><title>start_thread (84 samples, 11.54%)</title><rect x="4.3956%" y="1381" width="11.5385%" height="15" fill="rgb(239,18,37)"/><text x="4.6456%" y="1391.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (84 samples, 11.54%)</title><rect x="4.3956%" y="1365" width="11.5385%" height="15" fill="rgb(218,185,22)"/><text x="4.6456%" y="1375.50">std::sys::unix::t..</text></g><g><title>std::sys_common::thread::start_thread (84 samples, 11.54%)</title><rect x="4.3956%" y="1349" width="11.5385%" height="15" fill="rgb(225,218,4)"/><text x="4.6456%" y="1359.50">std::sys_common::..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (4 samples, 0.55%)</title><rect x="15.3846%" y="1333" width="0.5495%" height="15" fill="rgb(230,182,32)"/><text x="15.6346%" y="1343.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (4 samples, 0.55%)</title><rect x="15.3846%" y="1317" width="0.5495%" height="15" fill="rgb(242,56,43)"/><text x="15.6346%" y="1327.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 0.55%)</title><rect x="15.3846%" y="1301" width="0.5495%" height="15" fill="rgb(233,99,24)"/><text x="15.6346%" y="1311.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 0.55%)</title><rect x="15.3846%" y="1285" width="0.5495%" height="15" fill="rgb(234,209,42)"/><text x="15.6346%" y="1295.50"></text></g><g><title>mmap64 (4 samples, 0.55%)</title><rect x="15.3846%" y="1269" width="0.5495%" height="15" fill="rgb(227,7,12)"/><text x="15.6346%" y="1279.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1253" width="0.5495%" height="15" fill="rgb(245,203,43)"/><text x="15.6346%" y="1263.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1237" width="0.5495%" height="15" fill="rgb(238,205,33)"/><text x="15.6346%" y="1247.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1221" width="0.5495%" height="15" fill="rgb(231,56,7)"/><text x="15.6346%" y="1231.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1205" width="0.5495%" height="15" fill="rgb(244,186,29)"/><text x="15.6346%" y="1215.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1189" width="0.5495%" height="15" fill="rgb(234,111,31)"/><text x="15.6346%" y="1199.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1173" width="0.5495%" height="15" fill="rgb(241,149,10)"/><text x="15.6346%" y="1183.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1157" width="0.5495%" height="15" fill="rgb(249,206,44)"/><text x="15.6346%" y="1167.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="15.3846%" y="1141" width="0.5495%" height="15" fill="rgb(251,153,30)"/><text x="15.6346%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="15.5220%" y="1125" width="0.4121%" height="15" fill="rgb(239,152,38)"/><text x="15.7720%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="15.7967%" y="1109" width="0.1374%" height="15" fill="rgb(249,139,47)"/><text x="16.0467%" y="1119.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="16.3462%" y="1381" width="0.1374%" height="15" fill="rgb(244,64,35)"/><text x="16.5962%" y="1391.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="16.4835%" y="1381" width="0.1374%" height="15" fill="rgb(216,46,15)"/><text x="16.7335%" y="1391.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.14%)</title><rect x="16.6209%" y="1381" width="0.1374%" height="15" fill="rgb(250,74,19)"/><text x="16.8709%" y="1391.50"></text></g><g><title>&lt;rumq_broker::codec::MqttCodec as tokio_util::codec::decoder::Decoder&gt;::decode (1 samples, 0.14%)</title><rect x="16.7582%" y="1381" width="0.1374%" height="15" fill="rgb(249,42,33)"/><text x="17.0082%" y="1391.50"></text></g><g><title>[libc-2.30.so] (2 samples, 0.27%)</title><rect x="16.8956%" y="1381" width="0.2747%" height="15" fill="rgb(242,149,17)"/><text x="17.1456%" y="1391.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="17.1703%" y="1381" width="0.1374%" height="15" fill="rgb(244,29,21)"/><text x="17.4203%" y="1391.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="17.1703%" y="1365" width="0.1374%" height="15" fill="rgb(220,130,37)"/><text x="17.4203%" y="1375.50"></text></g><g><title>__rust_maybe_catch_panic (2 samples, 0.27%)</title><rect x="17.3077%" y="1381" width="0.2747%" height="15" fill="rgb(211,67,2)"/><text x="17.5577%" y="1391.50"></text></g><g><title>mio::event_imp::Ready::as_usize (1 samples, 0.14%)</title><rect x="17.5824%" y="1381" width="0.1374%" height="15" fill="rgb(235,68,52)"/><text x="17.8324%" y="1391.50"></text></g><g><title>rumq_core::deserialize::MqttRead::deserialize (1 samples, 0.14%)</title><rect x="17.7198%" y="1381" width="0.1374%" height="15" fill="rgb(246,142,3)"/><text x="17.9698%" y="1391.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="17.8571%" y="1381" width="0.1374%" height="15" fill="rgb(241,25,7)"/><text x="18.1071%" y="1391.50"></text></g><g><title>std::io::cursor::vec_write (1 samples, 0.14%)</title><rect x="17.9945%" y="1381" width="0.1374%" height="15" fill="rgb(242,119,39)"/><text x="18.2445%" y="1391.50"></text></g><g><title>tokio::io::driver::Driver::turn (1 samples, 0.14%)</title><rect x="18.1319%" y="1381" width="0.1374%" height="15" fill="rgb(241,98,45)"/><text x="18.3819%" y="1391.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="18.2692%" y="1381" width="0.1374%" height="15" fill="rgb(254,28,30)"/><text x="18.5192%" y="1391.50"></text></g><g><title>tokio::task::raw::poll (1 samples, 0.14%)</title><rect x="18.4066%" y="1381" width="0.1374%" height="15" fill="rgb(241,142,54)"/><text x="18.6566%" y="1391.50"></text></g><g><title>[anon] (17 samples, 2.34%)</title><rect x="16.3462%" y="1397" width="2.3352%" height="15" fill="rgb(222,85,15)"/><text x="16.5962%" y="1407.50">[..</text></g><g><title>tokio::time::driver::Driver&lt;T&gt;::process (1 samples, 0.14%)</title><rect x="18.5440%" y="1381" width="0.1374%" height="15" fill="rgb(210,85,47)"/><text x="18.7940%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.27%)</title><rect x="19.6429%" y="1029" width="0.2747%" height="15" fill="rgb(224,206,25)"/><text x="19.8929%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.27%)</title><rect x="19.6429%" y="1013" width="0.2747%" height="15" fill="rgb(243,201,19)"/><text x="19.8929%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.27%)</title><rect x="19.6429%" y="997" width="0.2747%" height="15" fill="rgb(236,59,4)"/><text x="19.8929%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (2 samples, 0.27%)</title><rect x="19.6429%" y="981" width="0.2747%" height="15" fill="rgb(254,179,45)"/><text x="19.8929%" y="991.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.27%)</title><rect x="19.6429%" y="965" width="0.2747%" height="15" fill="rgb(226,14,10)"/><text x="19.8929%" y="975.50"></text></g><g><title>__libc_malloc (2 samples, 0.27%)</title><rect x="19.6429%" y="949" width="0.2747%" height="15" fill="rgb(244,27,41)"/><text x="19.8929%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="19.7802%" y="933" width="0.1374%" height="15" fill="rgb(235,35,32)"/><text x="20.0302%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="19.7802%" y="917" width="0.1374%" height="15" fill="rgb(218,68,31)"/><text x="20.0302%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="19.7802%" y="901" width="0.1374%" height="15" fill="rgb(207,120,37)"/><text x="20.0302%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="19.7802%" y="885" width="0.1374%" height="15" fill="rgb(227,98,0)"/><text x="20.0302%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="19.7802%" y="869" width="0.1374%" height="15" fill="rgb(207,7,3)"/><text x="20.0302%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="19.7802%" y="853" width="0.1374%" height="15" fill="rgb(206,98,19)"/><text x="20.0302%" y="863.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read_to_end (1 samples, 0.14%)</title><rect x="19.9176%" y="1013" width="0.1374%" height="15" fill="rgb(217,5,26)"/><text x="20.1676%" y="1023.50"></text></g><g><title>std::io::read_to_end_with_reservation (1 samples, 0.14%)</title><rect x="19.9176%" y="997" width="0.1374%" height="15" fill="rgb(235,190,38)"/><text x="20.1676%" y="1007.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="19.9176%" y="981" width="0.1374%" height="15" fill="rgb(247,86,24)"/><text x="20.1676%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (1 samples, 0.14%)</title><rect x="19.9176%" y="965" width="0.1374%" height="15" fill="rgb(205,101,16)"/><text x="20.1676%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (1 samples, 0.14%)</title><rect x="19.9176%" y="949" width="0.1374%" height="15" fill="rgb(246,168,33)"/><text x="20.1676%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.14%)</title><rect x="19.9176%" y="933" width="0.1374%" height="15" fill="rgb(231,114,1)"/><text x="20.1676%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="19.9176%" y="917" width="0.1374%" height="15" fill="rgb(207,184,53)"/><text x="20.1676%" y="927.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="19.9176%" y="901" width="0.1374%" height="15" fill="rgb(224,95,51)"/><text x="20.1676%" y="911.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.14%)</title><rect x="20.0549%" y="1013" width="0.1374%" height="15" fill="rgb(212,188,45)"/><text x="20.3049%" y="1023.50"></text></g><g><title>__libc_malloc (1 samples, 0.14%)</title><rect x="20.1923%" y="933" width="0.1374%" height="15" fill="rgb(223,154,38)"/><text x="20.4423%" y="943.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="19.6429%" y="1381" width="0.8242%" height="15" fill="rgb(251,22,52)"/><text x="19.8929%" y="1391.50"></text></g><g><title>rumq_broker::accept_loop::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="19.6429%" y="1365" width="0.8242%" height="15" fill="rgb(229,209,22)"/><text x="19.8929%" y="1375.50"></text></g><g><title>std::future::poll_with_tls_context (6 samples, 0.82%)</title><rect x="19.6429%" y="1349" width="0.8242%" height="15" fill="rgb(234,138,34)"/><text x="19.8929%" y="1359.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="19.6429%" y="1333" width="0.8242%" height="15" fill="rgb(212,95,11)"/><text x="19.8929%" y="1343.50"></text></g><g><title>rumq_broker::connection::eventloop::_{{closure}} (6 samples, 0.82%)</title><rect x="19.6429%" y="1317" width="0.8242%" height="15" fill="rgb(240,179,47)"/><text x="19.8929%" y="1327.50"></text></g><g><title>std::future::poll_with_tls_context (6 samples, 0.82%)</title><rect x="19.6429%" y="1301" width="0.8242%" height="15" fill="rgb(240,163,11)"/><text x="19.8929%" y="1311.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="19.6429%" y="1285" width="0.8242%" height="15" fill="rgb(236,37,12)"/><text x="19.8929%" y="1295.50"></text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}} (6 samples, 0.82%)</title><rect x="19.6429%" y="1269" width="0.8242%" height="15" fill="rgb(232,164,16)"/><text x="19.8929%" y="1279.50"></text></g><g><title>std::future::poll_with_tls_context (6 samples, 0.82%)</title><rect x="19.6429%" y="1253" width="0.8242%" height="15" fill="rgb(244,205,15)"/><text x="19.8929%" y="1263.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="19.6429%" y="1237" width="0.8242%" height="15" fill="rgb(223,117,47)"/><text x="19.8929%" y="1247.50"></text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="19.6429%" y="1221" width="0.8242%" height="15" fill="rgb(244,107,35)"/><text x="19.8929%" y="1231.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="19.6429%" y="1205" width="0.8242%" height="15" fill="rgb(205,140,8)"/><text x="19.8929%" y="1215.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="19.6429%" y="1189" width="0.8242%" height="15" fill="rgb(228,84,46)"/><text x="19.8929%" y="1199.50"></text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="19.6429%" y="1173" width="0.8242%" height="15" fill="rgb(254,188,9)"/><text x="19.8929%" y="1183.50"></text></g><g><title>std::future::poll_with_tls_context (6 samples, 0.82%)</title><rect x="19.6429%" y="1157" width="0.8242%" height="15" fill="rgb(206,112,54)"/><text x="19.8929%" y="1167.50"></text></g><g><title>&lt;tokio::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="19.6429%" y="1141" width="0.8242%" height="15" fill="rgb(216,84,49)"/><text x="19.8929%" y="1151.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.82%)</title><rect x="19.6429%" y="1125" width="0.8242%" height="15" fill="rgb(214,194,35)"/><text x="19.8929%" y="1135.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.82%)</title><rect x="19.6429%" y="1109" width="0.8242%" height="15" fill="rgb(249,28,3)"/><text x="19.8929%" y="1119.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.82%)</title><rect x="19.6429%" y="1093" width="0.8242%" height="15" fill="rgb(222,56,52)"/><text x="19.8929%" y="1103.50"></text></g><g><title>&lt;rumq_broker::codec::MqttCodec as tokio_util::codec::decoder::Decoder&gt;::decode (6 samples, 0.82%)</title><rect x="19.6429%" y="1077" width="0.8242%" height="15" fill="rgb(245,217,50)"/><text x="19.8929%" y="1087.50"></text></g><g><title>rumq_core::deserialize::MqttRead::deserialize (6 samples, 0.82%)</title><rect x="19.6429%" y="1061" width="0.8242%" height="15" fill="rgb(213,201,24)"/><text x="19.8929%" y="1071.50"></text></g><g><title>rumq_core::deserialize::MqttRead::read_publish (6 samples, 0.82%)</title><rect x="19.6429%" y="1045" width="0.8242%" height="15" fill="rgb(248,116,28)"/><text x="19.8929%" y="1055.50"></text></g><g><title>rumq_core::deserialize::MqttRead::read_mqtt_string (4 samples, 0.55%)</title><rect x="19.9176%" y="1029" width="0.5495%" height="15" fill="rgb(219,72,43)"/><text x="20.1676%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.27%)</title><rect x="20.1923%" y="1013" width="0.2747%" height="15" fill="rgb(209,138,14)"/><text x="20.4423%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.27%)</title><rect x="20.1923%" y="997" width="0.2747%" height="15" fill="rgb(222,18,33)"/><text x="20.4423%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.27%)</title><rect x="20.1923%" y="981" width="0.2747%" height="15" fill="rgb(213,199,7)"/><text x="20.4423%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (2 samples, 0.27%)</title><rect x="20.1923%" y="965" width="0.2747%" height="15" fill="rgb(250,110,10)"/><text x="20.4423%" y="975.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.27%)</title><rect x="20.1923%" y="949" width="0.2747%" height="15" fill="rgb(248,123,6)"/><text x="20.4423%" y="959.50"></text></g><g><title>__rust_alloc (1 samples, 0.14%)</title><rect x="20.3297%" y="933" width="0.1374%" height="15" fill="rgb(206,91,31)"/><text x="20.5797%" y="943.50"></text></g><g><title>&lt;std::future::SetOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="20.4670%" y="1381" width="0.1374%" height="15" fill="rgb(211,154,13)"/><text x="20.7170%" y="1391.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="20.6044%" y="1381" width="0.1374%" height="15" fill="rgb(225,148,7)"/><text x="20.8544%" y="1391.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="20.7418%" y="1381" width="0.1374%" height="15" fill="rgb(220,160,43)"/><text x="20.9918%" y="1391.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="20.8791%" y="1381" width="1.2363%" height="15" fill="rgb(213,52,39)"/><text x="21.1291%" y="1391.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="20.8791%" y="1365" width="1.2363%" height="15" fill="rgb(243,137,7)"/><text x="21.1291%" y="1375.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="20.8791%" y="1349" width="1.2363%" height="15" fill="rgb(230,79,13)"/><text x="21.1291%" y="1359.50"></text></g><g><title>[unknown] (8 samples, 1.10%)</title><rect x="21.0165%" y="1333" width="1.0989%" height="15" fill="rgb(247,105,23)"/><text x="21.2665%" y="1343.50"></text></g><g><title>[unknown] (8 samples, 1.10%)</title><rect x="21.0165%" y="1317" width="1.0989%" height="15" fill="rgb(223,179,41)"/><text x="21.2665%" y="1327.50"></text></g><g><title>[unknown] (8 samples, 1.10%)</title><rect x="21.0165%" y="1301" width="1.0989%" height="15" fill="rgb(218,9,34)"/><text x="21.2665%" y="1311.50"></text></g><g><title>[unknown] (7 samples, 0.96%)</title><rect x="21.1538%" y="1285" width="0.9615%" height="15" fill="rgb(222,106,8)"/><text x="21.4038%" y="1295.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="21.2912%" y="1269" width="0.8242%" height="15" fill="rgb(211,220,0)"/><text x="21.5412%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.69%)</title><rect x="21.4286%" y="1253" width="0.6868%" height="15" fill="rgb(229,52,16)"/><text x="21.6786%" y="1263.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="21.5659%" y="1237" width="0.5495%" height="15" fill="rgb(212,155,18)"/><text x="21.8159%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="21.7033%" y="1221" width="0.4121%" height="15" fill="rgb(242,21,14)"/><text x="21.9533%" y="1231.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="21.7033%" y="1205" width="0.4121%" height="15" fill="rgb(222,19,48)"/><text x="21.9533%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="21.8407%" y="1189" width="0.2747%" height="15" fill="rgb(232,45,27)"/><text x="22.0907%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="21.8407%" y="1173" width="0.2747%" height="15" fill="rgb(249,103,42)"/><text x="22.0907%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="21.9780%" y="1157" width="0.1374%" height="15" fill="rgb(246,81,33)"/><text x="22.2280%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="21.9780%" y="1141" width="0.1374%" height="15" fill="rgb(252,33,42)"/><text x="22.2280%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="21.9780%" y="1125" width="0.1374%" height="15" fill="rgb(209,212,41)"/><text x="22.2280%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="21.9780%" y="1109" width="0.1374%" height="15" fill="rgb(207,154,6)"/><text x="22.2280%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="21.9780%" y="1093" width="0.1374%" height="15" fill="rgb(223,64,47)"/><text x="22.2280%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="21.9780%" y="1077" width="0.1374%" height="15" fill="rgb(211,161,38)"/><text x="22.2280%" y="1087.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="22.1154%" y="1381" width="0.1374%" height="15" fill="rgb(219,138,40)"/><text x="22.3654%" y="1391.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="22.1154%" y="1365" width="0.1374%" height="15" fill="rgb(241,228,46)"/><text x="22.3654%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="22.1154%" y="1349" width="0.1374%" height="15" fill="rgb(223,209,38)"/><text x="22.3654%" y="1359.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.14%)</title><rect x="22.6648%" y="1029" width="0.1374%" height="15" fill="rgb(236,164,45)"/><text x="22.9148%" y="1039.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="22.6648%" y="1013" width="0.1374%" height="15" fill="rgb(231,15,5)"/><text x="22.9148%" y="1023.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="22.8022%" y="1029" width="0.1374%" height="15" fill="rgb(252,35,15)"/><text x="23.0522%" y="1039.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="22.8022%" y="1013" width="0.1374%" height="15" fill="rgb(248,181,18)"/><text x="23.0522%" y="1023.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="22.8022%" y="997" width="0.1374%" height="15" fill="rgb(233,39,42)"/><text x="23.0522%" y="1007.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="22.8022%" y="981" width="0.1374%" height="15" fill="rgb(238,110,33)"/><text x="23.0522%" y="991.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="22.8022%" y="965" width="0.1374%" height="15" fill="rgb(233,195,10)"/><text x="23.0522%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="22.8022%" y="949" width="0.1374%" height="15" fill="rgb(254,105,3)"/><text x="23.0522%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.14%)</title><rect x="22.8022%" y="933" width="0.1374%" height="15" fill="rgb(221,225,9)"/><text x="23.0522%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.14%)</title><rect x="22.8022%" y="917" width="0.1374%" height="15" fill="rgb(224,227,45)"/><text x="23.0522%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::run_task (6 samples, 0.82%)</title><rect x="22.2527%" y="1381" width="0.8242%" height="15" fill="rgb(229,198,43)"/><text x="22.5027%" y="1391.50"></text></g><g><title>tokio::task::Task&lt;S&gt;::run (6 samples, 0.82%)</title><rect x="22.2527%" y="1365" width="0.8242%" height="15" fill="rgb(206,209,35)"/><text x="22.5027%" y="1375.50"></text></g><g><title>tokio::task::raw::RawTask::poll (6 samples, 0.82%)</title><rect x="22.2527%" y="1349" width="0.8242%" height="15" fill="rgb(245,195,53)"/><text x="22.5027%" y="1359.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.82%)</title><rect x="22.2527%" y="1333" width="0.8242%" height="15" fill="rgb(240,92,26)"/><text x="22.5027%" y="1343.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (6 samples, 0.82%)</title><rect x="22.2527%" y="1317" width="0.8242%" height="15" fill="rgb(207,40,23)"/><text x="22.5027%" y="1327.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}} (6 samples, 0.82%)</title><rect x="22.2527%" y="1301" width="0.8242%" height="15" fill="rgb(223,111,35)"/><text x="22.5027%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.82%)</title><rect x="22.2527%" y="1285" width="0.8242%" height="15" fill="rgb(229,147,28)"/><text x="22.5027%" y="1295.50"></text></g><g><title>std::panicking::try (6 samples, 0.82%)</title><rect x="22.2527%" y="1269" width="0.8242%" height="15" fill="rgb(211,29,28)"/><text x="22.5027%" y="1279.50"></text></g><g><title>__rust_maybe_catch_panic (6 samples, 0.82%)</title><rect x="22.2527%" y="1253" width="0.8242%" height="15" fill="rgb(228,72,33)"/><text x="22.5027%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.82%)</title><rect x="22.2527%" y="1237" width="0.8242%" height="15" fill="rgb(205,214,31)"/><text x="22.5027%" y="1247.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (6 samples, 0.82%)</title><rect x="22.2527%" y="1221" width="0.8242%" height="15" fill="rgb(224,111,15)"/><text x="22.5027%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.82%)</title><rect x="22.2527%" y="1205" width="0.8242%" height="15" fill="rgb(253,21,26)"/><text x="22.5027%" y="1215.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="22.2527%" y="1189" width="0.8242%" height="15" fill="rgb(245,139,43)"/><text x="22.5027%" y="1199.50"></text></g><g><title>tokio::task::core::Core&lt;T&gt;::poll (6 samples, 0.82%)</title><rect x="22.2527%" y="1173" width="0.8242%" height="15" fill="rgb(252,170,7)"/><text x="22.5027%" y="1183.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="22.2527%" y="1157" width="0.8242%" height="15" fill="rgb(231,118,14)"/><text x="22.5027%" y="1167.50"></text></g><g><title>rumq_broker::accept_loop::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="22.2527%" y="1141" width="0.8242%" height="15" fill="rgb(238,83,0)"/><text x="22.5027%" y="1151.50"></text></g><g><title>std::future::poll_with_tls_context (6 samples, 0.82%)</title><rect x="22.2527%" y="1125" width="0.8242%" height="15" fill="rgb(221,39,39)"/><text x="22.5027%" y="1135.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="22.2527%" y="1109" width="0.8242%" height="15" fill="rgb(222,119,46)"/><text x="22.5027%" y="1119.50"></text></g><g><title>rumq_broker::connection::eventloop::_{{closure}} (6 samples, 0.82%)</title><rect x="22.2527%" y="1093" width="0.8242%" height="15" fill="rgb(222,165,49)"/><text x="22.5027%" y="1103.50"></text></g><g><title>std::future::poll_with_tls_context (5 samples, 0.69%)</title><rect x="22.3901%" y="1077" width="0.6868%" height="15" fill="rgb(219,113,52)"/><text x="22.6401%" y="1087.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.69%)</title><rect x="22.3901%" y="1061" width="0.6868%" height="15" fill="rgb(214,7,15)"/><text x="22.6401%" y="1071.50"></text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}} (5 samples, 0.69%)</title><rect x="22.3901%" y="1045" width="0.6868%" height="15" fill="rgb(235,32,4)"/><text x="22.6401%" y="1055.50"></text></g><g><title>tokio::time::timeout::timeout (1 samples, 0.14%)</title><rect x="22.9396%" y="1029" width="0.1374%" height="15" fill="rgb(238,90,54)"/><text x="23.1896%" y="1039.50"></text></g><g><title>core::ptr::real_drop_in_place (4 samples, 0.55%)</title><rect x="23.0769%" y="1237" width="0.5495%" height="15" fill="rgb(213,208,19)"/><text x="23.3269%" y="1247.50"></text></g><g><title>core::ptr::real_drop_in_place (4 samples, 0.55%)</title><rect x="23.0769%" y="1221" width="0.5495%" height="15" fill="rgb(233,156,4)"/><text x="23.3269%" y="1231.50"></text></g><g><title>core::ptr::real_drop_in_place (4 samples, 0.55%)</title><rect x="23.0769%" y="1205" width="0.5495%" height="15" fill="rgb(207,194,5)"/><text x="23.3269%" y="1215.50"></text></g><g><title>core::ptr::real_drop_in_place (4 samples, 0.55%)</title><rect x="23.0769%" y="1189" width="0.5495%" height="15" fill="rgb(206,111,30)"/><text x="23.3269%" y="1199.50"></text></g><g><title>tokio::time::driver::entry::Entry::cancel (4 samples, 0.55%)</title><rect x="23.0769%" y="1173" width="0.5495%" height="15" fill="rgb(243,70,54)"/><text x="23.3269%" y="1183.50"></text></g><g><title>tokio::time::driver::Inner::queue (4 samples, 0.55%)</title><rect x="23.0769%" y="1157" width="0.5495%" height="15" fill="rgb(242,28,8)"/><text x="23.3269%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (4 samples, 0.55%)</title><rect x="23.0769%" y="1141" width="0.5495%" height="15" fill="rgb(219,106,18)"/><text x="23.3269%" y="1151.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (4 samples, 0.55%)</title><rect x="23.0769%" y="1125" width="0.5495%" height="15" fill="rgb(244,222,10)"/><text x="23.3269%" y="1135.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (4 samples, 0.55%)</title><rect x="23.0769%" y="1109" width="0.5495%" height="15" fill="rgb(236,179,52)"/><text x="23.3269%" y="1119.50"></text></g><g><title>mio::poll::SetReadiness::set_readiness (4 samples, 0.55%)</title><rect x="23.0769%" y="1093" width="0.5495%" height="15" fill="rgb(213,23,39)"/><text x="23.3269%" y="1103.50"></text></g><g><title>mio::poll::RegistrationInner::set_readiness (4 samples, 0.55%)</title><rect x="23.0769%" y="1077" width="0.5495%" height="15" fill="rgb(238,48,10)"/><text x="23.3269%" y="1087.50"></text></g><g><title>mio::poll::ReadinessNode::enqueue_with_wakeup (4 samples, 0.55%)</title><rect x="23.0769%" y="1061" width="0.5495%" height="15" fill="rgb(251,196,23)"/><text x="23.3269%" y="1071.50"></text></g><g><title>mio::poll::enqueue_with_wakeup (4 samples, 0.55%)</title><rect x="23.0769%" y="1045" width="0.5495%" height="15" fill="rgb(250,152,24)"/><text x="23.3269%" y="1055.50"></text></g><g><title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (4 samples, 0.55%)</title><rect x="23.0769%" y="1029" width="0.5495%" height="15" fill="rgb(209,150,17)"/><text x="23.3269%" y="1039.50"></text></g><g><title>mio::poll::ReadinessQueueInner::wakeup (4 samples, 0.55%)</title><rect x="23.0769%" y="1013" width="0.5495%" height="15" fill="rgb(234,202,34)"/><text x="23.3269%" y="1023.50"></text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::wakeup (4 samples, 0.55%)</title><rect x="23.0769%" y="997" width="0.5495%" height="15" fill="rgb(253,148,53)"/><text x="23.3269%" y="1007.50"></text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (4 samples, 0.55%)</title><rect x="23.0769%" y="981" width="0.5495%" height="15" fill="rgb(218,129,16)"/><text x="23.3269%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (4 samples, 0.55%)</title><rect x="23.0769%" y="965" width="0.5495%" height="15" fill="rgb(216,85,19)"/><text x="23.3269%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (4 samples, 0.55%)</title><rect x="23.0769%" y="949" width="0.5495%" height="15" fill="rgb(235,228,7)"/><text x="23.3269%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.55%)</title><rect x="23.0769%" y="933" width="0.5495%" height="15" fill="rgb(245,175,0)"/><text x="23.3269%" y="943.50"></text></g><g><title>__libc_write (4 samples, 0.55%)</title><rect x="23.0769%" y="917" width="0.5495%" height="15" fill="rgb(208,168,36)"/><text x="23.3269%" y="927.50"></text></g><g><title>__libc_write (4 samples, 0.55%)</title><rect x="23.0769%" y="901" width="0.5495%" height="15" fill="rgb(246,171,24)"/><text x="23.3269%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="23.0769%" y="885" width="0.5495%" height="15" fill="rgb(215,142,24)"/><text x="23.3269%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="23.2143%" y="869" width="0.4121%" height="15" fill="rgb(250,187,7)"/><text x="23.4643%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="23.2143%" y="853" width="0.4121%" height="15" fill="rgb(228,66,33)"/><text x="23.4643%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="23.2143%" y="837" width="0.4121%" height="15" fill="rgb(234,215,21)"/><text x="23.4643%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="23.2143%" y="821" width="0.4121%" height="15" fill="rgb(222,191,20)"/><text x="23.4643%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="23.3516%" y="805" width="0.2747%" height="15" fill="rgb(245,79,54)"/><text x="23.6016%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="23.3516%" y="789" width="0.2747%" height="15" fill="rgb(240,10,37)"/><text x="23.6016%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="23.3516%" y="773" width="0.2747%" height="15" fill="rgb(214,192,32)"/><text x="23.6016%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="23.3516%" y="757" width="0.2747%" height="15" fill="rgb(209,36,54)"/><text x="23.6016%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="23.3516%" y="741" width="0.2747%" height="15" fill="rgb(220,10,11)"/><text x="23.6016%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="23.4890%" y="725" width="0.1374%" height="15" fill="rgb(221,106,17)"/><text x="23.7390%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="23.4890%" y="709" width="0.1374%" height="15" fill="rgb(251,142,44)"/><text x="23.7390%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="23.4890%" y="693" width="0.1374%" height="15" fill="rgb(238,13,15)"/><text x="23.7390%" y="703.50"></text></g><g><title>[unknown] (49 samples, 6.73%)</title><rect x="23.7637%" y="1013" width="6.7308%" height="15" fill="rgb(208,107,27)"/><text x="24.0137%" y="1023.50">[unknown]</text></g><g><title>[unknown] (49 samples, 6.73%)</title><rect x="23.7637%" y="997" width="6.7308%" height="15" fill="rgb(205,136,37)"/><text x="24.0137%" y="1007.50">[unknown]</text></g><g><title>[unknown] (48 samples, 6.59%)</title><rect x="23.9011%" y="981" width="6.5934%" height="15" fill="rgb(250,205,27)"/><text x="24.1511%" y="991.50">[unknown]</text></g><g><title>[unknown] (47 samples, 6.46%)</title><rect x="24.0385%" y="965" width="6.4560%" height="15" fill="rgb(210,80,43)"/><text x="24.2885%" y="975.50">[unknown]</text></g><g><title>[unknown] (45 samples, 6.18%)</title><rect x="24.3132%" y="949" width="6.1813%" height="15" fill="rgb(247,160,36)"/><text x="24.5632%" y="959.50">[unknown]</text></g><g><title>[unknown] (45 samples, 6.18%)</title><rect x="24.3132%" y="933" width="6.1813%" height="15" fill="rgb(234,13,49)"/><text x="24.5632%" y="943.50">[unknown]</text></g><g><title>[unknown] (43 samples, 5.91%)</title><rect x="24.5879%" y="917" width="5.9066%" height="15" fill="rgb(234,122,0)"/><text x="24.8379%" y="927.50">[unknown]</text></g><g><title>[unknown] (43 samples, 5.91%)</title><rect x="24.5879%" y="901" width="5.9066%" height="15" fill="rgb(207,146,38)"/><text x="24.8379%" y="911.50">[unknown]</text></g><g><title>[unknown] (34 samples, 4.67%)</title><rect x="25.8242%" y="885" width="4.6703%" height="15" fill="rgb(207,177,25)"/><text x="26.0742%" y="895.50">[unkn..</text></g><g><title>[unknown] (29 samples, 3.98%)</title><rect x="26.5110%" y="869" width="3.9835%" height="15" fill="rgb(211,178,42)"/><text x="26.7610%" y="879.50">[unk..</text></g><g><title>[unknown] (24 samples, 3.30%)</title><rect x="27.1978%" y="853" width="3.2967%" height="15" fill="rgb(230,69,54)"/><text x="27.4478%" y="863.50">[un..</text></g><g><title>[unknown] (21 samples, 2.88%)</title><rect x="27.6099%" y="837" width="2.8846%" height="15" fill="rgb(214,135,41)"/><text x="27.8599%" y="847.50">[u..</text></g><g><title>[unknown] (15 samples, 2.06%)</title><rect x="28.4341%" y="821" width="2.0604%" height="15" fill="rgb(237,67,25)"/><text x="28.6841%" y="831.50">[..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="28.5714%" y="805" width="1.9231%" height="15" fill="rgb(222,189,50)"/><text x="28.8214%" y="815.50">[..</text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="28.8462%" y="789" width="1.6484%" height="15" fill="rgb(245,148,34)"/><text x="29.0962%" y="799.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="28.8462%" y="773" width="1.6484%" height="15" fill="rgb(222,29,6)"/><text x="29.0962%" y="783.50"></text></g><g><title>[unknown] (11 samples, 1.51%)</title><rect x="28.9835%" y="757" width="1.5110%" height="15" fill="rgb(221,189,43)"/><text x="29.2335%" y="767.50"></text></g><g><title>[unknown] (10 samples, 1.37%)</title><rect x="29.1209%" y="741" width="1.3736%" height="15" fill="rgb(207,36,27)"/><text x="29.3709%" y="751.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="29.2582%" y="725" width="1.2363%" height="15" fill="rgb(217,90,24)"/><text x="29.5082%" y="735.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="29.2582%" y="709" width="1.2363%" height="15" fill="rgb(224,66,35)"/><text x="29.5082%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="29.6703%" y="693" width="0.8242%" height="15" fill="rgb(221,13,50)"/><text x="29.9203%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="29.6703%" y="677" width="0.8242%" height="15" fill="rgb(236,68,49)"/><text x="29.9203%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.69%)</title><rect x="29.8077%" y="661" width="0.6868%" height="15" fill="rgb(229,146,28)"/><text x="30.0577%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.69%)</title><rect x="29.8077%" y="645" width="0.6868%" height="15" fill="rgb(225,31,38)"/><text x="30.0577%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="629" width="0.5495%" height="15" fill="rgb(250,208,3)"/><text x="30.1951%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="613" width="0.5495%" height="15" fill="rgb(246,54,23)"/><text x="30.1951%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="597" width="0.5495%" height="15" fill="rgb(243,76,11)"/><text x="30.1951%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="581" width="0.5495%" height="15" fill="rgb(245,21,50)"/><text x="30.1951%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="565" width="0.5495%" height="15" fill="rgb(228,9,43)"/><text x="30.1951%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="549" width="0.5495%" height="15" fill="rgb(208,100,47)"/><text x="30.1951%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="533" width="0.5495%" height="15" fill="rgb(232,26,8)"/><text x="30.1951%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="29.9451%" y="517" width="0.5495%" height="15" fill="rgb(216,166,38)"/><text x="30.1951%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.0824%" y="501" width="0.4121%" height="15" fill="rgb(251,202,51)"/><text x="30.3324%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.0824%" y="485" width="0.4121%" height="15" fill="rgb(254,216,34)"/><text x="30.3324%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.0824%" y="469" width="0.4121%" height="15" fill="rgb(251,32,27)"/><text x="30.3324%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.0824%" y="453" width="0.4121%" height="15" fill="rgb(208,127,28)"/><text x="30.3324%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="30.0824%" y="437" width="0.4121%" height="15" fill="rgb(224,137,22)"/><text x="30.3324%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="421" width="0.1374%" height="15" fill="rgb(254,70,32)"/><text x="30.6071%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="405" width="0.1374%" height="15" fill="rgb(229,75,37)"/><text x="30.6071%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="389" width="0.1374%" height="15" fill="rgb(252,64,23)"/><text x="30.6071%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="373" width="0.1374%" height="15" fill="rgb(232,162,48)"/><text x="30.6071%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="357" width="0.1374%" height="15" fill="rgb(246,160,12)"/><text x="30.6071%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="341" width="0.1374%" height="15" fill="rgb(247,166,0)"/><text x="30.6071%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="325" width="0.1374%" height="15" fill="rgb(249,219,21)"/><text x="30.6071%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="309" width="0.1374%" height="15" fill="rgb(205,209,3)"/><text x="30.6071%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="30.3571%" y="293" width="0.1374%" height="15" fill="rgb(243,44,1)"/><text x="30.6071%" y="303.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (51 samples, 7.01%)</title><rect x="23.6264%" y="1205" width="7.0055%" height="15" fill="rgb(206,159,16)"/><text x="23.8764%" y="1215.50">&lt;&amp;mut S a..</text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (51 samples, 7.01%)</title><rect x="23.6264%" y="1189" width="7.0055%" height="15" fill="rgb(244,77,30)"/><text x="23.8764%" y="1199.50">&lt;tokio_ut..</text></g><g><title>&lt;tokio_util::codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (51 samples, 7.01%)</title><rect x="23.6264%" y="1173" width="7.0055%" height="15" fill="rgb(218,69,12)"/><text x="23.8764%" y="1183.50">&lt;tokio_ut..</text></g><g><title>&lt;tokio_util::codec::framed::Fuse&lt;T,U&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (50 samples, 6.87%)</title><rect x="23.7637%" y="1157" width="6.8681%" height="15" fill="rgb(212,87,7)"/><text x="24.0137%" y="1167.50">&lt;tokio_ut..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (50 samples, 6.87%)</title><rect x="23.7637%" y="1141" width="6.8681%" height="15" fill="rgb(245,114,25)"/><text x="24.0137%" y="1151.50">&lt;tokio::n..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (50 samples, 6.87%)</title><rect x="23.7637%" y="1125" width="6.8681%" height="15" fill="rgb(210,61,42)"/><text x="24.0137%" y="1135.50">tokio::ne..</text></g><g><title>&lt;&amp;mio::net::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 6.87%)</title><rect x="23.7637%" y="1109" width="6.8681%" height="15" fill="rgb(211,52,33)"/><text x="24.0137%" y="1119.50">&lt;&amp;mio::ne..</text></g><g><title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 6.87%)</title><rect x="23.7637%" y="1093" width="6.8681%" height="15" fill="rgb(234,58,33)"/><text x="24.0137%" y="1103.50">&lt;&amp;mio::sy..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 6.87%)</title><rect x="23.7637%" y="1077" width="6.8681%" height="15" fill="rgb(220,115,36)"/><text x="24.0137%" y="1087.50">&lt;&amp;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::write (50 samples, 6.87%)</title><rect x="23.7637%" y="1061" width="6.8681%" height="15" fill="rgb(243,153,54)"/><text x="24.0137%" y="1071.50">std::sys_..</text></g><g><title>__libc_send (50 samples, 6.87%)</title><rect x="23.7637%" y="1045" width="6.8681%" height="15" fill="rgb(251,47,18)"/><text x="24.0137%" y="1055.50">__libc_se..</text></g><g><title>__libc_send (50 samples, 6.87%)</title><rect x="23.7637%" y="1029" width="6.8681%" height="15" fill="rgb(242,102,42)"/><text x="24.0137%" y="1039.50">__libc_se..</text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="30.4945%" y="1013" width="0.1374%" height="15" fill="rgb(234,31,38)"/><text x="30.7445%" y="1023.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.41%)</title><rect x="30.6319%" y="1093" width="0.4121%" height="15" fill="rgb(221,117,51)"/><text x="30.8819%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.69%)</title><rect x="30.6319%" y="1109" width="0.6868%" height="15" fill="rgb(212,20,18)"/><text x="30.8819%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.27%)</title><rect x="31.0440%" y="1093" width="0.2747%" height="15" fill="rgb(245,133,36)"/><text x="31.2940%" y="1103.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (2 samples, 0.27%)</title><rect x="33.7912%" y="1061" width="0.2747%" height="15" fill="rgb(212,6,19)"/><text x="34.0412%" y="1071.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (1 samples, 0.14%)</title><rect x="34.0659%" y="1061" width="0.1374%" height="15" fill="rgb(218,1,36)"/><text x="34.3159%" y="1071.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (34 samples, 4.67%)</title><rect x="31.3187%" y="1109" width="4.6703%" height="15" fill="rgb(246,84,54)"/><text x="31.5687%" y="1119.50">bytes..</text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (28 samples, 3.85%)</title><rect x="32.1429%" y="1093" width="3.8462%" height="15" fill="rgb(242,110,6)"/><text x="32.3929%" y="1103.50">&lt;byt..</text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (16 samples, 2.20%)</title><rect x="33.7912%" y="1077" width="2.1978%" height="15" fill="rgb(214,47,5)"/><text x="34.0412%" y="1087.50">b..</text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 1.79%)</title><rect x="34.2033%" y="1061" width="1.7857%" height="15" fill="rgb(218,159,25)"/><text x="34.4533%" y="1071.50">c..</text></g><g><title>[libc-2.30.so] (11 samples, 1.51%)</title><rect x="34.4780%" y="1045" width="1.5110%" height="15" fill="rgb(215,211,28)"/><text x="34.7280%" y="1055.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;&amp;u8&gt;&gt;::extend (40 samples, 5.49%)</title><rect x="30.6319%" y="1141" width="5.4945%" height="15" fill="rgb(238,59,32)"/><text x="30.8819%" y="1151.50">&lt;bytes:..</text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (40 samples, 5.49%)</title><rect x="30.6319%" y="1125" width="5.4945%" height="15" fill="rgb(226,82,3)"/><text x="30.8819%" y="1135.50">&lt;bytes:..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve (1 samples, 0.14%)</title><rect x="35.9890%" y="1109" width="0.1374%" height="15" fill="rgb(240,164,32)"/><text x="36.2390%" y="1119.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="36.1264%" y="1141" width="0.1374%" height="15" fill="rgb(232,46,7)"/><text x="36.3764%" y="1151.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u16 (1 samples, 0.14%)</title><rect x="36.2637%" y="1125" width="0.1374%" height="15" fill="rgb(229,129,53)"/><text x="36.5137%" y="1135.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="36.2637%" y="1109" width="0.1374%" height="15" fill="rgb(234,188,29)"/><text x="36.5137%" y="1119.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="36.2637%" y="1093" width="0.1374%" height="15" fill="rgb(246,141,4)"/><text x="36.5137%" y="1103.50"></text></g><g><title>std::io::cursor::vec_write (1 samples, 0.14%)</title><rect x="36.2637%" y="1077" width="0.1374%" height="15" fill="rgb(229,23,39)"/><text x="36.5137%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="36.2637%" y="1061" width="0.1374%" height="15" fill="rgb(206,12,3)"/><text x="36.5137%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="36.2637%" y="1045" width="0.1374%" height="15" fill="rgb(252,226,20)"/><text x="36.5137%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.14%)</title><rect x="36.2637%" y="1029" width="0.1374%" height="15" fill="rgb(216,123,35)"/><text x="36.5137%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="36.2637%" y="1013" width="0.1374%" height="15" fill="rgb(212,68,40)"/><text x="36.5137%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (1 samples, 0.14%)</title><rect x="36.2637%" y="997" width="0.1374%" height="15" fill="rgb(254,125,32)"/><text x="36.5137%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc (1 samples, 0.14%)</title><rect x="36.2637%" y="981" width="0.1374%" height="15" fill="rgb(253,97,22)"/><text x="36.5137%" y="991.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.14%)</title><rect x="36.2637%" y="965" width="0.1374%" height="15" fill="rgb(241,101,14)"/><text x="36.5137%" y="975.50"></text></g><g><title>realloc (1 samples, 0.14%)</title><rect x="36.2637%" y="949" width="0.1374%" height="15" fill="rgb(238,103,29)"/><text x="36.5137%" y="959.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="36.2637%" y="933" width="0.1374%" height="15" fill="rgb(233,195,47)"/><text x="36.5137%" y="943.50"></text></g><g><title>rumq_core::serialize::MqttWrite::write_remaining_length (1 samples, 0.14%)</title><rect x="36.4011%" y="1125" width="0.1374%" height="15" fill="rgb(246,218,30)"/><text x="36.6511%" y="1135.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u8 (1 samples, 0.14%)</title><rect x="36.4011%" y="1109" width="0.1374%" height="15" fill="rgb(219,145,47)"/><text x="36.6511%" y="1119.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="36.4011%" y="1093" width="0.1374%" height="15" fill="rgb(243,12,26)"/><text x="36.6511%" y="1103.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="36.4011%" y="1077" width="0.1374%" height="15" fill="rgb(214,87,16)"/><text x="36.6511%" y="1087.50"></text></g><g><title>std::io::cursor::vec_write (1 samples, 0.14%)</title><rect x="36.4011%" y="1061" width="0.1374%" height="15" fill="rgb(208,99,42)"/><text x="36.6511%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="36.4011%" y="1045" width="0.1374%" height="15" fill="rgb(253,99,2)"/><text x="36.6511%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="36.4011%" y="1029" width="0.1374%" height="15" fill="rgb(220,168,23)"/><text x="36.6511%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.14%)</title><rect x="36.4011%" y="1013" width="0.1374%" height="15" fill="rgb(242,38,24)"/><text x="36.6511%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="36.4011%" y="997" width="0.1374%" height="15" fill="rgb(225,182,9)"/><text x="36.6511%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (1 samples, 0.14%)</title><rect x="36.4011%" y="981" width="0.1374%" height="15" fill="rgb(243,178,37)"/><text x="36.6511%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc (1 samples, 0.14%)</title><rect x="36.4011%" y="965" width="0.1374%" height="15" fill="rgb(232,139,19)"/><text x="36.6511%" y="975.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.14%)</title><rect x="36.4011%" y="949" width="0.1374%" height="15" fill="rgb(225,201,24)"/><text x="36.6511%" y="959.50"></text></g><g><title>realloc (1 samples, 0.14%)</title><rect x="36.4011%" y="933" width="0.1374%" height="15" fill="rgb(221,47,46)"/><text x="36.6511%" y="943.50"></text></g><g><title>[libc-2.30.so] (6 samples, 0.82%)</title><rect x="36.6758%" y="949" width="0.8242%" height="15" fill="rgb(249,23,13)"/><text x="36.9258%" y="959.50"></text></g><g><title>[libc-2.30.so] (6 samples, 0.82%)</title><rect x="36.6758%" y="933" width="0.8242%" height="15" fill="rgb(219,9,5)"/><text x="36.9258%" y="943.50"></text></g><g><title>[libc-2.30.so] (4 samples, 0.55%)</title><rect x="36.9505%" y="917" width="0.5495%" height="15" fill="rgb(254,171,16)"/><text x="37.2005%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 1.24%)</title><rect x="36.5385%" y="1061" width="1.2363%" height="15" fill="rgb(230,171,20)"/><text x="36.7885%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (9 samples, 1.24%)</title><rect x="36.5385%" y="1045" width="1.2363%" height="15" fill="rgb(210,71,41)"/><text x="36.7885%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 1.24%)</title><rect x="36.5385%" y="1029" width="1.2363%" height="15" fill="rgb(206,173,20)"/><text x="36.7885%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (9 samples, 1.24%)</title><rect x="36.5385%" y="1013" width="1.2363%" height="15" fill="rgb(233,88,34)"/><text x="36.7885%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc (9 samples, 1.24%)</title><rect x="36.5385%" y="997" width="1.2363%" height="15" fill="rgb(223,209,46)"/><text x="36.7885%" y="1007.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 1.24%)</title><rect x="36.5385%" y="981" width="1.2363%" height="15" fill="rgb(250,43,18)"/><text x="36.7885%" y="991.50"></text></g><g><title>realloc (9 samples, 1.24%)</title><rect x="36.5385%" y="965" width="1.2363%" height="15" fill="rgb(208,13,10)"/><text x="36.7885%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.5000%" y="949" width="0.2747%" height="15" fill="rgb(212,200,36)"/><text x="37.7500%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.5000%" y="933" width="0.2747%" height="15" fill="rgb(225,90,30)"/><text x="37.7500%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.5000%" y="917" width="0.2747%" height="15" fill="rgb(236,182,39)"/><text x="37.7500%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.5000%" y="901" width="0.2747%" height="15" fill="rgb(212,144,35)"/><text x="37.7500%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="37.5000%" y="885" width="0.2747%" height="15" fill="rgb(228,63,44)"/><text x="37.7500%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.6374%" y="869" width="0.1374%" height="15" fill="rgb(228,109,6)"/><text x="37.8874%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.6374%" y="853" width="0.1374%" height="15" fill="rgb(238,117,24)"/><text x="37.8874%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.6374%" y="837" width="0.1374%" height="15" fill="rgb(242,26,26)"/><text x="37.8874%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.6374%" y="821" width="0.1374%" height="15" fill="rgb(221,92,48)"/><text x="37.8874%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.6374%" y="805" width="0.1374%" height="15" fill="rgb(209,209,32)"/><text x="37.8874%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="37.6374%" y="789" width="0.1374%" height="15" fill="rgb(221,70,22)"/><text x="37.8874%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 1.51%)</title><rect x="36.5385%" y="1077" width="1.5110%" height="15" fill="rgb(248,145,5)"/><text x="36.7885%" y="1087.50"></text></g><g><title>[libc-2.30.so] (2 samples, 0.27%)</title><rect x="37.7747%" y="1061" width="0.2747%" height="15" fill="rgb(226,116,26)"/><text x="38.0247%" y="1071.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (106 samples, 14.56%)</title><rect x="23.6264%" y="1221" width="14.5604%" height="15" fill="rgb(244,5,17)"/><text x="23.8764%" y="1231.50">&lt;futures_util::sink::s..</text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (55 samples, 7.55%)</title><rect x="30.6319%" y="1205" width="7.5549%" height="15" fill="rgb(252,159,33)"/><text x="30.8819%" y="1215.50">&lt;&amp;mut S as..</text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (55 samples, 7.55%)</title><rect x="30.6319%" y="1189" width="7.5549%" height="15" fill="rgb(206,71,0)"/><text x="30.8819%" y="1199.50">&lt;tokio_uti..</text></g><g><title>&lt;tokio_util::codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;I&gt;&gt;::start_send (55 samples, 7.55%)</title><rect x="30.6319%" y="1173" width="7.5549%" height="15" fill="rgb(233,118,54)"/><text x="30.8819%" y="1183.50">&lt;tokio_uti..</text></g><g><title>&lt;rumq_broker::codec::MqttCodec as tokio_util::codec::encoder::Encoder&gt;::encode (55 samples, 7.55%)</title><rect x="30.6319%" y="1157" width="7.5549%" height="15" fill="rgb(234,83,48)"/><text x="30.8819%" y="1167.50">&lt;rumq_brok..</text></g><g><title>rumq_core::serialize::MqttWrite::mqtt_write (14 samples, 1.92%)</title><rect x="36.2637%" y="1141" width="1.9231%" height="15" fill="rgb(228,3,54)"/><text x="36.5137%" y="1151.50">r..</text></g><g><title>std::io::Write::write_all (12 samples, 1.65%)</title><rect x="36.5385%" y="1125" width="1.6484%" height="15" fill="rgb(226,155,13)"/><text x="36.7885%" y="1135.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt; as std::io::Write&gt;::write (12 samples, 1.65%)</title><rect x="36.5385%" y="1109" width="1.6484%" height="15" fill="rgb(241,28,37)"/><text x="36.7885%" y="1119.50"></text></g><g><title>std::io::cursor::vec_write (12 samples, 1.65%)</title><rect x="36.5385%" y="1093" width="1.6484%" height="15" fill="rgb(233,93,10)"/><text x="36.7885%" y="1103.50"></text></g><g><title>core::cmp::min (1 samples, 0.14%)</title><rect x="38.0495%" y="1077" width="0.1374%" height="15" fill="rgb(225,113,19)"/><text x="38.2995%" y="1087.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.14%)</title><rect x="38.0495%" y="1061" width="0.1374%" height="15" fill="rgb(241,2,18)"/><text x="38.2995%" y="1071.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.14%)</title><rect x="38.0495%" y="1045" width="0.1374%" height="15" fill="rgb(228,207,21)"/><text x="38.2995%" y="1055.50"></text></g><g><title>std::future::poll_with_tls_context (1 samples, 0.14%)</title><rect x="38.3242%" y="1189" width="0.1374%" height="15" fill="rgb(213,211,35)"/><text x="38.5742%" y="1199.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.14%)</title><rect x="38.3242%" y="1173" width="0.1374%" height="15" fill="rgb(209,83,10)"/><text x="38.5742%" y="1183.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}}::_{{closure}} (1 samples, 0.14%)</title><rect x="38.3242%" y="1157" width="0.1374%" height="15" fill="rgb(209,164,1)"/><text x="38.5742%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::poll_ready (1 samples, 0.14%)</title><rect x="38.3242%" y="1141" width="0.1374%" height="15" fill="rgb(213,184,43)"/><text x="38.5742%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::poll_ready (1 samples, 0.14%)</title><rect x="38.3242%" y="1125" width="0.1374%" height="15" fill="rgb(231,61,34)"/><text x="38.5742%" y="1135.50"></text></g><g><title>&lt; (1 samples, 0.14%)</title><rect x="38.3242%" y="1109" width="0.1374%" height="15" fill="rgb(235,75,3)"/><text x="38.5742%" y="1119.50"></text></g><g><title>tokio::sync::semaphore_ll::Permit::poll_acquire (1 samples, 0.14%)</title><rect x="38.3242%" y="1093" width="0.1374%" height="15" fill="rgb(220,106,47)"/><text x="38.5742%" y="1103.50"></text></g><g><title>tokio::sync::semaphore_ll::Semaphore::poll_acquire (1 samples, 0.14%)</title><rect x="38.3242%" y="1077" width="0.1374%" height="15" fill="rgb(210,196,33)"/><text x="38.5742%" y="1087.50"></text></g><g><title>tokio::sync::semaphore_ll::Semaphore::poll_acquire2 (1 samples, 0.14%)</title><rect x="38.3242%" y="1061" width="0.1374%" height="15" fill="rgb(229,154,42)"/><text x="38.5742%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.14%)</title><rect x="38.3242%" y="1045" width="0.1374%" height="15" fill="rgb(228,114,26)"/><text x="38.5742%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="38.3242%" y="1029" width="0.1374%" height="15" fill="rgb(208,144,1)"/><text x="38.5742%" y="1039.50"></text></g><g><title>mio::poll::SetReadiness::set_readiness (15 samples, 2.06%)</title><rect x="38.4615%" y="1077" width="2.0604%" height="15" fill="rgb(239,112,37)"/><text x="38.7115%" y="1087.50">m..</text></g><g><title>mio::poll::RegistrationInner::set_readiness (15 samples, 2.06%)</title><rect x="38.4615%" y="1061" width="2.0604%" height="15" fill="rgb(210,96,50)"/><text x="38.7115%" y="1071.50">m..</text></g><g><title>mio::poll::ReadinessNode::enqueue_with_wakeup (15 samples, 2.06%)</title><rect x="38.4615%" y="1045" width="2.0604%" height="15" fill="rgb(222,178,2)"/><text x="38.7115%" y="1055.50">m..</text></g><g><title>mio::poll::enqueue_with_wakeup (15 samples, 2.06%)</title><rect x="38.4615%" y="1029" width="2.0604%" height="15" fill="rgb(226,74,18)"/><text x="38.7115%" y="1039.50">m..</text></g><g><title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (15 samples, 2.06%)</title><rect x="38.4615%" y="1013" width="2.0604%" height="15" fill="rgb(225,67,54)"/><text x="38.7115%" y="1023.50">m..</text></g><g><title>mio::poll::ReadinessQueueInner::wakeup (15 samples, 2.06%)</title><rect x="38.4615%" y="997" width="2.0604%" height="15" fill="rgb(251,92,32)"/><text x="38.7115%" y="1007.50">m..</text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::wakeup (15 samples, 2.06%)</title><rect x="38.4615%" y="981" width="2.0604%" height="15" fill="rgb(228,149,22)"/><text x="38.7115%" y="991.50">m..</text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (15 samples, 2.06%)</title><rect x="38.4615%" y="965" width="2.0604%" height="15" fill="rgb(243,54,13)"/><text x="38.7115%" y="975.50">&lt;..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (15 samples, 2.06%)</title><rect x="38.4615%" y="949" width="2.0604%" height="15" fill="rgb(243,180,28)"/><text x="38.7115%" y="959.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::write (15 samples, 2.06%)</title><rect x="38.4615%" y="933" width="2.0604%" height="15" fill="rgb(208,167,24)"/><text x="38.7115%" y="943.50">s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (15 samples, 2.06%)</title><rect x="38.4615%" y="917" width="2.0604%" height="15" fill="rgb(245,73,45)"/><text x="38.7115%" y="927.50">s..</text></g><g><title>__libc_write (15 samples, 2.06%)</title><rect x="38.4615%" y="901" width="2.0604%" height="15" fill="rgb(237,203,48)"/><text x="38.7115%" y="911.50">_..</text></g><g><title>__libc_write (15 samples, 2.06%)</title><rect x="38.4615%" y="885" width="2.0604%" height="15" fill="rgb(211,197,16)"/><text x="38.7115%" y="895.50">_..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="38.5989%" y="869" width="1.9231%" height="15" fill="rgb(243,99,51)"/><text x="38.8489%" y="879.50">[..</text></g><g><title>[unknown] (13 samples, 1.79%)</title><rect x="38.7363%" y="853" width="1.7857%" height="15" fill="rgb(215,123,29)"/><text x="38.9863%" y="863.50">[..</text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="38.8736%" y="837" width="1.6484%" height="15" fill="rgb(239,186,37)"/><text x="39.1236%" y="847.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="38.8736%" y="821" width="1.6484%" height="15" fill="rgb(252,136,39)"/><text x="39.1236%" y="831.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="38.8736%" y="805" width="1.6484%" height="15" fill="rgb(223,213,32)"/><text x="39.1236%" y="815.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="38.8736%" y="789" width="1.6484%" height="15" fill="rgb(233,115,5)"/><text x="39.1236%" y="799.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="38.8736%" y="773" width="1.6484%" height="15" fill="rgb(207,226,44)"/><text x="39.1236%" y="783.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="38.8736%" y="757" width="1.6484%" height="15" fill="rgb(208,126,0)"/><text x="39.1236%" y="767.50"></text></g><g><title>[unknown] (10 samples, 1.37%)</title><rect x="39.1484%" y="741" width="1.3736%" height="15" fill="rgb(244,66,21)"/><text x="39.3984%" y="751.50"></text></g><g><title>[unknown] (10 samples, 1.37%)</title><rect x="39.1484%" y="725" width="1.3736%" height="15" fill="rgb(222,97,12)"/><text x="39.3984%" y="735.50"></text></g><g><title>[unknown] (10 samples, 1.37%)</title><rect x="39.1484%" y="709" width="1.3736%" height="15" fill="rgb(219,213,19)"/><text x="39.3984%" y="719.50"></text></g><g><title>[unknown] (10 samples, 1.37%)</title><rect x="39.1484%" y="693" width="1.3736%" height="15" fill="rgb(252,169,30)"/><text x="39.3984%" y="703.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="39.2857%" y="677" width="1.2363%" height="15" fill="rgb(206,32,51)"/><text x="39.5357%" y="687.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="39.2857%" y="661" width="1.2363%" height="15" fill="rgb(250,172,42)"/><text x="39.5357%" y="671.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="39.2857%" y="645" width="1.2363%" height="15" fill="rgb(209,34,43)"/><text x="39.5357%" y="655.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="39.2857%" y="629" width="1.2363%" height="15" fill="rgb(223,11,35)"/><text x="39.5357%" y="639.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="39.2857%" y="613" width="1.2363%" height="15" fill="rgb(251,219,26)"/><text x="39.5357%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="39.6978%" y="597" width="0.8242%" height="15" fill="rgb(231,119,3)"/><text x="39.9478%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.69%)</title><rect x="39.8352%" y="581" width="0.6868%" height="15" fill="rgb(216,97,11)"/><text x="40.0852%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="40.1099%" y="565" width="0.4121%" height="15" fill="rgb(223,59,9)"/><text x="40.3599%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="40.1099%" y="549" width="0.4121%" height="15" fill="rgb(233,93,31)"/><text x="40.3599%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="40.3846%" y="533" width="0.1374%" height="15" fill="rgb(239,81,33)"/><text x="40.6346%" y="543.50"></text></g><g><title>tokio::runtime::basic_scheduler::sched_wake (16 samples, 2.20%)</title><rect x="38.4615%" y="1141" width="2.1978%" height="15" fill="rgb(213,120,34)"/><text x="38.7115%" y="1151.50">t..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (16 samples, 2.20%)</title><rect x="38.4615%" y="1125" width="2.1978%" height="15" fill="rgb(243,49,53)"/><text x="38.7115%" y="1135.50">&lt;..</text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (16 samples, 2.20%)</title><rect x="38.4615%" y="1109" width="2.1978%" height="15" fill="rgb(247,216,33)"/><text x="38.7115%" y="1119.50">&lt;..</text></g><g><title>tokio::io::driver::Handle::wakeup (16 samples, 2.20%)</title><rect x="38.4615%" y="1093" width="2.1978%" height="15" fill="rgb(226,26,14)"/><text x="38.7115%" y="1103.50">t..</text></g><g><title>tokio::io::driver::Handle::inner (1 samples, 0.14%)</title><rect x="40.5220%" y="1077" width="0.1374%" height="15" fill="rgb(215,49,53)"/><text x="40.7720%" y="1087.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (1 samples, 0.14%)</title><rect x="40.5220%" y="1061" width="0.1374%" height="15" fill="rgb(245,162,40)"/><text x="40.7720%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.14%)</title><rect x="40.5220%" y="1045" width="0.1374%" height="15" fill="rgb(229,68,17)"/><text x="40.7720%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.14%)</title><rect x="40.5220%" y="1029" width="0.1374%" height="15" fill="rgb(213,182,10)"/><text x="40.7720%" y="1039.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 2.61%)</title><rect x="38.1868%" y="1221" width="2.6099%" height="15" fill="rgb(245,125,30)"/><text x="38.4368%" y="1231.50">&lt;s..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}} (19 samples, 2.61%)</title><rect x="38.1868%" y="1205" width="2.6099%" height="15" fill="rgb(232,202,2)"/><text x="38.4368%" y="1215.50">to..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::try_send (17 samples, 2.34%)</title><rect x="38.4615%" y="1189" width="2.3352%" height="15" fill="rgb(237,140,51)"/><text x="38.7115%" y="1199.50">t..</text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::try_send (17 samples, 2.34%)</title><rect x="38.4615%" y="1173" width="2.3352%" height="15" fill="rgb(236,157,25)"/><text x="38.7115%" y="1183.50">t..</text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::try_send (17 samples, 2.34%)</title><rect x="38.4615%" y="1157" width="2.3352%" height="15" fill="rgb(219,209,0)"/><text x="38.7115%" y="1167.50">t..</text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (1 samples, 0.14%)</title><rect x="40.6593%" y="1141" width="0.1374%" height="15" fill="rgb(240,116,54)"/><text x="40.9093%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (1 samples, 0.14%)</title><rect x="40.6593%" y="1125" width="0.1374%" height="15" fill="rgb(216,10,36)"/><text x="40.9093%" y="1135.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (1 samples, 0.14%)</title><rect x="40.6593%" y="1109" width="0.1374%" height="15" fill="rgb(222,72,44)"/><text x="40.9093%" y="1119.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="40.6593%" y="1093" width="0.1374%" height="15" fill="rgb(232,159,9)"/><text x="40.9093%" y="1103.50"></text></g><g><title>std::future::TLS_CX::__getit (1 samples, 0.14%)</title><rect x="41.0714%" y="1157" width="0.1374%" height="15" fill="rgb(210,39,32)"/><text x="41.3214%" y="1167.50"></text></g><g><title>core::task::wake::Context::waker (2 samples, 0.27%)</title><rect x="41.2088%" y="1029" width="0.2747%" height="15" fill="rgb(216,194,45)"/><text x="41.4588%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.14%)</title><rect x="41.4835%" y="1029" width="0.1374%" height="15" fill="rgb(218,18,35)"/><text x="41.7335%" y="1039.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="41.4835%" y="1013" width="0.1374%" height="15" fill="rgb(207,83,51)"/><text x="41.7335%" y="1023.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="40.9341%" y="1189" width="0.8242%" height="15" fill="rgb(225,63,43)"/><text x="41.1841%" y="1199.50"></text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="40.9341%" y="1173" width="0.8242%" height="15" fill="rgb(207,57,36)"/><text x="41.1841%" y="1183.50"></text></g><g><title>std::future::poll_with_tls_context (4 samples, 0.55%)</title><rect x="41.2088%" y="1157" width="0.5495%" height="15" fill="rgb(216,99,33)"/><text x="41.4588%" y="1167.50"></text></g><g><title>&lt;tokio::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (4 samples, 0.55%)</title><rect x="41.2088%" y="1141" width="0.5495%" height="15" fill="rgb(225,42,16)"/><text x="41.4588%" y="1151.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.55%)</title><rect x="41.2088%" y="1125" width="0.5495%" height="15" fill="rgb(220,201,45)"/><text x="41.4588%" y="1135.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.55%)</title><rect x="41.2088%" y="1109" width="0.5495%" height="15" fill="rgb(225,33,4)"/><text x="41.4588%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::poll_recv (4 samples, 0.55%)</title><rect x="41.2088%" y="1093" width="0.5495%" height="15" fill="rgb(224,33,50)"/><text x="41.4588%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (4 samples, 0.55%)</title><rect x="41.2088%" y="1077" width="0.5495%" height="15" fill="rgb(246,198,51)"/><text x="41.4588%" y="1087.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (4 samples, 0.55%)</title><rect x="41.2088%" y="1061" width="0.5495%" height="15" fill="rgb(205,22,4)"/><text x="41.4588%" y="1071.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (4 samples, 0.55%)</title><rect x="41.2088%" y="1045" width="0.5495%" height="15" fill="rgb(206,3,8)"/><text x="41.4588%" y="1055.50"></text></g><g><title>tokio::sync::semaphore_ll::Semaphore::add_permits_locked (1 samples, 0.14%)</title><rect x="41.6209%" y="1029" width="0.1374%" height="15" fill="rgb(251,23,15)"/><text x="41.8709%" y="1039.50"></text></g><g><title>tokio::sync::semaphore_ll::Semaphore::add_permits_locked2 (1 samples, 0.14%)</title><rect x="41.6209%" y="1013" width="0.1374%" height="15" fill="rgb(252,88,28)"/><text x="41.8709%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.14%)</title><rect x="41.6209%" y="997" width="0.1374%" height="15" fill="rgb(212,127,14)"/><text x="41.8709%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="41.6209%" y="981" width="0.1374%" height="15" fill="rgb(247,145,37)"/><text x="41.8709%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1141" width="0.1374%" height="15" fill="rgb(209,117,53)"/><text x="42.0082%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1125" width="0.1374%" height="15" fill="rgb(212,90,42)"/><text x="42.0082%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1109" width="0.1374%" height="15" fill="rgb(218,164,37)"/><text x="42.0082%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1093" width="0.1374%" height="15" fill="rgb(246,65,34)"/><text x="42.0082%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1077" width="0.1374%" height="15" fill="rgb(231,100,33)"/><text x="42.0082%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1061" width="0.1374%" height="15" fill="rgb(228,126,14)"/><text x="42.0082%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1045" width="0.1374%" height="15" fill="rgb(215,173,21)"/><text x="42.0082%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1029" width="0.1374%" height="15" fill="rgb(210,6,40)"/><text x="42.0082%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="1013" width="0.1374%" height="15" fill="rgb(212,48,18)"/><text x="42.0082%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="997" width="0.1374%" height="15" fill="rgb(230,214,11)"/><text x="42.0082%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="981" width="0.1374%" height="15" fill="rgb(254,105,39)"/><text x="42.0082%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="965" width="0.1374%" height="15" fill="rgb(245,158,5)"/><text x="42.0082%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="41.7582%" y="949" width="0.1374%" height="15" fill="rgb(249,208,11)"/><text x="42.0082%" y="959.50"></text></g><g><title>__libc_recv (16 samples, 2.20%)</title><rect x="42.1703%" y="885" width="2.1978%" height="15" fill="rgb(210,39,28)"/><text x="42.4203%" y="895.50">_..</text></g><g><title>__libc_recv (16 samples, 2.20%)</title><rect x="42.1703%" y="869" width="2.1978%" height="15" fill="rgb(211,56,53)"/><text x="42.4203%" y="879.50">_..</text></g><g><title>[unknown] (16 samples, 2.20%)</title><rect x="42.1703%" y="853" width="2.1978%" height="15" fill="rgb(226,201,30)"/><text x="42.4203%" y="863.50">[..</text></g><g><title>[unknown] (15 samples, 2.06%)</title><rect x="42.3077%" y="837" width="2.0604%" height="15" fill="rgb(239,101,34)"/><text x="42.5577%" y="847.50">[..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="42.4451%" y="821" width="1.9231%" height="15" fill="rgb(226,209,5)"/><text x="42.6951%" y="831.50">[..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="42.4451%" y="805" width="1.9231%" height="15" fill="rgb(250,105,47)"/><text x="42.6951%" y="815.50">[..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="42.4451%" y="789" width="1.9231%" height="15" fill="rgb(230,72,3)"/><text x="42.6951%" y="799.50">[..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="42.4451%" y="773" width="1.9231%" height="15" fill="rgb(232,218,39)"/><text x="42.6951%" y="783.50">[..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="42.4451%" y="757" width="1.9231%" height="15" fill="rgb(248,166,6)"/><text x="42.6951%" y="767.50">[..</text></g><g><title>[unknown] (14 samples, 1.92%)</title><rect x="42.4451%" y="741" width="1.9231%" height="15" fill="rgb(247,89,20)"/><text x="42.6951%" y="751.50">[..</text></g><g><title>[unknown] (11 samples, 1.51%)</title><rect x="42.8571%" y="725" width="1.5110%" height="15" fill="rgb(248,130,54)"/><text x="43.1071%" y="735.50"></text></g><g><title>[unknown] (8 samples, 1.10%)</title><rect x="43.2692%" y="709" width="1.0989%" height="15" fill="rgb(234,196,4)"/><text x="43.5192%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="43.5440%" y="693" width="0.8242%" height="15" fill="rgb(250,143,31)"/><text x="43.7940%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.69%)</title><rect x="43.6813%" y="677" width="0.6868%" height="15" fill="rgb(211,110,34)"/><text x="43.9313%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="661" width="0.2747%" height="15" fill="rgb(215,124,48)"/><text x="44.3434%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="645" width="0.2747%" height="15" fill="rgb(216,46,13)"/><text x="44.3434%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="629" width="0.2747%" height="15" fill="rgb(205,184,25)"/><text x="44.3434%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="613" width="0.2747%" height="15" fill="rgb(228,1,10)"/><text x="44.3434%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="597" width="0.2747%" height="15" fill="rgb(213,116,27)"/><text x="44.3434%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="581" width="0.2747%" height="15" fill="rgb(241,95,50)"/><text x="44.3434%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="565" width="0.2747%" height="15" fill="rgb(238,48,32)"/><text x="44.3434%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="549" width="0.2747%" height="15" fill="rgb(235,113,49)"/><text x="44.3434%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="533" width="0.2747%" height="15" fill="rgb(205,127,43)"/><text x="44.3434%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="517" width="0.2747%" height="15" fill="rgb(250,162,2)"/><text x="44.3434%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="501" width="0.2747%" height="15" fill="rgb(220,13,41)"/><text x="44.3434%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="485" width="0.2747%" height="15" fill="rgb(249,221,25)"/><text x="44.3434%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="469" width="0.2747%" height="15" fill="rgb(215,208,19)"/><text x="44.3434%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="453" width="0.2747%" height="15" fill="rgb(236,175,2)"/><text x="44.3434%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="437" width="0.2747%" height="15" fill="rgb(241,52,2)"/><text x="44.3434%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="421" width="0.2747%" height="15" fill="rgb(248,140,14)"/><text x="44.3434%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="405" width="0.2747%" height="15" fill="rgb(253,22,42)"/><text x="44.3434%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="389" width="0.2747%" height="15" fill="rgb(234,61,47)"/><text x="44.3434%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="373" width="0.2747%" height="15" fill="rgb(208,226,15)"/><text x="44.3434%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="357" width="0.2747%" height="15" fill="rgb(217,221,4)"/><text x="44.3434%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="341" width="0.2747%" height="15" fill="rgb(212,174,34)"/><text x="44.3434%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="325" width="0.2747%" height="15" fill="rgb(253,83,4)"/><text x="44.3434%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="309" width="0.2747%" height="15" fill="rgb(250,195,49)"/><text x="44.3434%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="293" width="0.2747%" height="15" fill="rgb(241,192,25)"/><text x="44.3434%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="277" width="0.2747%" height="15" fill="rgb(208,124,10)"/><text x="44.3434%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="261" width="0.2747%" height="15" fill="rgb(222,33,0)"/><text x="44.3434%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="44.0934%" y="245" width="0.2747%" height="15" fill="rgb(234,209,28)"/><text x="44.3434%" y="255.50"></text></g><g><title>&lt;&amp;mio::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 2.34%)</title><rect x="42.1703%" y="981" width="2.3352%" height="15" fill="rgb(224,11,23)"/><text x="42.4203%" y="991.50">&lt;..</text></g><g><title>&lt;&amp;mio::sys::unix::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 2.34%)</title><rect x="42.1703%" y="965" width="2.3352%" height="15" fill="rgb(232,99,1)"/><text x="42.4203%" y="975.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 2.34%)</title><rect x="42.1703%" y="949" width="2.3352%" height="15" fill="rgb(237,95,45)"/><text x="42.4203%" y="959.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (17 samples, 2.34%)</title><rect x="42.1703%" y="933" width="2.3352%" height="15" fill="rgb(208,109,11)"/><text x="42.4203%" y="943.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (17 samples, 2.34%)</title><rect x="42.1703%" y="917" width="2.3352%" height="15" fill="rgb(216,190,48)"/><text x="42.4203%" y="927.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (17 samples, 2.34%)</title><rect x="42.1703%" y="901" width="2.3352%" height="15" fill="rgb(251,171,36)"/><text x="42.4203%" y="911.50">s..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.14%)</title><rect x="44.3681%" y="885" width="0.1374%" height="15" fill="rgb(230,62,22)"/><text x="44.6181%" y="895.50"></text></g><g><title>std::io::error::Error::kind (1 samples, 0.14%)</title><rect x="44.5055%" y="981" width="0.1374%" height="15" fill="rgb(225,114,35)"/><text x="44.7555%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="44.6429%" y="917" width="0.1374%" height="15" fill="rgb(215,118,42)"/><text x="44.8929%" y="927.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::clear_read_ready (2 samples, 0.27%)</title><rect x="44.6429%" y="981" width="0.2747%" height="15" fill="rgb(243,119,21)"/><text x="44.8929%" y="991.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (2 samples, 0.27%)</title><rect x="44.6429%" y="965" width="0.2747%" height="15" fill="rgb(252,177,53)"/><text x="44.8929%" y="975.50"></text></g><g><title>tokio::io::registration::Registration::poll_read_ready (2 samples, 0.27%)</title><rect x="44.6429%" y="949" width="0.2747%" height="15" fill="rgb(237,209,29)"/><text x="44.8929%" y="959.50"></text></g><g><title>tokio::io::registration::Registration::poll_ready (2 samples, 0.27%)</title><rect x="44.6429%" y="933" width="0.2747%" height="15" fill="rgb(212,65,23)"/><text x="44.8929%" y="943.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.14%)</title><rect x="44.7802%" y="917" width="0.1374%" height="15" fill="rgb(230,222,46)"/><text x="45.0302%" y="927.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.14%)</title><rect x="44.7802%" y="901" width="0.1374%" height="15" fill="rgb(215,135,32)"/><text x="45.0302%" y="911.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (1 samples, 0.14%)</title><rect x="44.7802%" y="885" width="0.1374%" height="15" fill="rgb(246,101,22)"/><text x="45.0302%" y="895.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (1 samples, 0.14%)</title><rect x="44.7802%" y="869" width="0.1374%" height="15" fill="rgb(206,107,13)"/><text x="45.0302%" y="879.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="44.7802%" y="853" width="0.1374%" height="15" fill="rgb(250,100,44)"/><text x="45.0302%" y="863.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="45.0549%" y="933" width="0.1374%" height="15" fill="rgb(231,147,38)"/><text x="45.3049%" y="943.50"></text></g><g><title>tokio::task::waker::clone_waker (1 samples, 0.14%)</title><rect x="45.0549%" y="917" width="0.1374%" height="15" fill="rgb(229,8,40)"/><text x="45.3049%" y="927.50"></text></g><g><title>tokio::task::state::State::ref_inc (1 samples, 0.14%)</title><rect x="45.0549%" y="901" width="0.1374%" height="15" fill="rgb(221,135,30)"/><text x="45.3049%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.14%)</title><rect x="45.0549%" y="885" width="0.1374%" height="15" fill="rgb(249,193,18)"/><text x="45.3049%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.14%)</title><rect x="45.0549%" y="869" width="0.1374%" height="15" fill="rgb(209,133,39)"/><text x="45.3049%" y="879.50"></text></g><g><title>tokio::io::registration::Registration::poll_read_ready (2 samples, 0.27%)</title><rect x="45.0549%" y="965" width="0.2747%" height="15" fill="rgb(232,100,14)"/><text x="45.3049%" y="975.50"></text></g><g><title>tokio::io::registration::Registration::poll_ready (2 samples, 0.27%)</title><rect x="45.0549%" y="949" width="0.2747%" height="15" fill="rgb(224,185,1)"/><text x="45.3049%" y="959.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.14%)</title><rect x="45.1923%" y="933" width="0.1374%" height="15" fill="rgb(223,139,8)"/><text x="45.4423%" y="943.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.14%)</title><rect x="45.1923%" y="917" width="0.1374%" height="15" fill="rgb(232,213,38)"/><text x="45.4423%" y="927.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (1 samples, 0.14%)</title><rect x="45.1923%" y="901" width="0.1374%" height="15" fill="rgb(207,94,22)"/><text x="45.4423%" y="911.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (1 samples, 0.14%)</title><rect x="45.1923%" y="885" width="0.1374%" height="15" fill="rgb(219,183,54)"/><text x="45.4423%" y="895.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (1 samples, 0.14%)</title><rect x="45.1923%" y="869" width="0.1374%" height="15" fill="rgb(216,185,54)"/><text x="45.4423%" y="879.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="45.1923%" y="853" width="0.1374%" height="15" fill="rgb(254,217,39)"/><text x="45.4423%" y="863.50"></text></g><g><title>tokio::task::waker::clone_waker (1 samples, 0.14%)</title><rect x="45.1923%" y="837" width="0.1374%" height="15" fill="rgb(240,178,23)"/><text x="45.4423%" y="847.50"></text></g><g><title>tokio::task::state::State::ref_inc (1 samples, 0.14%)</title><rect x="45.1923%" y="821" width="0.1374%" height="15" fill="rgb(218,11,47)"/><text x="45.4423%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.14%)</title><rect x="45.1923%" y="805" width="0.1374%" height="15" fill="rgb(218,51,51)"/><text x="45.4423%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.14%)</title><rect x="45.1923%" y="789" width="0.1374%" height="15" fill="rgb(238,126,27)"/><text x="45.4423%" y="799.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 3.85%)</title><rect x="41.7582%" y="1173" width="3.8462%" height="15" fill="rgb(249,202,22)"/><text x="42.0082%" y="1183.50">&lt;std..</text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}}::_{{closure}} (28 samples, 3.85%)</title><rect x="41.7582%" y="1157" width="3.8462%" height="15" fill="rgb(254,195,49)"/><text x="42.0082%" y="1167.50">rumq..</text></g><g><title>std::future::poll_with_tls_context (27 samples, 3.71%)</title><rect x="41.8956%" y="1141" width="3.7088%" height="15" fill="rgb(208,123,14)"/><text x="42.1456%" y="1151.50">std:..</text></g><g><title>&lt;tokio::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (27 samples, 3.71%)</title><rect x="41.8956%" y="1125" width="3.7088%" height="15" fill="rgb(224,200,8)"/><text x="42.1456%" y="1135.50">&lt;tok..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (27 samples, 3.71%)</title><rect x="41.8956%" y="1109" width="3.7088%" height="15" fill="rgb(217,61,36)"/><text x="42.1456%" y="1119.50">&lt;&amp;mu..</text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_core::stream::Stream&gt;::poll_next (27 samples, 3.71%)</title><rect x="41.8956%" y="1093" width="3.7088%" height="15" fill="rgb(206,35,45)"/><text x="42.1456%" y="1103.50">&lt;tok..</text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (27 samples, 3.71%)</title><rect x="41.8956%" y="1077" width="3.7088%" height="15" fill="rgb(217,65,33)"/><text x="42.1456%" y="1087.50">&lt;tok..</text></g><g><title>tokio::io::async_read::AsyncRead::poll_read_buf (27 samples, 3.71%)</title><rect x="41.8956%" y="1061" width="3.7088%" height="15" fill="rgb(222,158,48)"/><text x="42.1456%" y="1071.50">toki..</text></g><g><title>&lt;tokio_util::codec::framed_write::FramedWrite2&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (27 samples, 3.71%)</title><rect x="41.8956%" y="1045" width="3.7088%" height="15" fill="rgb(254,2,54)"/><text x="42.1456%" y="1055.50">&lt;tok..</text></g><g><title>&lt;tokio_util::codec::framed::Fuse&lt;T,U&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (27 samples, 3.71%)</title><rect x="41.8956%" y="1029" width="3.7088%" height="15" fill="rgb(250,143,38)"/><text x="42.1456%" y="1039.50">&lt;tok..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (27 samples, 3.71%)</title><rect x="41.8956%" y="1013" width="3.7088%" height="15" fill="rgb(248,25,0)"/><text x="42.1456%" y="1023.50">&lt;tok..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (27 samples, 3.71%)</title><rect x="41.8956%" y="997" width="3.7088%" height="15" fill="rgb(206,152,27)"/><text x="42.1456%" y="1007.50">toki..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read_ready (5 samples, 0.69%)</title><rect x="44.9176%" y="981" width="0.6868%" height="15" fill="rgb(240,77,30)"/><text x="45.1676%" y="991.50"></text></g><g><title>tokio::io::registration::Registration::take_read_ready (2 samples, 0.27%)</title><rect x="45.3297%" y="965" width="0.2747%" height="15" fill="rgb(231,5,3)"/><text x="45.5797%" y="975.50"></text></g><g><title>tokio::io::registration::Registration::poll_ready (2 samples, 0.27%)</title><rect x="45.3297%" y="949" width="0.2747%" height="15" fill="rgb(207,226,32)"/><text x="45.5797%" y="959.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (1 samples, 0.14%)</title><rect x="45.4670%" y="933" width="0.1374%" height="15" fill="rgb(222,207,47)"/><text x="45.7170%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.14%)</title><rect x="45.4670%" y="917" width="0.1374%" height="15" fill="rgb(229,115,45)"/><text x="45.7170%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="45.4670%" y="901" width="0.1374%" height="15" fill="rgb(224,191,6)"/><text x="45.7170%" y="911.50"></text></g><g><title>&lt;tokio::time::delay::Delay as core::future::future::Future&gt;::poll (1 samples, 0.14%)</title><rect x="45.6044%" y="1173" width="0.1374%" height="15" fill="rgb(230,227,24)"/><text x="45.8544%" y="1183.50"></text></g><g><title>tokio::time::driver::registration::Registration::poll_elapsed (1 samples, 0.14%)</title><rect x="45.6044%" y="1157" width="0.1374%" height="15" fill="rgb(228,80,19)"/><text x="45.8544%" y="1167.50"></text></g><g><title>tokio::time::driver::entry::Entry::poll_elapsed (1 samples, 0.14%)</title><rect x="45.6044%" y="1141" width="0.1374%" height="15" fill="rgb(247,229,0)"/><text x="45.8544%" y="1151.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.14%)</title><rect x="45.6044%" y="1125" width="0.1374%" height="15" fill="rgb(237,194,15)"/><text x="45.8544%" y="1135.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.14%)</title><rect x="45.6044%" y="1109" width="0.1374%" height="15" fill="rgb(219,203,20)"/><text x="45.8544%" y="1119.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (1 samples, 0.14%)</title><rect x="45.6044%" y="1093" width="0.1374%" height="15" fill="rgb(234,128,8)"/><text x="45.8544%" y="1103.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (1 samples, 0.14%)</title><rect x="45.6044%" y="1077" width="0.1374%" height="15" fill="rgb(248,202,8)"/><text x="45.8544%" y="1087.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (1 samples, 0.14%)</title><rect x="45.6044%" y="1061" width="0.1374%" height="15" fill="rgb(206,104,37)"/><text x="45.8544%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="45.6044%" y="1045" width="0.1374%" height="15" fill="rgb(223,8,27)"/><text x="45.8544%" y="1055.50"></text></g><g><title>tokio::task::waker::clone_waker (1 samples, 0.14%)</title><rect x="45.6044%" y="1029" width="0.1374%" height="15" fill="rgb(216,217,28)"/><text x="45.8544%" y="1039.50"></text></g><g><title>tokio::task::state::State::ref_inc (1 samples, 0.14%)</title><rect x="45.6044%" y="1013" width="0.1374%" height="15" fill="rgb(249,199,1)"/><text x="45.8544%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.14%)</title><rect x="45.6044%" y="997" width="0.1374%" height="15" fill="rgb(240,85,17)"/><text x="45.8544%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.14%)</title><rect x="45.6044%" y="981" width="0.1374%" height="15" fill="rgb(206,108,45)"/><text x="45.8544%" y="991.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 4.12%)</title><rect x="41.7582%" y="1189" width="4.1209%" height="15" fill="rgb(245,210,41)"/><text x="42.0082%" y="1199.50">&lt;tok..</text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="45.7418%" y="1173" width="0.1374%" height="15" fill="rgb(206,13,37)"/><text x="45.9918%" y="1183.50"></text></g><g><title>std::future::poll_with_tls_context (163 samples, 22.39%)</title><rect x="23.6264%" y="1237" width="22.3901%" height="15" fill="rgb(250,61,18)"/><text x="23.8764%" y="1247.50">std::future::poll_with_tls_context</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (38 samples, 5.22%)</title><rect x="40.7967%" y="1221" width="5.2198%" height="15" fill="rgb(235,172,48)"/><text x="41.0467%" y="1231.50">&lt;tokio..</text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}}::_{{closure}} (38 samples, 5.22%)</title><rect x="40.7967%" y="1205" width="5.2198%" height="15" fill="rgb(249,201,17)"/><text x="41.0467%" y="1215.50">rumq_b..</text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="45.8791%" y="1189" width="0.1374%" height="15" fill="rgb(219,208,6)"/><text x="46.1291%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.27%)</title><rect x="46.1538%" y="1189" width="0.2747%" height="15" fill="rgb(248,31,23)"/><text x="46.4038%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.14%)</title><rect x="46.2912%" y="1173" width="0.1374%" height="15" fill="rgb(245,15,42)"/><text x="46.5412%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="46.2912%" y="1157" width="0.1374%" height="15" fill="rgb(222,217,39)"/><text x="46.5412%" y="1167.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="46.2912%" y="1141" width="0.1374%" height="15" fill="rgb(210,219,27)"/><text x="46.5412%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="46.2912%" y="1125" width="0.1374%" height="15" fill="rgb(252,166,36)"/><text x="46.5412%" y="1135.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.14%)</title><rect x="46.2912%" y="1109" width="0.1374%" height="15" fill="rgb(245,132,34)"/><text x="46.5412%" y="1119.50"></text></g><g><title>posix_memalign (1 samples, 0.14%)</title><rect x="46.2912%" y="1093" width="0.1374%" height="15" fill="rgb(236,54,3)"/><text x="46.5412%" y="1103.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="46.2912%" y="1077" width="0.1374%" height="15" fill="rgb(241,173,43)"/><text x="46.5412%" y="1087.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="46.2912%" y="1061" width="0.1374%" height="15" fill="rgb(215,190,9)"/><text x="46.5412%" y="1071.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="46.4286%" y="1189" width="0.1374%" height="15" fill="rgb(242,101,16)"/><text x="46.6786%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="46.4286%" y="1173" width="0.1374%" height="15" fill="rgb(223,190,21)"/><text x="46.6786%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.14%)</title><rect x="46.4286%" y="1157" width="0.1374%" height="15" fill="rgb(215,228,25)"/><text x="46.6786%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.14%)</title><rect x="46.4286%" y="1141" width="0.1374%" height="15" fill="rgb(225,36,22)"/><text x="46.6786%" y="1151.50"></text></g><g><title>tokio::time::driver::Inner::increment (1 samples, 0.14%)</title><rect x="46.5659%" y="1189" width="0.1374%" height="15" fill="rgb(251,106,46)"/><text x="46.8159%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.14%)</title><rect x="46.5659%" y="1173" width="0.1374%" height="15" fill="rgb(208,90,1)"/><text x="46.8159%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.14%)</title><rect x="46.5659%" y="1157" width="0.1374%" height="15" fill="rgb(243,10,4)"/><text x="46.8159%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="46.5659%" y="1141" width="0.1374%" height="15" fill="rgb(212,137,27)"/><text x="46.8159%" y="1151.50"></text></g><g><title>tokio::time::driver::Inner::normalize_deadline (1 samples, 0.14%)</title><rect x="46.7033%" y="1189" width="0.1374%" height="15" fill="rgb(231,220,49)"/><text x="46.9533%" y="1199.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="46.7033%" y="1173" width="0.1374%" height="15" fill="rgb(237,96,20)"/><text x="46.9533%" y="1183.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="46.7033%" y="1157" width="0.1374%" height="15" fill="rgb(239,229,30)"/><text x="46.9533%" y="1167.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.14%)</title><rect x="46.7033%" y="1141" width="0.1374%" height="15" fill="rgb(219,65,33)"/><text x="46.9533%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.14%)</title><rect x="46.7033%" y="1125" width="0.1374%" height="15" fill="rgb(243,134,7)"/><text x="46.9533%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.14%)</title><rect x="46.7033%" y="1109" width="0.1374%" height="15" fill="rgb(216,177,54)"/><text x="46.9533%" y="1119.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.14%)</title><rect x="46.9780%" y="1125" width="0.1374%" height="15" fill="rgb(211,160,20)"/><text x="47.2280%" y="1135.50"></text></g><g><title>mio::poll::SetReadiness::set_readiness (26 samples, 3.57%)</title><rect x="47.1154%" y="1125" width="3.5714%" height="15" fill="rgb(239,85,39)"/><text x="47.3654%" y="1135.50">mio:..</text></g><g><title>mio::poll::RegistrationInner::set_readiness (26 samples, 3.57%)</title><rect x="47.1154%" y="1109" width="3.5714%" height="15" fill="rgb(232,125,22)"/><text x="47.3654%" y="1119.50">mio:..</text></g><g><title>mio::poll::ReadinessNode::enqueue_with_wakeup (26 samples, 3.57%)</title><rect x="47.1154%" y="1093" width="3.5714%" height="15" fill="rgb(244,57,34)"/><text x="47.3654%" y="1103.50">mio:..</text></g><g><title>mio::poll::enqueue_with_wakeup (26 samples, 3.57%)</title><rect x="47.1154%" y="1077" width="3.5714%" height="15" fill="rgb(214,203,32)"/><text x="47.3654%" y="1087.50">mio:..</text></g><g><title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (26 samples, 3.57%)</title><rect x="47.1154%" y="1061" width="3.5714%" height="15" fill="rgb(207,58,43)"/><text x="47.3654%" y="1071.50">mio:..</text></g><g><title>mio::poll::ReadinessQueueInner::wakeup (26 samples, 3.57%)</title><rect x="47.1154%" y="1045" width="3.5714%" height="15" fill="rgb(215,193,15)"/><text x="47.3654%" y="1055.50">mio:..</text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::wakeup (26 samples, 3.57%)</title><rect x="47.1154%" y="1029" width="3.5714%" height="15" fill="rgb(232,15,44)"/><text x="47.3654%" y="1039.50">mio:..</text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (26 samples, 3.57%)</title><rect x="47.1154%" y="1013" width="3.5714%" height="15" fill="rgb(212,3,48)"/><text x="47.3654%" y="1023.50">&lt;&amp;mi..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (26 samples, 3.57%)</title><rect x="47.1154%" y="997" width="3.5714%" height="15" fill="rgb(218,128,7)"/><text x="47.3654%" y="1007.50">&lt;&amp;st..</text></g><g><title>std::sys::unix::fs::File::write (26 samples, 3.57%)</title><rect x="47.1154%" y="981" width="3.5714%" height="15" fill="rgb(226,216,39)"/><text x="47.3654%" y="991.50">std:..</text></g><g><title>std::sys::unix::fd::FileDesc::write (26 samples, 3.57%)</title><rect x="47.1154%" y="965" width="3.5714%" height="15" fill="rgb(243,47,51)"/><text x="47.3654%" y="975.50">std:..</text></g><g><title>__libc_write (26 samples, 3.57%)</title><rect x="47.1154%" y="949" width="3.5714%" height="15" fill="rgb(241,183,40)"/><text x="47.3654%" y="959.50">__li..</text></g><g><title>__libc_write (26 samples, 3.57%)</title><rect x="47.1154%" y="933" width="3.5714%" height="15" fill="rgb(231,217,32)"/><text x="47.3654%" y="943.50">__li..</text></g><g><title>[unknown] (26 samples, 3.57%)</title><rect x="47.1154%" y="917" width="3.5714%" height="15" fill="rgb(229,61,38)"/><text x="47.3654%" y="927.50">[unk..</text></g><g><title>[unknown] (26 samples, 3.57%)</title><rect x="47.1154%" y="901" width="3.5714%" height="15" fill="rgb(225,210,5)"/><text x="47.3654%" y="911.50">[unk..</text></g><g><title>[unknown] (25 samples, 3.43%)</title><rect x="47.2527%" y="885" width="3.4341%" height="15" fill="rgb(231,79,45)"/><text x="47.5027%" y="895.50">[un..</text></g><g><title>[unknown] (25 samples, 3.43%)</title><rect x="47.2527%" y="869" width="3.4341%" height="15" fill="rgb(224,100,7)"/><text x="47.5027%" y="879.50">[un..</text></g><g><title>[unknown] (25 samples, 3.43%)</title><rect x="47.2527%" y="853" width="3.4341%" height="15" fill="rgb(241,198,18)"/><text x="47.5027%" y="863.50">[un..</text></g><g><title>[unknown] (24 samples, 3.30%)</title><rect x="47.3901%" y="837" width="3.2967%" height="15" fill="rgb(252,97,53)"/><text x="47.6401%" y="847.50">[un..</text></g><g><title>[unknown] (24 samples, 3.30%)</title><rect x="47.3901%" y="821" width="3.2967%" height="15" fill="rgb(220,88,7)"/><text x="47.6401%" y="831.50">[un..</text></g><g><title>[unknown] (23 samples, 3.16%)</title><rect x="47.5275%" y="805" width="3.1593%" height="15" fill="rgb(213,176,14)"/><text x="47.7775%" y="815.50">[un..</text></g><g><title>[unknown] (22 samples, 3.02%)</title><rect x="47.6648%" y="789" width="3.0220%" height="15" fill="rgb(246,73,7)"/><text x="47.9148%" y="799.50">[un..</text></g><g><title>[unknown] (18 samples, 2.47%)</title><rect x="48.2143%" y="773" width="2.4725%" height="15" fill="rgb(245,64,36)"/><text x="48.4643%" y="783.50">[u..</text></g><g><title>[unknown] (15 samples, 2.06%)</title><rect x="48.6264%" y="757" width="2.0604%" height="15" fill="rgb(245,80,10)"/><text x="48.8764%" y="767.50">[..</text></g><g><title>[unknown] (15 samples, 2.06%)</title><rect x="48.6264%" y="741" width="2.0604%" height="15" fill="rgb(232,107,50)"/><text x="48.8764%" y="751.50">[..</text></g><g><title>[unknown] (15 samples, 2.06%)</title><rect x="48.6264%" y="725" width="2.0604%" height="15" fill="rgb(253,3,0)"/><text x="48.8764%" y="735.50">[..</text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="49.0385%" y="709" width="1.6484%" height="15" fill="rgb(212,99,53)"/><text x="49.2885%" y="719.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="49.0385%" y="693" width="1.6484%" height="15" fill="rgb(249,111,54)"/><text x="49.2885%" y="703.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="49.0385%" y="677" width="1.6484%" height="15" fill="rgb(249,55,30)"/><text x="49.2885%" y="687.50"></text></g><g><title>[unknown] (12 samples, 1.65%)</title><rect x="49.0385%" y="661" width="1.6484%" height="15" fill="rgb(237,47,42)"/><text x="49.2885%" y="671.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="49.4505%" y="645" width="1.2363%" height="15" fill="rgb(211,20,18)"/><text x="49.7005%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.96%)</title><rect x="49.7253%" y="629" width="0.9615%" height="15" fill="rgb(231,203,46)"/><text x="49.9753%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="49.8626%" y="613" width="0.8242%" height="15" fill="rgb(237,142,3)"/><text x="50.1126%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="50.2747%" y="597" width="0.4121%" height="15" fill="rgb(241,107,1)"/><text x="50.5247%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="50.5495%" y="581" width="0.1374%" height="15" fill="rgb(229,83,13)"/><text x="50.7995%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="50.5495%" y="565" width="0.1374%" height="15" fill="rgb(241,91,40)"/><text x="50.7995%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (29 samples, 3.98%)</title><rect x="46.8407%" y="1173" width="3.9835%" height="15" fill="rgb(225,3,45)"/><text x="47.0907%" y="1183.50">&lt;all..</text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (28 samples, 3.85%)</title><rect x="46.9780%" y="1157" width="3.8462%" height="15" fill="rgb(244,223,14)"/><text x="47.2280%" y="1167.50">&lt;tok..</text></g><g><title>tokio::io::driver::Handle::wakeup (28 samples, 3.85%)</title><rect x="46.9780%" y="1141" width="3.8462%" height="15" fill="rgb(224,124,37)"/><text x="47.2280%" y="1151.50">toki..</text></g><g><title>tokio::io::driver::Handle::inner (1 samples, 0.14%)</title><rect x="50.6868%" y="1125" width="0.1374%" height="15" fill="rgb(251,171,30)"/><text x="50.9368%" y="1135.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (1 samples, 0.14%)</title><rect x="50.6868%" y="1109" width="0.1374%" height="15" fill="rgb(236,46,54)"/><text x="50.9368%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.14%)</title><rect x="50.6868%" y="1093" width="0.1374%" height="15" fill="rgb(245,213,5)"/><text x="50.9368%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.14%)</title><rect x="50.6868%" y="1077" width="0.1374%" height="15" fill="rgb(230,144,27)"/><text x="50.9368%" y="1087.50"></text></g><g><title>tokio::task::core::Core&lt;T&gt;::poll (203 samples, 27.88%)</title><rect x="23.0769%" y="1381" width="27.8846%" height="15" fill="rgb(220,86,6)"/><text x="23.3269%" y="1391.50">tokio::task::core::Core&lt;T&gt;::poll</text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 27.88%)</title><rect x="23.0769%" y="1365" width="27.8846%" height="15" fill="rgb(240,20,13)"/><text x="23.3269%" y="1375.50">&lt;std::future::GenFuture&lt;T&gt; as core::future::f..</text></g><g><title>rumq_broker::accept_loop::_{{closure}}::_{{closure}} (203 samples, 27.88%)</title><rect x="23.0769%" y="1349" width="27.8846%" height="15" fill="rgb(217,89,34)"/><text x="23.3269%" y="1359.50">rumq_broker::accept_loop::_{{closure}}::_{{cl..</text></g><g><title>std::future::poll_with_tls_context (203 samples, 27.88%)</title><rect x="23.0769%" y="1333" width="27.8846%" height="15" fill="rgb(229,13,5)"/><text x="23.3269%" y="1343.50">std::future::poll_with_tls_context</text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 27.88%)</title><rect x="23.0769%" y="1317" width="27.8846%" height="15" fill="rgb(244,67,35)"/><text x="23.3269%" y="1327.50">&lt;std::future::GenFuture&lt;T&gt; as core::future::f..</text></g><g><title>rumq_broker::connection::eventloop::_{{closure}} (203 samples, 27.88%)</title><rect x="23.0769%" y="1301" width="27.8846%" height="15" fill="rgb(221,40,2)"/><text x="23.3269%" y="1311.50">rumq_broker::connection::eventloop::_{{closur..</text></g><g><title>std::future::poll_with_tls_context (203 samples, 27.88%)</title><rect x="23.0769%" y="1285" width="27.8846%" height="15" fill="rgb(237,157,21)"/><text x="23.3269%" y="1295.50">std::future::poll_with_tls_context</text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 27.88%)</title><rect x="23.0769%" y="1269" width="27.8846%" height="15" fill="rgb(222,94,11)"/><text x="23.3269%" y="1279.50">&lt;std::future::GenFuture&lt;T&gt; as core::future::f..</text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}} (203 samples, 27.88%)</title><rect x="23.0769%" y="1253" width="27.8846%" height="15" fill="rgb(249,113,6)"/><text x="23.3269%" y="1263.50">rumq_broker::connection::Connection&lt;S&gt;::run::..</text></g><g><title>tokio::time::timeout::timeout (36 samples, 4.95%)</title><rect x="46.0165%" y="1237" width="4.9451%" height="15" fill="rgb(238,137,36)"/><text x="46.2665%" y="1247.50">tokio:..</text></g><g><title>tokio::time::driver::registration::Registration::new (36 samples, 4.95%)</title><rect x="46.0165%" y="1221" width="4.9451%" height="15" fill="rgb(210,102,26)"/><text x="46.2665%" y="1231.50">tokio:..</text></g><g><title>tokio::time::driver::entry::Entry::new (36 samples, 4.95%)</title><rect x="46.0165%" y="1205" width="4.9451%" height="15" fill="rgb(218,30,30)"/><text x="46.2665%" y="1215.50">tokio:..</text></g><g><title>tokio::time::driver::Inner::queue (30 samples, 4.12%)</title><rect x="46.8407%" y="1189" width="4.1209%" height="15" fill="rgb(214,67,26)"/><text x="47.0907%" y="1199.50">toki..</text></g><g><title>tokio::time::driver::atomic_stack::AtomicStack::push (1 samples, 0.14%)</title><rect x="50.8242%" y="1173" width="0.1374%" height="15" fill="rgb(251,9,53)"/><text x="51.0742%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicBool::fetch_or (1 samples, 0.14%)</title><rect x="50.8242%" y="1157" width="0.1374%" height="15" fill="rgb(228,204,25)"/><text x="51.0742%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.14%)</title><rect x="50.8242%" y="1141" width="0.1374%" height="15" fill="rgb(207,153,8)"/><text x="51.0742%" y="1151.50"></text></g><g><title>__udivmodti4 (1 samples, 0.14%)</title><rect x="50.9615%" y="1141" width="0.1374%" height="15" fill="rgb(242,9,16)"/><text x="51.2115%" y="1151.50"></text></g><g><title>&lt;u64 as compiler_builtins::int::Int&gt;::aborting_div (1 samples, 0.14%)</title><rect x="50.9615%" y="1125" width="0.1374%" height="15" fill="rgb(217,211,10)"/><text x="51.2115%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_div (1 samples, 0.14%)</title><rect x="50.9615%" y="1109" width="0.1374%" height="15" fill="rgb(219,228,52)"/><text x="51.2115%" y="1119.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.14%)</title><rect x="51.0989%" y="1077" width="0.1374%" height="15" fill="rgb(231,92,29)"/><text x="51.3489%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="51.0989%" y="1061" width="0.1374%" height="15" fill="rgb(232,8,23)"/><text x="51.3489%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="51.0989%" y="1045" width="0.1374%" height="15" fill="rgb(216,211,34)"/><text x="51.3489%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.14%)</title><rect x="51.0989%" y="1029" width="0.1374%" height="15" fill="rgb(236,151,0)"/><text x="51.3489%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="51.0989%" y="1013" width="0.1374%" height="15" fill="rgb(209,168,3)"/><text x="51.3489%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="51.0989%" y="997" width="0.1374%" height="15" fill="rgb(208,129,28)"/><text x="51.3489%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="51.0989%" y="981" width="0.1374%" height="15" fill="rgb(229,78,22)"/><text x="51.3489%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.14%)</title><rect x="51.0989%" y="965" width="0.1374%" height="15" fill="rgb(228,187,13)"/><text x="51.3489%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="51.0989%" y="949" width="0.1374%" height="15" fill="rgb(240,119,24)"/><text x="51.3489%" y="959.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="51.0989%" y="933" width="0.1374%" height="15" fill="rgb(209,194,42)"/><text x="51.3489%" y="943.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="51.2363%" y="1077" width="0.2747%" height="15" fill="rgb(247,200,46)"/><text x="51.4863%" y="1087.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="51.2363%" y="1061" width="0.2747%" height="15" fill="rgb(218,76,16)"/><text x="51.4863%" y="1071.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="51.2363%" y="1045" width="0.2747%" height="15" fill="rgb(225,21,48)"/><text x="51.4863%" y="1055.50"></text></g><g><title>core::ptr::real_drop_in_place (2 samples, 0.27%)</title><rect x="51.2363%" y="1029" width="0.2747%" height="15" fill="rgb(239,223,50)"/><text x="51.4863%" y="1039.50"></text></g><g><title>tokio::time::driver::entry::Entry::cancel (2 samples, 0.27%)</title><rect x="51.2363%" y="1013" width="0.2747%" height="15" fill="rgb(244,45,21)"/><text x="51.4863%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_or (2 samples, 0.27%)</title><rect x="51.2363%" y="997" width="0.2747%" height="15" fill="rgb(232,33,43)"/><text x="51.4863%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.27%)</title><rect x="51.2363%" y="981" width="0.2747%" height="15" fill="rgb(209,8,3)"/><text x="51.4863%" y="991.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.14%)</title><rect x="51.5110%" y="1061" width="0.1374%" height="15" fill="rgb(214,25,53)"/><text x="51.7610%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.14%)</title><rect x="51.5110%" y="1045" width="0.1374%" height="15" fill="rgb(254,186,54)"/><text x="51.7610%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.14%)</title><rect x="51.5110%" y="1029" width="0.1374%" height="15" fill="rgb(208,174,49)"/><text x="51.7610%" y="1039.50"></text></g><g><title>__clock_gettime (1 samples, 0.14%)</title><rect x="51.5110%" y="1013" width="0.1374%" height="15" fill="rgb(233,191,51)"/><text x="51.7610%" y="1023.50"></text></g><g><title>[unknown] (241 samples, 33.10%)</title><rect x="18.6813%" y="1397" width="33.1044%" height="15" fill="rgb(222,134,10)"/><text x="18.9313%" y="1407.50">[unknown]</text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.82%)</title><rect x="50.9615%" y="1381" width="0.8242%" height="15" fill="rgb(230,226,20)"/><text x="51.2115%" y="1391.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (6 samples, 0.82%)</title><rect x="50.9615%" y="1365" width="0.8242%" height="15" fill="rgb(251,111,25)"/><text x="51.2115%" y="1375.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}} (6 samples, 0.82%)</title><rect x="50.9615%" y="1349" width="0.8242%" height="15" fill="rgb(224,40,46)"/><text x="51.2115%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.82%)</title><rect x="50.9615%" y="1333" width="0.8242%" height="15" fill="rgb(236,108,47)"/><text x="51.2115%" y="1343.50"></text></g><g><title>std::panicking::try (6 samples, 0.82%)</title><rect x="50.9615%" y="1317" width="0.8242%" height="15" fill="rgb(234,93,0)"/><text x="51.2115%" y="1327.50"></text></g><g><title>__rust_maybe_catch_panic (6 samples, 0.82%)</title><rect x="50.9615%" y="1301" width="0.8242%" height="15" fill="rgb(224,213,32)"/><text x="51.2115%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.82%)</title><rect x="50.9615%" y="1285" width="0.8242%" height="15" fill="rgb(251,11,48)"/><text x="51.2115%" y="1295.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (6 samples, 0.82%)</title><rect x="50.9615%" y="1269" width="0.8242%" height="15" fill="rgb(236,173,5)"/><text x="51.2115%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.82%)</title><rect x="50.9615%" y="1253" width="0.8242%" height="15" fill="rgb(230,95,12)"/><text x="51.2115%" y="1263.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="50.9615%" y="1237" width="0.8242%" height="15" fill="rgb(232,209,1)"/><text x="51.2115%" y="1247.50"></text></g><g><title>tokio::task::core::Core&lt;T&gt;::poll (6 samples, 0.82%)</title><rect x="50.9615%" y="1221" width="0.8242%" height="15" fill="rgb(232,6,1)"/><text x="51.2115%" y="1231.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="50.9615%" y="1205" width="0.8242%" height="15" fill="rgb(210,224,50)"/><text x="51.2115%" y="1215.50"></text></g><g><title>rumq_broker::accept_loop::_{{closure}}::_{{closure}} (6 samples, 0.82%)</title><rect x="50.9615%" y="1189" width="0.8242%" height="15" fill="rgb(228,127,35)"/><text x="51.2115%" y="1199.50"></text></g><g><title>std::future::poll_with_tls_context (6 samples, 0.82%)</title><rect x="50.9615%" y="1173" width="0.8242%" height="15" fill="rgb(245,102,45)"/><text x="51.2115%" y="1183.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.82%)</title><rect x="50.9615%" y="1157" width="0.8242%" height="15" fill="rgb(214,1,49)"/><text x="51.2115%" y="1167.50"></text></g><g><title>rumq_broker::connection::eventloop::_{{closure}} (5 samples, 0.69%)</title><rect x="51.0989%" y="1141" width="0.6868%" height="15" fill="rgb(226,163,40)"/><text x="51.3489%" y="1151.50"></text></g><g><title>std::future::poll_with_tls_context (5 samples, 0.69%)</title><rect x="51.0989%" y="1125" width="0.6868%" height="15" fill="rgb(239,212,28)"/><text x="51.3489%" y="1135.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.69%)</title><rect x="51.0989%" y="1109" width="0.6868%" height="15" fill="rgb(220,20,13)"/><text x="51.3489%" y="1119.50"></text></g><g><title>rumq_broker::connection::Connection&lt;S&gt;::run::_{{closure}} (5 samples, 0.69%)</title><rect x="51.0989%" y="1093" width="0.6868%" height="15" fill="rgb(210,164,35)"/><text x="51.3489%" y="1103.50"></text></g><g><title>tokio::time::timeout::timeout (2 samples, 0.27%)</title><rect x="51.5110%" y="1077" width="0.2747%" height="15" fill="rgb(248,109,41)"/><text x="51.7610%" y="1087.50"></text></g><g><title>tokio::time::driver::registration::Registration::new (1 samples, 0.14%)</title><rect x="51.6484%" y="1061" width="0.1374%" height="15" fill="rgb(238,23,50)"/><text x="51.8984%" y="1071.50"></text></g><g><title>tokio::time::driver::handle::Handle::current (1 samples, 0.14%)</title><rect x="51.6484%" y="1045" width="0.1374%" height="15" fill="rgb(211,48,49)"/><text x="51.8984%" y="1055.50"></text></g><g><title>tokio::runtime::context::time_handle (1 samples, 0.14%)</title><rect x="51.6484%" y="1029" width="0.1374%" height="15" fill="rgb(223,36,21)"/><text x="51.8984%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.14%)</title><rect x="51.6484%" y="1013" width="0.1374%" height="15" fill="rgb(207,123,46)"/><text x="51.8984%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="51.6484%" y="997" width="0.1374%" height="15" fill="rgb(240,218,32)"/><text x="51.8984%" y="1007.50"></text></g><g><title>tokio::runtime::context::time_handle::_{{closure}} (1 samples, 0.14%)</title><rect x="51.6484%" y="981" width="0.1374%" height="15" fill="rgb(252,5,43)"/><text x="51.8984%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="51.6484%" y="965" width="0.1374%" height="15" fill="rgb(252,84,19)"/><text x="51.8984%" y="975.50"></text></g><g><title>&lt;tokio::time::driver::handle::Handle as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="51.6484%" y="949" width="0.1374%" height="15" fill="rgb(243,152,39)"/><text x="51.8984%" y="959.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="51.6484%" y="933" width="0.1374%" height="15" fill="rgb(234,160,15)"/><text x="51.8984%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.14%)</title><rect x="51.6484%" y="917" width="0.1374%" height="15" fill="rgb(237,34,20)"/><text x="51.8984%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.14%)</title><rect x="51.6484%" y="901" width="0.1374%" height="15" fill="rgb(229,97,13)"/><text x="51.8984%" y="911.50"></text></g><g><title>__sched_yield (54 samples, 7.42%)</title><rect x="51.9231%" y="613" width="7.4176%" height="15" fill="rgb(234,71,50)"/><text x="52.1731%" y="623.50">__sched_yi..</text></g><g><title>[unknown] (51 samples, 7.01%)</title><rect x="52.3352%" y="597" width="7.0055%" height="15" fill="rgb(253,155,4)"/><text x="52.5852%" y="607.50">[unknown]</text></g><g><title>[unknown] (42 samples, 5.77%)</title><rect x="53.5714%" y="581" width="5.7692%" height="15" fill="rgb(222,185,37)"/><text x="53.8214%" y="591.50">[unknow..</text></g><g><title>[unknown] (40 samples, 5.49%)</title><rect x="53.8462%" y="565" width="5.4945%" height="15" fill="rgb(251,177,13)"/><text x="54.0962%" y="575.50">[unknow..</text></g><g><title>[unknown] (39 samples, 5.36%)</title><rect x="53.9835%" y="549" width="5.3571%" height="15" fill="rgb(250,179,40)"/><text x="54.2335%" y="559.50">[unknow..</text></g><g><title>[unknown] (34 samples, 4.67%)</title><rect x="54.6703%" y="533" width="4.6703%" height="15" fill="rgb(242,44,2)"/><text x="54.9203%" y="543.50">[unkn..</text></g><g><title>[unknown] (32 samples, 4.40%)</title><rect x="54.9451%" y="517" width="4.3956%" height="15" fill="rgb(216,177,13)"/><text x="55.1951%" y="527.50">[unkn..</text></g><g><title>[unknown] (22 samples, 3.02%)</title><rect x="56.3187%" y="501" width="3.0220%" height="15" fill="rgb(216,106,43)"/><text x="56.5687%" y="511.50">[un..</text></g><g><title>[unknown] (15 samples, 2.06%)</title><rect x="57.2802%" y="485" width="2.0604%" height="15" fill="rgb(216,183,2)"/><text x="57.5302%" y="495.50">[..</text></g><g><title>[unknown] (7 samples, 0.96%)</title><rect x="58.3791%" y="469" width="0.9615%" height="15" fill="rgb(249,75,3)"/><text x="58.6291%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="58.9286%" y="453" width="0.4121%" height="15" fill="rgb(219,67,39)"/><text x="59.1786%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="59.2033%" y="437" width="0.1374%" height="15" fill="rgb(253,228,2)"/><text x="59.4533%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.14%)</title><rect x="59.3407%" y="613" width="0.1374%" height="15" fill="rgb(235,138,27)"/><text x="59.5907%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="59.3407%" y="597" width="0.1374%" height="15" fill="rgb(236,97,51)"/><text x="59.5907%" y="607.50"></text></g><g><title>std::thread::yield_now (1 samples, 0.14%)</title><rect x="59.4780%" y="613" width="0.1374%" height="15" fill="rgb(240,80,30)"/><text x="59.7280%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (1 samples, 0.14%)</title><rect x="59.4780%" y="597" width="0.1374%" height="15" fill="rgb(230,178,19)"/><text x="59.7280%" y="607.50"></text></g><g><title>core::ptr::real_drop_in_place (4 samples, 0.55%)</title><rect x="59.6154%" y="597" width="0.5495%" height="15" fill="rgb(210,190,27)"/><text x="59.8654%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.55%)</title><rect x="59.6154%" y="581" width="0.5495%" height="15" fill="rgb(222,107,31)"/><text x="59.8654%" y="591.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (4 samples, 0.55%)</title><rect x="59.6154%" y="565" width="0.5495%" height="15" fill="rgb(216,127,34)"/><text x="59.8654%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (4 samples, 0.55%)</title><rect x="59.6154%" y="549" width="0.5495%" height="15" fill="rgb(234,116,52)"/><text x="59.8654%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock (4 samples, 0.55%)</title><rect x="59.6154%" y="533" width="0.5495%" height="15" fill="rgb(222,124,15)"/><text x="59.8654%" y="543.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 0.55%)</title><rect x="59.6154%" y="517" width="0.5495%" height="15" fill="rgb(231,179,28)"/><text x="59.8654%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="59.7527%" y="501" width="0.4121%" height="15" fill="rgb(226,93,45)"/><text x="60.0027%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.41%)</title><rect x="59.7527%" y="485" width="0.4121%" height="15" fill="rgb(215,8,51)"/><text x="60.0027%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="59.8901%" y="469" width="0.2747%" height="15" fill="rgb(223,106,5)"/><text x="60.1401%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="59.8901%" y="453" width="0.2747%" height="15" fill="rgb(250,191,5)"/><text x="60.1401%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="60.0275%" y="437" width="0.1374%" height="15" fill="rgb(242,132,44)"/><text x="60.2775%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="60.0275%" y="421" width="0.1374%" height="15" fill="rgb(251,152,29)"/><text x="60.2775%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.14%)</title><rect x="60.1648%" y="597" width="0.1374%" height="15" fill="rgb(218,179,5)"/><text x="60.4148%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.14%)</title><rect x="60.1648%" y="581" width="0.1374%" height="15" fill="rgb(227,67,19)"/><text x="60.4148%" y="591.50"></text></g><g><title>__condvar_confirm_wakeup (1 samples, 0.14%)</title><rect x="60.3022%" y="517" width="0.1374%" height="15" fill="rgb(233,119,31)"/><text x="60.5522%" y="527.50"></text></g><g><title>__condvar_fetch_add_wseq_acquire (2 samples, 0.27%)</title><rect x="60.4396%" y="517" width="0.2747%" height="15" fill="rgb(241,120,22)"/><text x="60.6896%" y="527.50"></text></g><g><title>__pthread_mutex_cond_lock (1 samples, 0.14%)</title><rect x="60.7143%" y="517" width="0.1374%" height="15" fill="rgb(224,102,30)"/><text x="60.9643%" y="527.50"></text></g><g><title>[unknown] (96 samples, 13.19%)</title><rect x="60.8516%" y="501" width="13.1868%" height="15" fill="rgb(210,164,37)"/><text x="61.1016%" y="511.50">[unknown]</text></g><g><title>[unknown] (96 samples, 13.19%)</title><rect x="60.8516%" y="485" width="13.1868%" height="15" fill="rgb(226,191,16)"/><text x="61.1016%" y="495.50">[unknown]</text></g><g><title>[unknown] (94 samples, 12.91%)</title><rect x="61.1264%" y="469" width="12.9121%" height="15" fill="rgb(214,40,45)"/><text x="61.3764%" y="479.50">[unknown]</text></g><g><title>[unknown] (94 samples, 12.91%)</title><rect x="61.1264%" y="453" width="12.9121%" height="15" fill="rgb(244,29,26)"/><text x="61.3764%" y="463.50">[unknown]</text></g><g><title>[unknown] (93 samples, 12.77%)</title><rect x="61.2637%" y="437" width="12.7747%" height="15" fill="rgb(216,16,5)"/><text x="61.5137%" y="447.50">[unknown]</text></g><g><title>[unknown] (92 samples, 12.64%)</title><rect x="61.4011%" y="421" width="12.6374%" height="15" fill="rgb(249,76,35)"/><text x="61.6511%" y="431.50">[unknown]</text></g><g><title>[unknown] (92 samples, 12.64%)</title><rect x="61.4011%" y="405" width="12.6374%" height="15" fill="rgb(207,11,44)"/><text x="61.6511%" y="415.50">[unknown]</text></g><g><title>[unknown] (92 samples, 12.64%)</title><rect x="61.4011%" y="389" width="12.6374%" height="15" fill="rgb(228,190,49)"/><text x="61.6511%" y="399.50">[unknown]</text></g><g><title>[unknown] (92 samples, 12.64%)</title><rect x="61.4011%" y="373" width="12.6374%" height="15" fill="rgb(214,173,12)"/><text x="61.6511%" y="383.50">[unknown]</text></g><g><title>[unknown] (91 samples, 12.50%)</title><rect x="61.5385%" y="357" width="12.5000%" height="15" fill="rgb(218,26,35)"/><text x="61.7885%" y="367.50">[unknown]</text></g><g><title>[unknown] (87 samples, 11.95%)</title><rect x="62.0879%" y="341" width="11.9505%" height="15" fill="rgb(220,200,19)"/><text x="62.3379%" y="351.50">[unknown]</text></g><g><title>[unknown] (87 samples, 11.95%)</title><rect x="62.0879%" y="325" width="11.9505%" height="15" fill="rgb(239,95,49)"/><text x="62.3379%" y="335.50">[unknown]</text></g><g><title>[unknown] (87 samples, 11.95%)</title><rect x="62.0879%" y="309" width="11.9505%" height="15" fill="rgb(235,85,53)"/><text x="62.3379%" y="319.50">[unknown]</text></g><g><title>[unknown] (84 samples, 11.54%)</title><rect x="62.5000%" y="293" width="11.5385%" height="15" fill="rgb(233,133,31)"/><text x="62.7500%" y="303.50">[unknown]</text></g><g><title>std::sys_common::condvar::Condvar::wait (101 samples, 13.87%)</title><rect x="60.3022%" y="581" width="13.8736%" height="15" fill="rgb(218,25,20)"/><text x="60.5522%" y="591.50">std::sys_common::cond..</text></g><g><title>std::sys::unix::condvar::Condvar::wait (101 samples, 13.87%)</title><rect x="60.3022%" y="565" width="13.8736%" height="15" fill="rgb(252,210,38)"/><text x="60.5522%" y="575.50">std::sys::unix::condv..</text></g><g><title>__pthread_cond_wait (101 samples, 13.87%)</title><rect x="60.3022%" y="549" width="13.8736%" height="15" fill="rgb(242,134,21)"/><text x="60.5522%" y="559.50">__pthread_cond_wait</text></g><g><title>__pthread_cond_wait_common (101 samples, 13.87%)</title><rect x="60.3022%" y="533" width="13.8736%" height="15" fill="rgb(213,28,48)"/><text x="60.5522%" y="543.50">__pthread_cond_wait_c..</text></g><g><title>futex_wait_cancelable (97 samples, 13.32%)</title><rect x="60.8516%" y="517" width="13.3242%" height="15" fill="rgb(250,196,2)"/><text x="61.1016%" y="527.50">futex_wait_cancelable</text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="74.0385%" y="501" width="0.1374%" height="15" fill="rgb(227,5,17)"/><text x="74.2885%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (102 samples, 14.01%)</title><rect x="60.3022%" y="597" width="14.0110%" height="15" fill="rgb(221,226,24)"/><text x="60.5522%" y="607.50">std::sync::condvar::C..</text></g><g><title>std::sys_common::poison::Flag::get (1 samples, 0.14%)</title><rect x="74.1758%" y="581" width="0.1374%" height="15" fill="rgb(211,5,48)"/><text x="74.4258%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.14%)</title><rect x="74.1758%" y="565" width="0.1374%" height="15" fill="rgb(219,150,6)"/><text x="74.4258%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="74.1758%" y="549" width="0.1374%" height="15" fill="rgb(251,46,16)"/><text x="74.4258%" y="559.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (108 samples, 14.84%)</title><rect x="59.6154%" y="613" width="14.8352%" height="15" fill="rgb(220,204,40)"/><text x="59.8654%" y="623.50">tokio::runtime::park::I..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="74.3132%" y="597" width="0.1374%" height="15" fill="rgb(211,85,2)"/><text x="74.5632%" y="607.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (1 samples, 0.14%)</title><rect x="74.3132%" y="581" width="0.1374%" height="15" fill="rgb(229,17,7)"/><text x="74.5632%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.14%)</title><rect x="74.3132%" y="565" width="0.1374%" height="15" fill="rgb(239,72,28)"/><text x="74.5632%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.14%)</title><rect x="74.3132%" y="549" width="0.1374%" height="15" fill="rgb(230,47,54)"/><text x="74.5632%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.14%)</title><rect x="75.1374%" y="485" width="0.1374%" height="15" fill="rgb(214,50,8)"/><text x="75.3874%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.14%)</title><rect x="75.1374%" y="469" width="0.1374%" height="15" fill="rgb(216,198,43)"/><text x="75.3874%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="75.1374%" y="453" width="0.1374%" height="15" fill="rgb(234,20,35)"/><text x="75.3874%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (2 samples, 0.27%)</title><rect x="75.2747%" y="485" width="0.2747%" height="15" fill="rgb(254,45,19)"/><text x="75.5247%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_and (2 samples, 0.27%)</title><rect x="75.2747%" y="469" width="0.2747%" height="15" fill="rgb(219,14,44)"/><text x="75.5247%" y="479.50"></text></g><g><title>mio::poll::ReadinessQueue::poll (3 samples, 0.41%)</title><rect x="75.5495%" y="469" width="0.4121%" height="15" fill="rgb(217,220,26)"/><text x="75.7995%" y="479.50"></text></g><g><title>mio::poll::ReadinessQueueInner::dequeue_node (3 samples, 0.41%)</title><rect x="75.5495%" y="453" width="0.4121%" height="15" fill="rgb(213,158,28)"/><text x="75.7995%" y="463.50"></text></g><g><title>mio::poll::ReadinessQueueInner::enqueue_node (1 samples, 0.14%)</title><rect x="75.8242%" y="437" width="0.1374%" height="15" fill="rgb(252,51,52)"/><text x="76.0742%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_and_swap (1 samples, 0.14%)</title><rect x="75.8242%" y="421" width="0.1374%" height="15" fill="rgb(246,89,16)"/><text x="76.0742%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (1 samples, 0.14%)</title><rect x="75.8242%" y="405" width="0.1374%" height="15" fill="rgb(216,158,49)"/><text x="76.0742%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="75.8242%" y="389" width="0.1374%" height="15" fill="rgb(236,107,19)"/><text x="76.0742%" y="399.50"></text></g><g><title>mio::poll::ReadinessQueue::prepare_for_sleep (1 samples, 0.14%)</title><rect x="75.9615%" y="469" width="0.1374%" height="15" fill="rgb(228,185,30)"/><text x="76.2115%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_and_swap (1 samples, 0.14%)</title><rect x="75.9615%" y="453" width="0.1374%" height="15" fill="rgb(246,134,8)"/><text x="76.2115%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (1 samples, 0.14%)</title><rect x="75.9615%" y="437" width="0.1374%" height="15" fill="rgb(214,143,50)"/><text x="76.2115%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="75.9615%" y="421" width="0.1374%" height="15" fill="rgb(228,75,8)"/><text x="76.2115%" y="431.50"></text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::cleanup (10 samples, 1.37%)</title><rect x="76.0989%" y="469" width="1.3736%" height="15" fill="rgb(207,175,4)"/><text x="76.3489%" y="479.50"></text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (10 samples, 1.37%)</title><rect x="76.0989%" y="453" width="1.3736%" height="15" fill="rgb(205,108,24)"/><text x="76.3489%" y="463.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (10 samples, 1.37%)</title><rect x="76.0989%" y="437" width="1.3736%" height="15" fill="rgb(244,120,49)"/><text x="76.3489%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::read (10 samples, 1.37%)</title><rect x="76.0989%" y="421" width="1.3736%" height="15" fill="rgb(223,47,38)"/><text x="76.3489%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (10 samples, 1.37%)</title><rect x="76.0989%" y="405" width="1.3736%" height="15" fill="rgb(229,179,11)"/><text x="76.3489%" y="415.50"></text></g><g><title>__libc_read (10 samples, 1.37%)</title><rect x="76.0989%" y="389" width="1.3736%" height="15" fill="rgb(231,122,1)"/><text x="76.3489%" y="399.50"></text></g><g><title>__libc_read (10 samples, 1.37%)</title><rect x="76.0989%" y="373" width="1.3736%" height="15" fill="rgb(245,119,9)"/><text x="76.3489%" y="383.50"></text></g><g><title>[unknown] (10 samples, 1.37%)</title><rect x="76.0989%" y="357" width="1.3736%" height="15" fill="rgb(241,163,25)"/><text x="76.3489%" y="367.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="76.2363%" y="341" width="1.2363%" height="15" fill="rgb(217,214,3)"/><text x="76.4863%" y="351.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="76.2363%" y="325" width="1.2363%" height="15" fill="rgb(240,86,28)"/><text x="76.4863%" y="335.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="76.2363%" y="309" width="1.2363%" height="15" fill="rgb(215,47,9)"/><text x="76.4863%" y="319.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="76.2363%" y="293" width="1.2363%" height="15" fill="rgb(252,25,45)"/><text x="76.4863%" y="303.50"></text></g><g><title>[unknown] (8 samples, 1.10%)</title><rect x="76.3736%" y="277" width="1.0989%" height="15" fill="rgb(251,164,9)"/><text x="76.6236%" y="287.50"></text></g><g><title>[unknown] (8 samples, 1.10%)</title><rect x="76.3736%" y="261" width="1.0989%" height="15" fill="rgb(233,194,0)"/><text x="76.6236%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="76.6484%" y="245" width="0.8242%" height="15" fill="rgb(249,111,24)"/><text x="76.8984%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="76.9231%" y="229" width="0.5495%" height="15" fill="rgb(250,223,3)"/><text x="77.1731%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="77.1978%" y="213" width="0.2747%" height="15" fill="rgb(236,178,37)"/><text x="77.4478%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="77.1978%" y="197" width="0.2747%" height="15" fill="rgb(241,158,50)"/><text x="77.4478%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="77.3352%" y="181" width="0.1374%" height="15" fill="rgb(213,121,41)"/><text x="77.5852%" y="191.50"></text></g><g><title>[libc-2.30.so] (1 samples, 0.14%)</title><rect x="78.1593%" y="437" width="0.1374%" height="15" fill="rgb(240,92,3)"/><text x="78.4093%" y="447.50"></text></g><g><title>mio::sys::unix::epoll::Selector::select (41 samples, 5.63%)</title><rect x="77.4725%" y="469" width="5.6319%" height="15" fill="rgb(205,123,3)"/><text x="77.7225%" y="479.50">mio::sy..</text></g><g><title>epoll_wait (39 samples, 5.36%)</title><rect x="77.7473%" y="453" width="5.3571%" height="15" fill="rgb(205,97,47)"/><text x="77.9973%" y="463.50">epoll_w..</text></g><g><title>[unknown] (35 samples, 4.81%)</title><rect x="78.2967%" y="437" width="4.8077%" height="15" fill="rgb(247,152,14)"/><text x="78.5467%" y="447.50">[unkno..</text></g><g><title>[unknown] (35 samples, 4.81%)</title><rect x="78.2967%" y="421" width="4.8077%" height="15" fill="rgb(248,195,53)"/><text x="78.5467%" y="431.50">[unkno..</text></g><g><title>[unknown] (34 samples, 4.67%)</title><rect x="78.4341%" y="405" width="4.6703%" height="15" fill="rgb(226,201,16)"/><text x="78.6841%" y="415.50">[unkn..</text></g><g><title>[unknown] (34 samples, 4.67%)</title><rect x="78.4341%" y="389" width="4.6703%" height="15" fill="rgb(205,98,0)"/><text x="78.6841%" y="399.50">[unkn..</text></g><g><title>[unknown] (34 samples, 4.67%)</title><rect x="78.4341%" y="373" width="4.6703%" height="15" fill="rgb(214,191,48)"/><text x="78.6841%" y="383.50">[unkn..</text></g><g><title>[unknown] (31 samples, 4.26%)</title><rect x="78.8462%" y="357" width="4.2582%" height="15" fill="rgb(237,112,39)"/><text x="79.0962%" y="367.50">[unkn..</text></g><g><title>[unknown] (30 samples, 4.12%)</title><rect x="78.9835%" y="341" width="4.1209%" height="15" fill="rgb(247,203,27)"/><text x="79.2335%" y="351.50">[unk..</text></g><g><title>[unknown] (30 samples, 4.12%)</title><rect x="78.9835%" y="325" width="4.1209%" height="15" fill="rgb(235,124,28)"/><text x="79.2335%" y="335.50">[unk..</text></g><g><title>[unknown] (29 samples, 3.98%)</title><rect x="79.1209%" y="309" width="3.9835%" height="15" fill="rgb(208,207,46)"/><text x="79.3709%" y="319.50">[unk..</text></g><g><title>[unknown] (28 samples, 3.85%)</title><rect x="79.2582%" y="293" width="3.8462%" height="15" fill="rgb(234,176,4)"/><text x="79.5082%" y="303.50">[unk..</text></g><g><title>[unknown] (26 samples, 3.57%)</title><rect x="79.5330%" y="277" width="3.5714%" height="15" fill="rgb(230,133,28)"/><text x="79.7830%" y="287.50">[unk..</text></g><g><title>[unknown] (23 samples, 3.16%)</title><rect x="79.9451%" y="261" width="3.1593%" height="15" fill="rgb(211,137,40)"/><text x="80.1951%" y="271.50">[un..</text></g><g><title>[unknown] (20 samples, 2.75%)</title><rect x="80.3571%" y="245" width="2.7473%" height="15" fill="rgb(254,35,13)"/><text x="80.6071%" y="255.50">[u..</text></g><g><title>[unknown] (18 samples, 2.47%)</title><rect x="80.6319%" y="229" width="2.4725%" height="15" fill="rgb(225,49,51)"/><text x="80.8819%" y="239.50">[u..</text></g><g><title>[unknown] (18 samples, 2.47%)</title><rect x="80.6319%" y="213" width="2.4725%" height="15" fill="rgb(251,10,15)"/><text x="80.8819%" y="223.50">[u..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (61 samples, 8.38%)</title><rect x="74.8626%" y="565" width="8.3791%" height="15" fill="rgb(228,207,15)"/><text x="75.1126%" y="575.50">&lt;tokio::park..</text></g><g><title>&lt;tokio::io::driver::Driver as tokio::park::Park&gt;::park (61 samples, 8.38%)</title><rect x="74.8626%" y="549" width="8.3791%" height="15" fill="rgb(241,99,19)"/><text x="75.1126%" y="559.50">&lt;tokio::io::..</text></g><g><title>tokio::io::driver::Driver::turn (61 samples, 8.38%)</title><rect x="74.8626%" y="533" width="8.3791%" height="15" fill="rgb(207,104,49)"/><text x="75.1126%" y="543.50">tokio::io::d..</text></g><g><title>mio::poll::Poll::poll (59 samples, 8.10%)</title><rect x="75.1374%" y="517" width="8.1044%" height="15" fill="rgb(234,99,18)"/><text x="75.3874%" y="527.50">mio::poll::..</text></g><g><title>mio::poll::Poll::poll1 (59 samples, 8.10%)</title><rect x="75.1374%" y="501" width="8.1044%" height="15" fill="rgb(213,191,49)"/><text x="75.3874%" y="511.50">mio::poll::..</text></g><g><title>mio::poll::Poll::poll2 (56 samples, 7.69%)</title><rect x="75.5495%" y="485" width="7.6923%" height="15" fill="rgb(210,226,19)"/><text x="75.7995%" y="495.50">mio::poll::..</text></g><g><title>std::time::Instant::now (1 samples, 0.14%)</title><rect x="83.1044%" y="469" width="0.1374%" height="15" fill="rgb(229,97,18)"/><text x="83.3544%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.14%)</title><rect x="83.1044%" y="453" width="0.1374%" height="15" fill="rgb(211,167,15)"/><text x="83.3544%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.14%)</title><rect x="83.1044%" y="437" width="0.1374%" height="15" fill="rgb(210,169,34)"/><text x="83.3544%" y="447.50"></text></g><g><title>__clock_gettime (1 samples, 0.14%)</title><rect x="83.1044%" y="421" width="0.1374%" height="15" fill="rgb(241,121,31)"/><text x="83.3544%" y="431.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.14%)</title><rect x="83.1044%" y="405" width="0.1374%" height="15" fill="rgb(232,40,11)"/><text x="83.3544%" y="415.50"></text></g><g><title>[[vdso]] (1 samples, 0.14%)</title><rect x="83.1044%" y="389" width="0.1374%" height="15" fill="rgb(205,86,26)"/><text x="83.3544%" y="399.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="83.2418%" y="565" width="0.1374%" height="15" fill="rgb(231,126,28)"/><text x="83.4918%" y="575.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="83.2418%" y="549" width="0.1374%" height="15" fill="rgb(219,221,18)"/><text x="83.4918%" y="559.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.14%)</title><rect x="83.2418%" y="533" width="0.1374%" height="15" fill="rgb(211,40,0)"/><text x="83.4918%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.14%)</title><rect x="83.2418%" y="517" width="0.1374%" height="15" fill="rgb(239,85,43)"/><text x="83.4918%" y="527.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.14%)</title><rect x="83.2418%" y="501" width="0.1374%" height="15" fill="rgb(231,55,21)"/><text x="83.4918%" y="511.50"></text></g><g><title>mio::poll::ReadinessQueue::poll (1 samples, 0.14%)</title><rect x="83.3791%" y="501" width="0.1374%" height="15" fill="rgb(225,184,43)"/><text x="83.6291%" y="511.50"></text></g><g><title>mio::poll::ReadinessQueueInner::dequeue_node (1 samples, 0.14%)</title><rect x="83.3791%" y="485" width="0.1374%" height="15" fill="rgb(251,158,41)"/><text x="83.6291%" y="495.50"></text></g><g><title>mio::poll::ReadinessQueueInner::clear_sleep_marker (1 samples, 0.14%)</title><rect x="83.3791%" y="469" width="0.1374%" height="15" fill="rgb(234,159,37)"/><text x="83.6291%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_and_swap (1 samples, 0.14%)</title><rect x="83.3791%" y="453" width="0.1374%" height="15" fill="rgb(216,204,22)"/><text x="83.6291%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (1 samples, 0.14%)</title><rect x="83.3791%" y="437" width="0.1374%" height="15" fill="rgb(214,17,3)"/><text x="83.6291%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="83.3791%" y="421" width="0.1374%" height="15" fill="rgb(212,111,17)"/><text x="83.6291%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="389" width="0.2747%" height="15" fill="rgb(221,157,24)"/><text x="84.0412%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="373" width="0.2747%" height="15" fill="rgb(252,16,13)"/><text x="84.0412%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="357" width="0.2747%" height="15" fill="rgb(221,62,2)"/><text x="84.0412%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="341" width="0.2747%" height="15" fill="rgb(247,87,22)"/><text x="84.0412%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="325" width="0.2747%" height="15" fill="rgb(215,73,9)"/><text x="84.0412%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="309" width="0.2747%" height="15" fill="rgb(207,175,33)"/><text x="84.0412%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="293" width="0.2747%" height="15" fill="rgb(243,129,54)"/><text x="84.0412%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="277" width="0.2747%" height="15" fill="rgb(227,119,45)"/><text x="84.0412%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="83.7912%" y="261" width="0.2747%" height="15" fill="rgb(205,109,36)"/><text x="84.0412%" y="271.50"></text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::cleanup (5 samples, 0.69%)</title><rect x="83.5165%" y="501" width="0.6868%" height="15" fill="rgb(205,6,39)"/><text x="83.7665%" y="511.50"></text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Read&gt;::read (5 samples, 0.69%)</title><rect x="83.5165%" y="485" width="0.6868%" height="15" fill="rgb(221,32,16)"/><text x="83.7665%" y="495.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (5 samples, 0.69%)</title><rect x="83.5165%" y="469" width="0.6868%" height="15" fill="rgb(228,144,50)"/><text x="83.7665%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::read (5 samples, 0.69%)</title><rect x="83.5165%" y="453" width="0.6868%" height="15" fill="rgb(229,201,53)"/><text x="83.7665%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (5 samples, 0.69%)</title><rect x="83.5165%" y="437" width="0.6868%" height="15" fill="rgb(249,153,27)"/><text x="83.7665%" y="447.50"></text></g><g><title>__libc_read (4 samples, 0.55%)</title><rect x="83.6538%" y="421" width="0.5495%" height="15" fill="rgb(227,106,25)"/><text x="83.9038%" y="431.50"></text></g><g><title>__libc_read (4 samples, 0.55%)</title><rect x="83.6538%" y="405" width="0.5495%" height="15" fill="rgb(230,65,29)"/><text x="83.9038%" y="415.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="84.0659%" y="389" width="0.1374%" height="15" fill="rgb(221,57,46)"/><text x="84.3159%" y="399.50"></text></g><g><title>[libc-2.30.so] (2 samples, 0.27%)</title><rect x="84.4780%" y="469" width="0.2747%" height="15" fill="rgb(229,161,17)"/><text x="84.7280%" y="479.50"></text></g><g><title>mio::poll::Poll::poll (48 samples, 6.59%)</title><rect x="83.3791%" y="549" width="6.5934%" height="15" fill="rgb(222,213,11)"/><text x="83.6291%" y="559.50">mio::poll..</text></g><g><title>mio::poll::Poll::poll1 (48 samples, 6.59%)</title><rect x="83.3791%" y="533" width="6.5934%" height="15" fill="rgb(235,35,13)"/><text x="83.6291%" y="543.50">mio::poll..</text></g><g><title>mio::poll::Poll::poll2 (48 samples, 6.59%)</title><rect x="83.3791%" y="517" width="6.5934%" height="15" fill="rgb(233,158,34)"/><text x="83.6291%" y="527.50">mio::poll..</text></g><g><title>mio::sys::unix::epoll::Selector::select (42 samples, 5.77%)</title><rect x="84.2033%" y="501" width="5.7692%" height="15" fill="rgb(215,151,48)"/><text x="84.4533%" y="511.50">mio::sy..</text></g><g><title>epoll_wait (41 samples, 5.63%)</title><rect x="84.3407%" y="485" width="5.6319%" height="15" fill="rgb(229,84,14)"/><text x="84.5907%" y="495.50">epoll_w..</text></g><g><title>[unknown] (38 samples, 5.22%)</title><rect x="84.7527%" y="469" width="5.2198%" height="15" fill="rgb(229,68,14)"/><text x="85.0027%" y="479.50">[unkno..</text></g><g><title>[unknown] (38 samples, 5.22%)</title><rect x="84.7527%" y="453" width="5.2198%" height="15" fill="rgb(243,106,26)"/><text x="85.0027%" y="463.50">[unkno..</text></g><g><title>[unknown] (38 samples, 5.22%)</title><rect x="84.7527%" y="437" width="5.2198%" height="15" fill="rgb(206,45,38)"/><text x="85.0027%" y="447.50">[unkno..</text></g><g><title>[unknown] (38 samples, 5.22%)</title><rect x="84.7527%" y="421" width="5.2198%" height="15" fill="rgb(226,6,15)"/><text x="85.0027%" y="431.50">[unkno..</text></g><g><title>[unknown] (38 samples, 5.22%)</title><rect x="84.7527%" y="405" width="5.2198%" height="15" fill="rgb(232,22,54)"/><text x="85.0027%" y="415.50">[unkno..</text></g><g><title>[unknown] (37 samples, 5.08%)</title><rect x="84.8901%" y="389" width="5.0824%" height="15" fill="rgb(229,222,32)"/><text x="85.1401%" y="399.50">[unkno..</text></g><g><title>[unknown] (37 samples, 5.08%)</title><rect x="84.8901%" y="373" width="5.0824%" height="15" fill="rgb(228,62,29)"/><text x="85.1401%" y="383.50">[unkno..</text></g><g><title>[unknown] (32 samples, 4.40%)</title><rect x="85.5769%" y="357" width="4.3956%" height="15" fill="rgb(251,103,34)"/><text x="85.8269%" y="367.50">[unkn..</text></g><g><title>[unknown] (30 samples, 4.12%)</title><rect x="85.8516%" y="341" width="4.1209%" height="15" fill="rgb(233,12,30)"/><text x="86.1016%" y="351.50">[unk..</text></g><g><title>[unknown] (30 samples, 4.12%)</title><rect x="85.8516%" y="325" width="4.1209%" height="15" fill="rgb(238,52,0)"/><text x="86.1016%" y="335.50">[unk..</text></g><g><title>[unknown] (30 samples, 4.12%)</title><rect x="85.8516%" y="309" width="4.1209%" height="15" fill="rgb(223,98,5)"/><text x="86.1016%" y="319.50">[unk..</text></g><g><title>[unknown] (30 samples, 4.12%)</title><rect x="85.8516%" y="293" width="4.1209%" height="15" fill="rgb(228,75,37)"/><text x="86.1016%" y="303.50">[unk..</text></g><g><title>[unknown] (29 samples, 3.98%)</title><rect x="85.9890%" y="277" width="3.9835%" height="15" fill="rgb(205,115,49)"/><text x="86.2390%" y="287.50">[unk..</text></g><g><title>[unknown] (27 samples, 3.71%)</title><rect x="86.2637%" y="261" width="3.7088%" height="15" fill="rgb(250,154,43)"/><text x="86.5137%" y="271.50">[unk..</text></g><g><title>[unknown] (23 samples, 3.16%)</title><rect x="86.8132%" y="245" width="3.1593%" height="15" fill="rgb(226,43,29)"/><text x="87.0632%" y="255.50">[un..</text></g><g><title>tokio::io::driver::Driver::turn (49 samples, 6.73%)</title><rect x="83.3791%" y="565" width="6.7308%" height="15" fill="rgb(249,228,39)"/><text x="83.6291%" y="575.50">tokio::io..</text></g><g><title>tokio::io::driver::Driver::dispatch (1 samples, 0.14%)</title><rect x="89.9725%" y="549" width="0.1374%" height="15" fill="rgb(216,79,43)"/><text x="90.2225%" y="559.50"></text></g><g><title>tokio::util::slab::Slab&lt;T&gt;::get (1 samples, 0.14%)</title><rect x="89.9725%" y="533" width="0.1374%" height="15" fill="rgb(228,95,12)"/><text x="90.2225%" y="543.50"></text></g><g><title>tokio::util::slab::shard::Shard&lt;T&gt;::get (1 samples, 0.14%)</title><rect x="89.9725%" y="517" width="0.1374%" height="15" fill="rgb(249,221,15)"/><text x="90.2225%" y="527.50"></text></g><g><title>tokio::util::slab::page::Shared&lt;T&gt;::get (1 samples, 0.14%)</title><rect x="89.9725%" y="501" width="0.1374%" height="15" fill="rgb(233,34,13)"/><text x="90.2225%" y="511.50"></text></g><g><title>tokio::time::clock::Clock::now (1 samples, 0.14%)</title><rect x="90.1099%" y="565" width="0.1374%" height="15" fill="rgb(214,103,39)"/><text x="90.3599%" y="575.50"></text></g><g><title>tokio::time::clock::now (1 samples, 0.14%)</title><rect x="90.1099%" y="549" width="0.1374%" height="15" fill="rgb(251,126,39)"/><text x="90.3599%" y="559.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="90.2473%" y="549" width="0.1374%" height="15" fill="rgb(214,216,36)"/><text x="90.4973%" y="559.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="90.2473%" y="533" width="0.1374%" height="15" fill="rgb(220,221,8)"/><text x="90.4973%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU64::store (4 samples, 0.55%)</title><rect x="90.3846%" y="549" width="0.5495%" height="15" fill="rgb(240,216,3)"/><text x="90.6346%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_store (4 samples, 0.55%)</title><rect x="90.3846%" y="533" width="0.5495%" height="15" fill="rgb(232,218,17)"/><text x="90.6346%" y="543.50"></text></g><g><title>tokio::time::clock::Clock::now (3 samples, 0.41%)</title><rect x="90.9341%" y="549" width="0.4121%" height="15" fill="rgb(229,163,45)"/><text x="91.1841%" y="559.50"></text></g><g><title>tokio::time::clock::now (3 samples, 0.41%)</title><rect x="90.9341%" y="533" width="0.4121%" height="15" fill="rgb(231,110,42)"/><text x="91.1841%" y="543.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.41%)</title><rect x="90.9341%" y="517" width="0.4121%" height="15" fill="rgb(208,170,48)"/><text x="91.1841%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.41%)</title><rect x="90.9341%" y="501" width="0.4121%" height="15" fill="rgb(239,116,25)"/><text x="91.1841%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.41%)</title><rect x="90.9341%" y="485" width="0.4121%" height="15" fill="rgb(219,200,50)"/><text x="91.1841%" y="495.50"></text></g><g><title>__clock_gettime (3 samples, 0.41%)</title><rect x="90.9341%" y="469" width="0.4121%" height="15" fill="rgb(245,200,0)"/><text x="91.1841%" y="479.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.41%)</title><rect x="90.9341%" y="453" width="0.4121%" height="15" fill="rgb(245,119,33)"/><text x="91.1841%" y="463.50"></text></g><g><title>[[vdso]] (2 samples, 0.27%)</title><rect x="91.0714%" y="437" width="0.2747%" height="15" fill="rgb(231,125,12)"/><text x="91.3214%" y="447.50"></text></g><g><title>tokio::time::driver::Driver&lt;T&gt;::process (12 samples, 1.65%)</title><rect x="90.2473%" y="565" width="1.6484%" height="15" fill="rgb(216,96,41)"/><text x="90.4973%" y="575.50"></text></g><g><title>tokio::time::wheel::Wheel&lt;T&gt;::poll (4 samples, 0.55%)</title><rect x="91.3462%" y="549" width="0.5495%" height="15" fill="rgb(248,43,45)"/><text x="91.5962%" y="559.50"></text></g><g><title>tokio::time::wheel::Wheel&lt;T&gt;::next_expiration (4 samples, 0.55%)</title><rect x="91.3462%" y="533" width="0.5495%" height="15" fill="rgb(217,222,7)"/><text x="91.5962%" y="543.50"></text></g><g><title>tokio::time::wheel::level::Level&lt;T&gt;::next_expiration (1 samples, 0.14%)</title><rect x="91.7582%" y="517" width="0.1374%" height="15" fill="rgb(233,28,6)"/><text x="92.0082%" y="527.50"></text></g><g><title>&lt;tokio::time::driver::atomic_stack::AtomicStackEntries as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.41%)</title><rect x="91.8956%" y="549" width="0.4121%" height="15" fill="rgb(231,218,15)"/><text x="92.1456%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::fetch_and (2 samples, 0.27%)</title><rect x="92.0330%" y="533" width="0.2747%" height="15" fill="rgb(226,171,48)"/><text x="92.2830%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_and (2 samples, 0.27%)</title><rect x="92.0330%" y="517" width="0.2747%" height="15" fill="rgb(235,201,9)"/><text x="92.2830%" y="527.50"></text></g><g><title>[libc-2.30.so] (4 samples, 0.55%)</title><rect x="92.4451%" y="517" width="0.5495%" height="15" fill="rgb(217,80,15)"/><text x="92.6951%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="92.7198%" y="501" width="0.2747%" height="15" fill="rgb(219,152,8)"/><text x="92.9698%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="92.7198%" y="485" width="0.2747%" height="15" fill="rgb(243,107,38)"/><text x="92.9698%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="92.7198%" y="469" width="0.2747%" height="15" fill="rgb(231,17,5)"/><text x="92.9698%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="92.7198%" y="453" width="0.2747%" height="15" fill="rgb(209,25,54)"/><text x="92.9698%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8571%" y="437" width="0.1374%" height="15" fill="rgb(219,0,2)"/><text x="93.1071%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8571%" y="421" width="0.1374%" height="15" fill="rgb(246,9,5)"/><text x="93.1071%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8571%" y="405" width="0.1374%" height="15" fill="rgb(226,159,4)"/><text x="93.1071%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8571%" y="389" width="0.1374%" height="15" fill="rgb(219,175,34)"/><text x="93.1071%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8571%" y="373" width="0.1374%" height="15" fill="rgb(236,10,46)"/><text x="93.1071%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8571%" y="357" width="0.1374%" height="15" fill="rgb(240,211,16)"/><text x="93.1071%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="92.8571%" y="341" width="0.1374%" height="15" fill="rgb(205,3,43)"/><text x="93.1071%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.14%)</title><rect x="92.9945%" y="517" width="0.1374%" height="15" fill="rgb(245,7,22)"/><text x="93.2445%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="92.9945%" y="501" width="0.1374%" height="15" fill="rgb(239,132,32)"/><text x="93.2445%" y="511.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="92.9945%" y="485" width="0.1374%" height="15" fill="rgb(228,202,34)"/><text x="93.2445%" y="495.50"></text></g><g><title>&lt;tokio::time::driver::entry::Entry as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="92.9945%" y="469" width="0.1374%" height="15" fill="rgb(254,200,22)"/><text x="93.2445%" y="479.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="92.9945%" y="453" width="0.1374%" height="15" fill="rgb(219,10,39)"/><text x="93.2445%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="92.9945%" y="437" width="0.1374%" height="15" fill="rgb(226,210,39)"/><text x="93.2445%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.14%)</title><rect x="92.9945%" y="421" width="0.1374%" height="15" fill="rgb(208,219,16)"/><text x="93.2445%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.14%)</title><rect x="92.9945%" y="405" width="0.1374%" height="15" fill="rgb(216,158,51)"/><text x="93.2445%" y="415.50"></text></g><g><title>core::ptr::real_drop_in_place (7 samples, 0.96%)</title><rect x="92.3077%" y="549" width="0.9615%" height="15" fill="rgb(233,14,44)"/><text x="92.5577%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.96%)</title><rect x="92.3077%" y="533" width="0.9615%" height="15" fill="rgb(237,97,39)"/><text x="92.5577%" y="543.50"></text></g><g><title>cfree (1 samples, 0.14%)</title><rect x="93.1319%" y="517" width="0.1374%" height="15" fill="rgb(218,198,43)"/><text x="93.3819%" y="527.50"></text></g><g><title>tokio::time::driver::Driver&lt;T&gt;::clear_entry (1 samples, 0.14%)</title><rect x="93.2692%" y="549" width="0.1374%" height="15" fill="rgb(231,104,20)"/><text x="93.5192%" y="559.50"></text></g><g><title>tokio::time::wheel::Wheel&lt;T&gt;::remove (1 samples, 0.14%)</title><rect x="93.2692%" y="533" width="0.1374%" height="15" fill="rgb(254,36,13)"/><text x="93.5192%" y="543.50"></text></g><g><title>tokio::time::wheel::level::Level&lt;T&gt;::remove_entry (1 samples, 0.14%)</title><rect x="93.2692%" y="517" width="0.1374%" height="15" fill="rgb(248,14,50)"/><text x="93.5192%" y="527.50"></text></g><g><title>&lt;tokio::time::driver::stack::Stack as tokio::time::wheel::stack::Stack&gt;::remove (1 samples, 0.14%)</title><rect x="93.2692%" y="501" width="0.1374%" height="15" fill="rgb(217,107,29)"/><text x="93.5192%" y="511.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="93.2692%" y="485" width="0.1374%" height="15" fill="rgb(251,169,33)"/><text x="93.5192%" y="495.50"></text></g><g><title>core::ptr::real_drop_in_place (1 samples, 0.14%)</title><rect x="93.2692%" y="469" width="0.1374%" height="15" fill="rgb(217,108,32)"/><text x="93.5192%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="93.2692%" y="453" width="0.1374%" height="15" fill="rgb(219,66,42)"/><text x="93.5192%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.14%)</title><rect x="93.2692%" y="437" width="0.1374%" height="15" fill="rgb(206,180,7)"/><text x="93.5192%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.14%)</title><rect x="93.2692%" y="421" width="0.1374%" height="15" fill="rgb(208,226,31)"/><text x="93.5192%" y="431.50"></text></g><g><title>tokio::time::driver::Driver&lt;T&gt;::process_queue (13 samples, 1.79%)</title><rect x="91.8956%" y="565" width="1.7857%" height="15" fill="rgb(218,26,49)"/><text x="92.1456%" y="575.50">t..</text></g><g><title>tokio::time::driver::atomic_stack::AtomicStack::take (2 samples, 0.27%)</title><rect x="93.4066%" y="549" width="0.2747%" height="15" fill="rgb(233,197,48)"/><text x="93.6566%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (2 samples, 0.27%)</title><rect x="93.4066%" y="533" width="0.2747%" height="15" fill="rgb(252,181,51)"/><text x="93.6566%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.27%)</title><rect x="93.4066%" y="517" width="0.2747%" height="15" fill="rgb(253,90,19)"/><text x="93.6566%" y="527.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;T&gt; as tokio::park::Park&gt;::park (139 samples, 19.09%)</title><rect x="74.7253%" y="581" width="19.0934%" height="15" fill="rgb(215,171,30)"/><text x="74.9753%" y="591.50">&lt;tokio::time::driver::Driver&lt;T..</text></g><g><title>tokio::time::wheel::Wheel&lt;T&gt;::poll_at (1 samples, 0.14%)</title><rect x="93.6813%" y="565" width="0.1374%" height="15" fill="rgb(214,222,9)"/><text x="93.9313%" y="575.50"></text></g><g><title>tokio::time::wheel::Wheel&lt;T&gt;::next_expiration (1 samples, 0.14%)</title><rect x="93.6813%" y="549" width="0.1374%" height="15" fill="rgb(223,3,22)"/><text x="93.9313%" y="559.50"></text></g><g><title>tokio::time::wheel::level::Level&lt;T&gt;::next_expiration (1 samples, 0.14%)</title><rect x="93.6813%" y="533" width="0.1374%" height="15" fill="rgb(225,196,46)"/><text x="93.9313%" y="543.50"></text></g><g><title>tokio::time::wheel::level::Level&lt;T&gt;::next_occupied_slot (1 samples, 0.14%)</title><rect x="93.6813%" y="517" width="0.1374%" height="15" fill="rgb(209,110,37)"/><text x="93.9313%" y="527.50"></text></g><g><title>tokio::runtime::park::Inner::park_driver (142 samples, 19.51%)</title><rect x="74.4505%" y="613" width="19.5055%" height="15" fill="rgb(249,89,12)"/><text x="74.7005%" y="623.50">tokio::runtime::park::Inner::pa..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (142 samples, 19.51%)</title><rect x="74.4505%" y="597" width="19.5055%" height="15" fill="rgb(226,27,33)"/><text x="74.7005%" y="607.50">&lt;tokio::park::either::Either&lt;A,..</text></g><g><title>__sched_yield (1 samples, 0.14%)</title><rect x="93.8187%" y="581" width="0.1374%" height="15" fill="rgb(213,82,22)"/><text x="94.0687%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="93.8187%" y="565" width="0.1374%" height="15" fill="rgb(248,140,0)"/><text x="94.0687%" y="575.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (308 samples, 42.31%)</title><rect x="51.7857%" y="645" width="42.3077%" height="15" fill="rgb(228,106,3)"/><text x="52.0357%" y="655.50">&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park</text></g><g><title>tokio::runtime::park::Inner::park (308 samples, 42.31%)</title><rect x="51.7857%" y="629" width="42.3077%" height="15" fill="rgb(209,23,37)"/><text x="52.0357%" y="639.50">tokio::runtime::park::Inner::park</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (1 samples, 0.14%)</title><rect x="93.9560%" y="613" width="0.1374%" height="15" fill="rgb(241,93,50)"/><text x="94.2060%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.14%)</title><rect x="93.9560%" y="597" width="0.1374%" height="15" fill="rgb(253,46,43)"/><text x="94.2060%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.14%)</title><rect x="93.9560%" y="581" width="0.1374%" height="15" fill="rgb(226,206,43)"/><text x="94.2060%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::queue::worker::Worker&lt;T&gt;::is_empty (1 samples, 0.14%)</title><rect x="94.0934%" y="629" width="0.1374%" height="15" fill="rgb(217,54,7)"/><text x="94.3434%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::queue::local::Queue&lt;T&gt;::is_empty (1 samples, 0.14%)</title><rect x="94.0934%" y="613" width="0.1374%" height="15" fill="rgb(223,5,52)"/><text x="94.3434%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.14%)</title><rect x="94.0934%" y="597" width="0.1374%" height="15" fill="rgb(206,52,46)"/><text x="94.3434%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="94.0934%" y="581" width="0.1374%" height="15" fill="rgb(253,136,11)"/><text x="94.3434%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::final_work_sweep (2 samples, 0.27%)</title><rect x="94.0934%" y="645" width="0.2747%" height="15" fill="rgb(208,106,33)"/><text x="94.3434%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::owned (1 samples, 0.14%)</title><rect x="94.2308%" y="629" width="0.1374%" height="15" fill="rgb(206,54,4)"/><text x="94.4808%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::index (1 samples, 0.14%)</title><rect x="94.2308%" y="613" width="0.1374%" height="15" fill="rgb(213,3,15)"/><text x="94.4808%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.14%)</title><rect x="94.3681%" y="629" width="0.1374%" height="15" fill="rgb(252,211,39)"/><text x="94.6181%" y="639.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="94.3681%" y="613" width="0.1374%" height="15" fill="rgb(223,6,36)"/><text x="94.6181%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.27%)</title><rect x="94.6429%" y="613" width="0.2747%" height="15" fill="rgb(252,169,45)"/><text x="94.8929%" y="623.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (2 samples, 0.27%)</title><rect x="94.6429%" y="597" width="0.2747%" height="15" fill="rgb(212,48,26)"/><text x="94.8929%" y="607.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.27%)</title><rect x="94.6429%" y="581" width="0.2747%" height="15" fill="rgb(251,102,48)"/><text x="94.8929%" y="591.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.27%)</title><rect x="94.6429%" y="565" width="0.2747%" height="15" fill="rgb(243,208,16)"/><text x="94.8929%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::transition_from_parked (5 samples, 0.69%)</title><rect x="94.3681%" y="645" width="0.6868%" height="15" fill="rgb(219,96,24)"/><text x="94.6181%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::unpark_worker_by_id (4 samples, 0.55%)</title><rect x="94.5055%" y="629" width="0.5495%" height="15" fill="rgb(219,33,29)"/><text x="94.7555%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (1 samples, 0.14%)</title><rect x="94.9176%" y="613" width="0.1374%" height="15" fill="rgb(223,176,5)"/><text x="95.1676%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.14%)</title><rect x="94.9176%" y="597" width="0.1374%" height="15" fill="rgb(228,140,14)"/><text x="95.1676%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.14%)</title><rect x="94.9176%" y="581" width="0.1374%" height="15" fill="rgb(217,179,31)"/><text x="95.1676%" y="591.50"></text></g><g><title>core::ptr::real_drop_in_place (3 samples, 0.41%)</title><rect x="95.0549%" y="613" width="0.4121%" height="15" fill="rgb(230,9,30)"/><text x="95.3049%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.41%)</title><rect x="95.0549%" y="597" width="0.4121%" height="15" fill="rgb(230,136,20)"/><text x="95.3049%" y="607.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (3 samples, 0.41%)</title><rect x="95.0549%" y="581" width="0.4121%" height="15" fill="rgb(215,210,22)"/><text x="95.3049%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.41%)</title><rect x="95.0549%" y="565" width="0.4121%" height="15" fill="rgb(218,43,5)"/><text x="95.3049%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.41%)</title><rect x="95.0549%" y="549" width="0.4121%" height="15" fill="rgb(216,11,5)"/><text x="95.3049%" y="559.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.41%)</title><rect x="95.0549%" y="533" width="0.4121%" height="15" fill="rgb(209,82,29)"/><text x="95.3049%" y="543.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="95.4670%" y="597" width="0.1374%" height="15" fill="rgb(244,115,12)"/><text x="95.7170%" y="607.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (1 samples, 0.14%)</title><rect x="95.4670%" y="581" width="0.1374%" height="15" fill="rgb(222,82,18)"/><text x="95.7170%" y="591.50"></text></g><g><title>std::thread::panicking (1 samples, 0.14%)</title><rect x="95.4670%" y="565" width="0.1374%" height="15" fill="rgb(249,227,8)"/><text x="95.7170%" y="575.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.14%)</title><rect x="95.4670%" y="549" width="0.1374%" height="15" fill="rgb(253,141,45)"/><text x="95.7170%" y="559.50"></text></g><g><title>std::panicking::update_panic_count (1 samples, 0.14%)</title><rect x="95.4670%" y="533" width="0.1374%" height="15" fill="rgb(234,184,4)"/><text x="95.7170%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.14%)</title><rect x="95.4670%" y="517" width="0.1374%" height="15" fill="rgb(218,194,23)"/><text x="95.7170%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.14%)</title><rect x="95.4670%" y="501" width="0.1374%" height="15" fill="rgb(235,66,41)"/><text x="95.7170%" y="511.50"></text></g><g><title>std::panicking::update_panic_count::PANIC_COUNT::__getit (1 samples, 0.14%)</title><rect x="95.4670%" y="485" width="0.1374%" height="15" fill="rgb(245,217,1)"/><text x="95.7170%" y="495.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.14%)</title><rect x="95.4670%" y="469" width="0.1374%" height="15" fill="rgb(229,91,1)"/><text x="95.7170%" y="479.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.14%)</title><rect x="95.4670%" y="453" width="0.1374%" height="15" fill="rgb(207,101,30)"/><text x="95.7170%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.14%)</title><rect x="95.4670%" y="437" width="0.1374%" height="15" fill="rgb(223,82,49)"/><text x="95.7170%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.41%)</title><rect x="95.4670%" y="613" width="0.4121%" height="15" fill="rgb(218,167,17)"/><text x="95.7170%" y="623.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (2 samples, 0.27%)</title><rect x="95.6044%" y="597" width="0.2747%" height="15" fill="rgb(208,103,14)"/><text x="95.8544%" y="607.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.27%)</title><rect x="95.6044%" y="581" width="0.2747%" height="15" fill="rgb(238,20,8)"/><text x="95.8544%" y="591.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.27%)</title><rect x="95.6044%" y="565" width="0.2747%" height="15" fill="rgb(218,80,54)"/><text x="95.8544%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::park (323 samples, 44.37%)</title><rect x="51.7857%" y="661" width="44.3681%" height="15" fill="rgb(240,144,17)"/><text x="52.0357%" y="671.50">tokio::runtime::thread_pool::worker::GenerationGuard::park</text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::transition_to_parked (8 samples, 1.10%)</title><rect x="95.0549%" y="645" width="1.0989%" height="15" fill="rgb(245,27,50)"/><text x="95.3049%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (8 samples, 1.10%)</title><rect x="95.0549%" y="629" width="1.0989%" height="15" fill="rgb(251,51,7)"/><text x="95.3049%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_unparked (2 samples, 0.27%)</title><rect x="95.8791%" y="613" width="0.2747%" height="15" fill="rgb(245,217,29)"/><text x="96.1291%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.27%)</title><rect x="95.8791%" y="597" width="0.2747%" height="15" fill="rgb(221,176,29)"/><text x="96.1291%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.27%)</title><rect x="95.8791%" y="581" width="0.2747%" height="15" fill="rgb(212,180,24)"/><text x="96.1291%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::drain_tasks_pending_drop (2 samples, 0.27%)</title><rect x="96.1538%" y="645" width="0.2747%" height="15" fill="rgb(254,24,2)"/><text x="96.4038%" y="655.50"></text></g><g><title>tokio::task::stack::TransferStack&lt;T&gt;::drain (2 samples, 0.27%)</title><rect x="96.1538%" y="629" width="0.2747%" height="15" fill="rgb(230,100,2)"/><text x="96.4038%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (2 samples, 0.27%)</title><rect x="96.1538%" y="613" width="0.2747%" height="15" fill="rgb(219,142,25)"/><text x="96.4038%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.27%)</title><rect x="96.1538%" y="597" width="0.2747%" height="15" fill="rgb(240,73,43)"/><text x="96.4038%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.14%)</title><rect x="96.4286%" y="565" width="0.1374%" height="15" fill="rgb(214,114,15)"/><text x="96.6786%" y="575.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="96.4286%" y="549" width="0.1374%" height="15" fill="rgb(207,130,4)"/><text x="96.6786%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.27%)</title><rect x="96.4286%" y="613" width="0.2747%" height="15" fill="rgb(221,25,40)"/><text x="96.6786%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::queue::worker::Worker&lt;T&gt;::pop_local_first::_{{closure}} (2 samples, 0.27%)</title><rect x="96.4286%" y="597" width="0.2747%" height="15" fill="rgb(241,184,7)"/><text x="96.6786%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::queue::global::Queue&lt;T&gt;::pop (2 samples, 0.27%)</title><rect x="96.4286%" y="581" width="0.2747%" height="15" fill="rgb(235,159,4)"/><text x="96.6786%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.14%)</title><rect x="96.5659%" y="565" width="0.1374%" height="15" fill="rgb(214,87,48)"/><text x="96.8159%" y="575.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (1 samples, 0.14%)</title><rect x="96.5659%" y="549" width="0.1374%" height="15" fill="rgb(246,198,24)"/><text x="96.8159%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.14%)</title><rect x="96.5659%" y="533" width="0.1374%" height="15" fill="rgb(209,66,40)"/><text x="96.8159%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.14%)</title><rect x="96.5659%" y="517" width="0.1374%" height="15" fill="rgb(233,147,39)"/><text x="96.8159%" y="527.50"></text></g><g><title>__lll_lock_wait (1 samples, 0.14%)</title><rect x="96.5659%" y="501" width="0.1374%" height="15" fill="rgb(231,145,52)"/><text x="96.8159%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="485" width="0.1374%" height="15" fill="rgb(206,20,26)"/><text x="96.8159%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="469" width="0.1374%" height="15" fill="rgb(238,220,4)"/><text x="96.8159%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="453" width="0.1374%" height="15" fill="rgb(252,195,42)"/><text x="96.8159%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="437" width="0.1374%" height="15" fill="rgb(209,10,6)"/><text x="96.8159%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="421" width="0.1374%" height="15" fill="rgb(229,3,52)"/><text x="96.8159%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="405" width="0.1374%" height="15" fill="rgb(253,49,37)"/><text x="96.8159%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="389" width="0.1374%" height="15" fill="rgb(240,103,49)"/><text x="96.8159%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="373" width="0.1374%" height="15" fill="rgb(250,182,30)"/><text x="96.8159%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="357" width="0.1374%" height="15" fill="rgb(248,8,30)"/><text x="96.8159%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="341" width="0.1374%" height="15" fill="rgb(237,120,30)"/><text x="96.8159%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="325" width="0.1374%" height="15" fill="rgb(221,146,34)"/><text x="96.8159%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="309" width="0.1374%" height="15" fill="rgb(242,55,13)"/><text x="96.8159%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="293" width="0.1374%" height="15" fill="rgb(242,112,31)"/><text x="96.8159%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="96.5659%" y="277" width="0.1374%" height="15" fill="rgb(249,192,27)"/><text x="96.8159%" y="287.50"></text></g><g><title>tokio::runtime::thread_pool::queue::worker::Worker&lt;T&gt;::pop_local_first (3 samples, 0.41%)</title><rect x="96.4286%" y="629" width="0.4121%" height="15" fill="rgb(208,204,44)"/><text x="96.6786%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::queue::worker::Worker&lt;T&gt;::local_pop (1 samples, 0.14%)</title><rect x="96.7033%" y="613" width="0.1374%" height="15" fill="rgb(208,93,54)"/><text x="96.9533%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::queue::worker::Worker&lt;T&gt;::local (1 samples, 0.14%)</title><rect x="96.7033%" y="597" width="0.1374%" height="15" fill="rgb(242,1,31)"/><text x="96.9533%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::find_local_work (4 samples, 0.55%)</title><rect x="96.4286%" y="645" width="0.5495%" height="15" fill="rgb(241,83,25)"/><text x="96.6786%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::park_light (1 samples, 0.14%)</title><rect x="96.8407%" y="629" width="0.1374%" height="15" fill="rgb(205,169,50)"/><text x="97.0907%" y="639.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (1 samples, 0.14%)</title><rect x="96.8407%" y="613" width="0.1374%" height="15" fill="rgb(239,186,37)"/><text x="97.0907%" y="623.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (1 samples, 0.14%)</title><rect x="96.8407%" y="597" width="0.1374%" height="15" fill="rgb(205,221,10)"/><text x="97.0907%" y="607.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;T&gt; as tokio::park::Park&gt;::park_timeout (1 samples, 0.14%)</title><rect x="96.8407%" y="581" width="0.1374%" height="15" fill="rgb(218,196,15)"/><text x="97.0907%" y="591.50"></text></g><g><title>tokio::time::driver::Driver&lt;T&gt;::process (1 samples, 0.14%)</title><rect x="96.8407%" y="565" width="0.1374%" height="15" fill="rgb(218,196,35)"/><text x="97.0907%" y="575.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="96.8407%" y="549" width="0.1374%" height="15" fill="rgb(233,63,24)"/><text x="97.0907%" y="559.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.14%)</title><rect x="96.8407%" y="533" width="0.1374%" height="15" fill="rgb(225,8,4)"/><text x="97.0907%" y="543.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.14%)</title><rect x="96.8407%" y="517" width="0.1374%" height="15" fill="rgb(234,105,35)"/><text x="97.0907%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.14%)</title><rect x="96.8407%" y="501" width="0.1374%" height="15" fill="rgb(236,21,32)"/><text x="97.0907%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.14%)</title><rect x="96.8407%" y="485" width="0.1374%" height="15" fill="rgb(228,109,6)"/><text x="97.0907%" y="495.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1 samples, 0.14%)</title><rect x="96.9780%" y="597" width="0.1374%" height="15" fill="rgb(229,215,31)"/><text x="97.2280%" y="607.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (1 samples, 0.14%)</title><rect x="96.9780%" y="581" width="0.1374%" height="15" fill="rgb(221,52,54)"/><text x="97.2280%" y="591.50"></text></g><g><title>tokio::io::driver::Handle::inner (1 samples, 0.14%)</title><rect x="96.9780%" y="565" width="0.1374%" height="15" fill="rgb(252,129,43)"/><text x="97.2280%" y="575.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (1 samples, 0.14%)</title><rect x="96.9780%" y="549" width="0.1374%" height="15" fill="rgb(248,183,27)"/><text x="97.2280%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.14%)</title><rect x="96.9780%" y="533" width="0.1374%" height="15" fill="rgb(250,0,22)"/><text x="97.2280%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.14%)</title><rect x="96.9780%" y="517" width="0.1374%" height="15" fill="rgb(213,166,10)"/><text x="97.2280%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::slice::Set::notify_work (2 samples, 0.27%)</title><rect x="96.9780%" y="629" width="0.2747%" height="15" fill="rgb(207,163,36)"/><text x="97.2280%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::shared::Shared::unpark (2 samples, 0.27%)</title><rect x="96.9780%" y="613" width="0.2747%" height="15" fill="rgb(208,122,22)"/><text x="97.2280%" y="623.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (1 samples, 0.14%)</title><rect x="97.1154%" y="597" width="0.1374%" height="15" fill="rgb(207,104,49)"/><text x="97.3654%" y="607.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.14%)</title><rect x="97.1154%" y="581" width="0.1374%" height="15" fill="rgb(248,211,50)"/><text x="97.3654%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.14%)</title><rect x="97.1154%" y="565" width="0.1374%" height="15" fill="rgb(217,13,45)"/><text x="97.3654%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.14%)</title><rect x="97.1154%" y="549" width="0.1374%" height="15" fill="rgb(211,216,49)"/><text x="97.3654%" y="559.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (2 samples, 0.27%)</title><rect x="97.2527%" y="581" width="0.2747%" height="15" fill="rgb(221,58,53)"/><text x="97.5027%" y="591.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (2 samples, 0.27%)</title><rect x="97.2527%" y="565" width="0.2747%" height="15" fill="rgb(220,112,41)"/><text x="97.5027%" y="575.50"></text></g><g><title>mio::poll::SetReadiness::set_readiness (2 samples, 0.27%)</title><rect x="97.2527%" y="549" width="0.2747%" height="15" fill="rgb(236,38,28)"/><text x="97.5027%" y="559.50"></text></g><g><title>mio::poll::RegistrationInner::set_readiness (2 samples, 0.27%)</title><rect x="97.2527%" y="533" width="0.2747%" height="15" fill="rgb(227,195,22)"/><text x="97.5027%" y="543.50"></text></g><g><title>mio::poll::ReadinessNode::enqueue_with_wakeup (2 samples, 0.27%)</title><rect x="97.2527%" y="517" width="0.2747%" height="15" fill="rgb(214,55,33)"/><text x="97.5027%" y="527.50"></text></g><g><title>mio::poll::enqueue_with_wakeup (2 samples, 0.27%)</title><rect x="97.2527%" y="501" width="0.2747%" height="15" fill="rgb(248,80,13)"/><text x="97.5027%" y="511.50"></text></g><g><title>mio::poll::ReadinessQueueInner::enqueue_node_with_wakeup (2 samples, 0.27%)</title><rect x="97.2527%" y="485" width="0.2747%" height="15" fill="rgb(238,52,6)"/><text x="97.5027%" y="495.50"></text></g><g><title>mio::poll::ReadinessQueueInner::wakeup (2 samples, 0.27%)</title><rect x="97.2527%" y="469" width="0.2747%" height="15" fill="rgb(224,198,47)"/><text x="97.5027%" y="479.50"></text></g><g><title>mio::sys::unix::awakener::pipe::Awakener::wakeup (2 samples, 0.27%)</title><rect x="97.2527%" y="453" width="0.2747%" height="15" fill="rgb(233,171,20)"/><text x="97.5027%" y="463.50"></text></g><g><title>&lt;&amp;mio::sys::unix::io::Io as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="97.2527%" y="437" width="0.2747%" height="15" fill="rgb(241,30,25)"/><text x="97.5027%" y="447.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="97.2527%" y="421" width="0.2747%" height="15" fill="rgb(207,171,38)"/><text x="97.5027%" y="431.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.27%)</title><rect x="97.2527%" y="405" width="0.2747%" height="15" fill="rgb(234,70,1)"/><text x="97.5027%" y="415.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.27%)</title><rect x="97.2527%" y="389" width="0.2747%" height="15" fill="rgb(232,178,18)"/><text x="97.5027%" y="399.50"></text></g><g><title>__libc_write (2 samples, 0.27%)</title><rect x="97.2527%" y="373" width="0.2747%" height="15" fill="rgb(241,78,40)"/><text x="97.5027%" y="383.50"></text></g><g><title>__libc_write (2 samples, 0.27%)</title><rect x="97.2527%" y="357" width="0.2747%" height="15" fill="rgb(222,35,25)"/><text x="97.5027%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="341" width="0.2747%" height="15" fill="rgb(207,92,16)"/><text x="97.5027%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="325" width="0.2747%" height="15" fill="rgb(216,59,51)"/><text x="97.5027%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="309" width="0.2747%" height="15" fill="rgb(213,80,28)"/><text x="97.5027%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="293" width="0.2747%" height="15" fill="rgb(220,93,7)"/><text x="97.5027%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="277" width="0.2747%" height="15" fill="rgb(225,24,44)"/><text x="97.5027%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="261" width="0.2747%" height="15" fill="rgb(243,74,40)"/><text x="97.5027%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="245" width="0.2747%" height="15" fill="rgb(228,39,7)"/><text x="97.5027%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="229" width="0.2747%" height="15" fill="rgb(227,79,8)"/><text x="97.5027%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="213" width="0.2747%" height="15" fill="rgb(236,58,11)"/><text x="97.5027%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="197" width="0.2747%" height="15" fill="rgb(249,63,35)"/><text x="97.5027%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="181" width="0.2747%" height="15" fill="rgb(252,114,16)"/><text x="97.5027%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="165" width="0.2747%" height="15" fill="rgb(254,151,24)"/><text x="97.5027%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="149" width="0.2747%" height="15" fill="rgb(253,54,39)"/><text x="97.5027%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="133" width="0.2747%" height="15" fill="rgb(243,25,45)"/><text x="97.5027%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="117" width="0.2747%" height="15" fill="rgb(234,134,9)"/><text x="97.5027%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="101" width="0.2747%" height="15" fill="rgb(227,166,31)"/><text x="97.5027%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="85" width="0.2747%" height="15" fill="rgb(245,143,41)"/><text x="97.5027%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="69" width="0.2747%" height="15" fill="rgb(238,181,32)"/><text x="97.5027%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="53" width="0.2747%" height="15" fill="rgb(224,113,18)"/><text x="97.5027%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.27%)</title><rect x="97.2527%" y="37" width="0.2747%" height="15" fill="rgb(240,229,28)"/><text x="97.5027%" y="47.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::transition_from_searching (13 samples, 1.79%)</title><rect x="97.2527%" y="629" width="1.7857%" height="15" fill="rgb(250,185,3)"/><text x="97.5027%" y="639.50">t..</text></g><g><title>tokio::runtime::thread_pool::slice::Set::notify_work (13 samples, 1.79%)</title><rect x="97.2527%" y="613" width="1.7857%" height="15" fill="rgb(212,59,25)"/><text x="97.5027%" y="623.50">t..</text></g><g><title>tokio::runtime::thread_pool::shared::Shared::unpark (13 samples, 1.79%)</title><rect x="97.2527%" y="597" width="1.7857%" height="15" fill="rgb(221,87,20)"/><text x="97.5027%" y="607.50">t..</text></g><g><title>__pthread_cond_signal (11 samples, 1.51%)</title><rect x="97.5275%" y="581" width="1.5110%" height="15" fill="rgb(213,74,28)"/><text x="97.7775%" y="591.50"></text></g><g><title>futex_wake (11 samples, 1.51%)</title><rect x="97.5275%" y="565" width="1.5110%" height="15" fill="rgb(224,132,34)"/><text x="97.7775%" y="575.50"></text></g><g><title>[unknown] (11 samples, 1.51%)</title><rect x="97.5275%" y="549" width="1.5110%" height="15" fill="rgb(222,101,24)"/><text x="97.7775%" y="559.50"></text></g><g><title>[unknown] (11 samples, 1.51%)</title><rect x="97.5275%" y="533" width="1.5110%" height="15" fill="rgb(254,142,4)"/><text x="97.7775%" y="543.50"></text></g><g><title>[unknown] (11 samples, 1.51%)</title><rect x="97.5275%" y="517" width="1.5110%" height="15" fill="rgb(230,229,49)"/><text x="97.7775%" y="527.50"></text></g><g><title>[unknown] (11 samples, 1.51%)</title><rect x="97.5275%" y="501" width="1.5110%" height="15" fill="rgb(238,70,47)"/><text x="97.7775%" y="511.50"></text></g><g><title>[unknown] (11 samples, 1.51%)</title><rect x="97.5275%" y="485" width="1.5110%" height="15" fill="rgb(231,160,17)"/><text x="97.7775%" y="495.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="97.8022%" y="469" width="1.2363%" height="15" fill="rgb(218,68,53)"/><text x="98.0522%" y="479.50"></text></g><g><title>[unknown] (9 samples, 1.24%)</title><rect x="97.8022%" y="453" width="1.2363%" height="15" fill="rgb(236,111,10)"/><text x="98.0522%" y="463.50"></text></g><g><title>[unknown] (8 samples, 1.10%)</title><rect x="97.9396%" y="437" width="1.0989%" height="15" fill="rgb(224,34,41)"/><text x="98.1896%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.82%)</title><rect x="98.2143%" y="421" width="0.8242%" height="15" fill="rgb(241,118,19)"/><text x="98.4643%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="98.4890%" y="405" width="0.5495%" height="15" fill="rgb(238,129,25)"/><text x="98.7390%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="98.4890%" y="389" width="0.5495%" height="15" fill="rgb(238,22,31)"/><text x="98.7390%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.55%)</title><rect x="98.4890%" y="373" width="0.5495%" height="15" fill="rgb(222,174,48)"/><text x="98.7390%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.14%)</title><rect x="98.9011%" y="357" width="0.1374%" height="15" fill="rgb(206,152,40)"/><text x="99.1511%" y="367.50"></text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (3 samples, 0.41%)</title><rect x="99.0385%" y="581" width="0.4121%" height="15" fill="rgb(218,99,54)"/><text x="99.2885%" y="591.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}} (3 samples, 0.41%)</title><rect x="99.0385%" y="565" width="0.4121%" height="15" fill="rgb(220,174,26)"/><text x="99.2885%" y="575.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.41%)</title><rect x="99.0385%" y="549" width="0.4121%" height="15" fill="rgb(245,116,9)"/><text x="99.2885%" y="559.50"></text></g><g><title>std::panicking::try (3 samples, 0.41%)</title><rect x="99.0385%" y="533" width="0.4121%" height="15" fill="rgb(209,72,35)"/><text x="99.2885%" y="543.50"></text></g><g><title>__rust_maybe_catch_panic (3 samples, 0.41%)</title><rect x="99.0385%" y="517" width="0.4121%" height="15" fill="rgb(226,126,21)"/><text x="99.2885%" y="527.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.27%)</title><rect x="99.1758%" y="501" width="0.2747%" height="15" fill="rgb(227,192,1)"/><text x="99.4258%" y="511.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (2 samples, 0.27%)</title><rect x="99.1758%" y="485" width="0.2747%" height="15" fill="rgb(237,180,29)"/><text x="99.4258%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.27%)</title><rect x="99.1758%" y="469" width="0.2747%" height="15" fill="rgb(230,197,35)"/><text x="99.4258%" y="479.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}}::_{{closure}} (2 samples, 0.27%)</title><rect x="99.1758%" y="453" width="0.2747%" height="15" fill="rgb(246,193,31)"/><text x="99.4258%" y="463.50"></text></g><g><title>tokio::task::core::Core&lt;T&gt;::poll (2 samples, 0.27%)</title><rect x="99.1758%" y="437" width="0.2747%" height="15" fill="rgb(241,36,4)"/><text x="99.4258%" y="447.50"></text></g><g><title>&lt;std::future::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.14%)</title><rect x="99.3132%" y="421" width="0.1374%" height="15" fill="rgb(241,130,17)"/><text x="99.5632%" y="431.50"></text></g><g><title>rumq_broker::accept_loop::_{{closure}}::_{{closure}} (1 samples, 0.14%)</title><rect x="99.3132%" y="405" width="0.1374%" height="15" fill="rgb(206,137,32)"/><text x="99.5632%" y="415.50"></text></g><g><title>std::future::TLS_CX::__getit (1 samples, 0.14%)</title><rect x="99.3132%" y="389" width="0.1374%" height="15" fill="rgb(237,228,51)"/><text x="99.5632%" y="399.50"></text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::run_task (19 samples, 2.61%)</title><rect x="96.9780%" y="645" width="2.6099%" height="15" fill="rgb(243,6,42)"/><text x="97.2280%" y="655.50">to..</text></g><g><title>tokio::task::Task&lt;S&gt;::run (4 samples, 0.55%)</title><rect x="99.0385%" y="629" width="0.5495%" height="15" fill="rgb(251,74,28)"/><text x="99.2885%" y="639.50"></text></g><g><title>tokio::task::raw::RawTask::poll (4 samples, 0.55%)</title><rect x="99.0385%" y="613" width="0.5495%" height="15" fill="rgb(218,20,49)"/><text x="99.2885%" y="623.50"></text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.55%)</title><rect x="99.0385%" y="597" width="0.5495%" height="15" fill="rgb(238,28,14)"/><text x="99.2885%" y="607.50"></text></g><g><title>tokio::task::state::State::transition_to_idle (1 samples, 0.14%)</title><rect x="99.4505%" y="581" width="0.1374%" height="15" fill="rgb(229,40,46)"/><text x="99.7005%" y="591.50"></text></g><g><title>all (728 samples, 100%)</title><rect x="0.0000%" y="1429" width="100.0000%" height="15" fill="rgb(244,195,20)"/><text x="0.2500%" y="1439.50"></text></g><g><title>tokio-runtime-w (612 samples, 84.07%)</title><rect x="15.9341%" y="1413" width="84.0659%" height="15" fill="rgb(253,56,35)"/><text x="16.1841%" y="1423.50">tokio-runtime-w</text></g><g><title>clone (351 samples, 48.21%)</title><rect x="51.7857%" y="1397" width="48.2143%" height="15" fill="rgb(210,149,44)"/><text x="52.0357%" y="1407.50">clone</text></g><g><title>start_thread (351 samples, 48.21%)</title><rect x="51.7857%" y="1381" width="48.2143%" height="15" fill="rgb(240,135,12)"/><text x="52.0357%" y="1391.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (351 samples, 48.21%)</title><rect x="51.7857%" y="1365" width="48.2143%" height="15" fill="rgb(251,24,50)"/><text x="52.0357%" y="1375.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (351 samples, 48.21%)</title><rect x="51.7857%" y="1349" width="48.2143%" height="15" fill="rgb(243,200,47)"/><text x="52.0357%" y="1359.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (351 samples, 48.21%)</title><rect x="51.7857%" y="1333" width="48.2143%" height="15" fill="rgb(224,166,26)"/><text x="52.0357%" y="1343.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (351 samples, 48.21%)</title><rect x="51.7857%" y="1317" width="48.2143%" height="15" fill="rgb(233,0,47)"/><text x="52.0357%" y="1327.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (351 samples, 48.21%)</title><rect x="51.7857%" y="1301" width="48.2143%" height="15" fill="rgb(253,80,5)"/><text x="52.0357%" y="1311.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="1285" width="48.2143%" height="15" fill="rgb(214,133,25)"/><text x="52.0357%" y="1295.50">std::thread::Builder::spawn_unchecked::_{{closure}}</text></g><g><title>std::panic::catch_unwind (351 samples, 48.21%)</title><rect x="51.7857%" y="1269" width="48.2143%" height="15" fill="rgb(209,27,14)"/><text x="52.0357%" y="1279.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (351 samples, 48.21%)</title><rect x="51.7857%" y="1253" width="48.2143%" height="15" fill="rgb(219,102,51)"/><text x="52.0357%" y="1263.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (351 samples, 48.21%)</title><rect x="51.7857%" y="1237" width="48.2143%" height="15" fill="rgb(237,18,16)"/><text x="52.0357%" y="1247.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (351 samples, 48.21%)</title><rect x="51.7857%" y="1221" width="48.2143%" height="15" fill="rgb(241,85,17)"/><text x="52.0357%" y="1231.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (351 samples, 48.21%)</title><rect x="51.7857%" y="1205" width="48.2143%" height="15" fill="rgb(236,90,42)"/><text x="52.0357%" y="1215.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="1189" width="48.2143%" height="15" fill="rgb(249,57,21)"/><text x="52.0357%" y="1199.50">std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (351 samples, 48.21%)</title><rect x="51.7857%" y="1173" width="48.2143%" height="15" fill="rgb(243,12,36)"/><text x="52.0357%" y="1183.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="1157" width="48.2143%" height="15" fill="rgb(253,128,47)"/><text x="52.0357%" y="1167.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::handle::Handle::enter (351 samples, 48.21%)</title><rect x="51.7857%" y="1141" width="48.2143%" height="15" fill="rgb(207,33,20)"/><text x="52.0357%" y="1151.50">tokio::runtime::handle::Handle::enter</text></g><g><title>tokio::runtime::context::enter (351 samples, 48.21%)</title><rect x="51.7857%" y="1125" width="48.2143%" height="15" fill="rgb(233,215,35)"/><text x="52.0357%" y="1135.50">tokio::runtime::context::enter</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="1109" width="48.2143%" height="15" fill="rgb(249,188,52)"/><text x="52.0357%" y="1119.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}::_{{closure..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (351 samples, 48.21%)</title><rect x="51.7857%" y="1093" width="48.2143%" height="15" fill="rgb(225,12,32)"/><text x="52.0357%" y="1103.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::run_task (351 samples, 48.21%)</title><rect x="51.7857%" y="1077" width="48.2143%" height="15" fill="rgb(247,98,14)"/><text x="52.0357%" y="1087.50">tokio::runtime::blocking::pool::run_task</text></g><g><title>tokio::task::Task&lt;S&gt;::run (351 samples, 48.21%)</title><rect x="51.7857%" y="1061" width="48.2143%" height="15" fill="rgb(247,219,48)"/><text x="52.0357%" y="1071.50">tokio::task::Task&lt;S&gt;::run</text></g><g><title>tokio::task::raw::RawTask::poll (351 samples, 48.21%)</title><rect x="51.7857%" y="1045" width="48.2143%" height="15" fill="rgb(253,60,48)"/><text x="52.0357%" y="1055.50">tokio::task::raw::RawTask::poll</text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll (351 samples, 48.21%)</title><rect x="51.7857%" y="1029" width="48.2143%" height="15" fill="rgb(245,15,52)"/><text x="52.0357%" y="1039.50">tokio::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut (351 samples, 48.21%)</title><rect x="51.7857%" y="1013" width="48.2143%" height="15" fill="rgb(220,133,28)"/><text x="52.0357%" y="1023.50">tokio::loom::std::causal_cell::CausalCell&lt;T&gt;::with_mut</text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="997" width="48.2143%" height="15" fill="rgb(217,180,4)"/><text x="52.0357%" y="1007.50">tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>std::panic::catch_unwind (351 samples, 48.21%)</title><rect x="51.7857%" y="981" width="48.2143%" height="15" fill="rgb(251,24,1)"/><text x="52.0357%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (351 samples, 48.21%)</title><rect x="51.7857%" y="965" width="48.2143%" height="15" fill="rgb(212,185,49)"/><text x="52.0357%" y="975.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (351 samples, 48.21%)</title><rect x="51.7857%" y="949" width="48.2143%" height="15" fill="rgb(215,175,22)"/><text x="52.0357%" y="959.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (351 samples, 48.21%)</title><rect x="51.7857%" y="933" width="48.2143%" height="15" fill="rgb(250,205,14)"/><text x="52.0357%" y="943.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (351 samples, 48.21%)</title><rect x="51.7857%" y="917" width="48.2143%" height="15" fill="rgb(225,211,22)"/><text x="52.0357%" y="927.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>core::ops::function::FnOnce::call_once (351 samples, 48.21%)</title><rect x="51.7857%" y="901" width="48.2143%" height="15" fill="rgb(251,179,42)"/><text x="52.0357%" y="911.50">core::ops::function::FnOnce::call_once</text></g><g><title>tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}}::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="885" width="48.2143%" height="15" fill="rgb(208,216,51)"/><text x="52.0357%" y="895.50">tokio::task::harness::Harness&lt;T,S&gt;::poll::_{{closure}}::_{{closure}}</text></g><g><title>tokio::task::core::Core&lt;T&gt;::poll (351 samples, 48.21%)</title><rect x="51.7857%" y="869" width="48.2143%" height="15" fill="rgb(235,36,11)"/><text x="52.0357%" y="879.50">tokio::task::core::Core&lt;T&gt;::poll</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (351 samples, 48.21%)</title><rect x="51.7857%" y="853" width="48.2143%" height="15" fill="rgb(213,189,28)"/><text x="52.0357%" y="863.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Futur..</text></g><g><title>tokio::runtime::thread_pool::Workers::spawn::_{{closure}}::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="837" width="48.2143%" height="15" fill="rgb(227,203,42)"/><text x="52.0357%" y="847.50">tokio::runtime::thread_pool::Workers::spawn::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Worker::run (351 samples, 48.21%)</title><rect x="51.7857%" y="821" width="48.2143%" height="15" fill="rgb(244,72,36)"/><text x="52.0357%" y="831.50">tokio::runtime::thread_pool::worker::Worker::run</text></g><g><title>tokio::runtime::thread_pool::current::set (351 samples, 48.21%)</title><rect x="51.7857%" y="805" width="48.2143%" height="15" fill="rgb(213,53,17)"/><text x="52.0357%" y="815.50">tokio::runtime::thread_pool::current::set</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (351 samples, 48.21%)</title><rect x="51.7857%" y="789" width="48.2143%" height="15" fill="rgb(207,167,3)"/><text x="52.0357%" y="799.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (351 samples, 48.21%)</title><rect x="51.7857%" y="773" width="48.2143%" height="15" fill="rgb(216,98,30)"/><text x="52.0357%" y="783.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::thread_pool::current::set::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="757" width="48.2143%" height="15" fill="rgb(236,123,15)"/><text x="52.0357%" y="767.50">tokio::runtime::thread_pool::current::set::_{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Worker::run::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="741" width="48.2143%" height="15" fill="rgb(248,81,50)"/><text x="52.0357%" y="751.50">tokio::runtime::thread_pool::worker::Worker::run::_{{closure}}</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (351 samples, 48.21%)</title><rect x="51.7857%" y="725" width="48.2143%" height="15" fill="rgb(214,120,4)"/><text x="52.0357%" y="735.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (351 samples, 48.21%)</title><rect x="51.7857%" y="709" width="48.2143%" height="15" fill="rgb(208,179,34)"/><text x="52.0357%" y="719.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::thread_pool::worker::Worker::run::_{{closure}}::_{{closure}} (351 samples, 48.21%)</title><rect x="51.7857%" y="693" width="48.2143%" height="15" fill="rgb(227,140,7)"/><text x="52.0357%" y="703.50">tokio::runtime::thread_pool::worker::Worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::run (351 samples, 48.21%)</title><rect x="51.7857%" y="677" width="48.2143%" height="15" fill="rgb(214,22,6)"/><text x="52.0357%" y="687.50">tokio::runtime::thread_pool::worker::GenerationGuard::run</text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::process_available_work (28 samples, 3.85%)</title><rect x="96.1538%" y="661" width="3.8462%" height="15" fill="rgb(207,137,27)"/><text x="96.4038%" y="671.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::GenerationGuard::steal_work (3 samples, 0.41%)</title><rect x="99.5879%" y="645" width="0.4121%" height="15" fill="rgb(210,8,46)"/><text x="99.8379%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::queue::worker::Worker&lt;T&gt;::steal (3 samples, 0.41%)</title><rect x="99.5879%" y="629" width="0.4121%" height="15" fill="rgb(240,16,54)"/><text x="99.8379%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::queue::worker::Worker&lt;T&gt;::local (1 samples, 0.14%)</title><rect x="99.8626%" y="613" width="0.1374%" height="15" fill="rgb(211,209,29)"/><text x="100.1126%" y="623.50"></text></g></svg></svg>